"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/parse5";
exports.ids = ["vendor-chunks/parse5"];
exports.modules = {

/***/ "(rsc)/./node_modules/parse5/dist/common/doctype.js":
/*!****************************************************!*\
  !*** ./node_modules/parse5/dist/common/doctype.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getDocumentMode: () => (/* binding */ getDocumentMode),\n/* harmony export */   isConforming: () => (/* binding */ isConforming)\n/* harmony export */ });\n/* harmony import */ var _html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./html.js */ \"(rsc)/./node_modules/parse5/dist/common/html.js\");\n\n//Const\nconst VALID_DOCTYPE_NAME = \"html\";\nconst VALID_SYSTEM_ID = \"about:legacy-compat\";\nconst QUIRKS_MODE_SYSTEM_ID = \"http://www.ibm.com/data/dtd/v11/ibmxhtml1-transitional.dtd\";\nconst QUIRKS_MODE_PUBLIC_ID_PREFIXES = [\n    \"+//silmaril//dtd html pro v0r11 19970101//\",\n    \"-//as//dtd html 3.0 aswedit + extensions//\",\n    \"-//advasoft ltd//dtd html 3.0 aswedit + extensions//\",\n    \"-//ietf//dtd html 2.0 level 1//\",\n    \"-//ietf//dtd html 2.0 level 2//\",\n    \"-//ietf//dtd html 2.0 strict level 1//\",\n    \"-//ietf//dtd html 2.0 strict level 2//\",\n    \"-//ietf//dtd html 2.0 strict//\",\n    \"-//ietf//dtd html 2.0//\",\n    \"-//ietf//dtd html 2.1e//\",\n    \"-//ietf//dtd html 3.0//\",\n    \"-//ietf//dtd html 3.2 final//\",\n    \"-//ietf//dtd html 3.2//\",\n    \"-//ietf//dtd html 3//\",\n    \"-//ietf//dtd html level 0//\",\n    \"-//ietf//dtd html level 1//\",\n    \"-//ietf//dtd html level 2//\",\n    \"-//ietf//dtd html level 3//\",\n    \"-//ietf//dtd html strict level 0//\",\n    \"-//ietf//dtd html strict level 1//\",\n    \"-//ietf//dtd html strict level 2//\",\n    \"-//ietf//dtd html strict level 3//\",\n    \"-//ietf//dtd html strict//\",\n    \"-//ietf//dtd html//\",\n    \"-//metrius//dtd metrius presentational//\",\n    \"-//microsoft//dtd internet explorer 2.0 html strict//\",\n    \"-//microsoft//dtd internet explorer 2.0 html//\",\n    \"-//microsoft//dtd internet explorer 2.0 tables//\",\n    \"-//microsoft//dtd internet explorer 3.0 html strict//\",\n    \"-//microsoft//dtd internet explorer 3.0 html//\",\n    \"-//microsoft//dtd internet explorer 3.0 tables//\",\n    \"-//netscape comm. corp.//dtd html//\",\n    \"-//netscape comm. corp.//dtd strict html//\",\n    \"-//o'reilly and associates//dtd html 2.0//\",\n    \"-//o'reilly and associates//dtd html extended 1.0//\",\n    \"-//o'reilly and associates//dtd html extended relaxed 1.0//\",\n    \"-//sq//dtd html 2.0 hotmetal + extensions//\",\n    \"-//softquad software//dtd hotmetal pro 6.0::19990601::extensions to html 4.0//\",\n    \"-//softquad//dtd hotmetal pro 4.0::19971010::extensions to html 4.0//\",\n    \"-//spyglass//dtd html 2.0 extended//\",\n    \"-//sun microsystems corp.//dtd hotjava html//\",\n    \"-//sun microsystems corp.//dtd hotjava strict html//\",\n    \"-//w3c//dtd html 3 1995-03-24//\",\n    \"-//w3c//dtd html 3.2 draft//\",\n    \"-//w3c//dtd html 3.2 final//\",\n    \"-//w3c//dtd html 3.2//\",\n    \"-//w3c//dtd html 3.2s draft//\",\n    \"-//w3c//dtd html 4.0 frameset//\",\n    \"-//w3c//dtd html 4.0 transitional//\",\n    \"-//w3c//dtd html experimental 19960712//\",\n    \"-//w3c//dtd html experimental 970421//\",\n    \"-//w3c//dtd w3 html//\",\n    \"-//w3o//dtd w3 html 3.0//\",\n    \"-//webtechs//dtd mozilla html 2.0//\",\n    \"-//webtechs//dtd mozilla html//\"\n];\nconst QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...QUIRKS_MODE_PUBLIC_ID_PREFIXES,\n    \"-//w3c//dtd html 4.01 frameset//\",\n    \"-//w3c//dtd html 4.01 transitional//\"\n];\nconst QUIRKS_MODE_PUBLIC_IDS = new Set([\n    \"-//w3o//dtd w3 html strict 3.0//en//\",\n    \"-/w3c/dtd html 4.0 transitional/en\",\n    \"html\"\n]);\nconst LIMITED_QUIRKS_PUBLIC_ID_PREFIXES = [\n    \"-//w3c//dtd xhtml 1.0 frameset//\",\n    \"-//w3c//dtd xhtml 1.0 transitional//\"\n];\nconst LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES = [\n    ...LIMITED_QUIRKS_PUBLIC_ID_PREFIXES,\n    \"-//w3c//dtd html 4.01 frameset//\",\n    \"-//w3c//dtd html 4.01 transitional//\"\n];\n//Utils\nfunction hasPrefix(publicId, prefixes) {\n    return prefixes.some((prefix)=>publicId.startsWith(prefix));\n}\n//API\nfunction isConforming(token) {\n    return token.name === VALID_DOCTYPE_NAME && token.publicId === null && (token.systemId === null || token.systemId === VALID_SYSTEM_ID);\n}\nfunction getDocumentMode(token) {\n    if (token.name !== VALID_DOCTYPE_NAME) {\n        return _html_js__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT_MODE.QUIRKS;\n    }\n    const { systemId } = token;\n    if (systemId && systemId.toLowerCase() === QUIRKS_MODE_SYSTEM_ID) {\n        return _html_js__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT_MODE.QUIRKS;\n    }\n    let { publicId } = token;\n    if (publicId !== null) {\n        publicId = publicId.toLowerCase();\n        if (QUIRKS_MODE_PUBLIC_IDS.has(publicId)) {\n            return _html_js__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT_MODE.QUIRKS;\n        }\n        let prefixes = systemId === null ? QUIRKS_MODE_NO_SYSTEM_ID_PUBLIC_ID_PREFIXES : QUIRKS_MODE_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return _html_js__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT_MODE.QUIRKS;\n        }\n        prefixes = systemId === null ? LIMITED_QUIRKS_PUBLIC_ID_PREFIXES : LIMITED_QUIRKS_WITH_SYSTEM_ID_PUBLIC_ID_PREFIXES;\n        if (hasPrefix(publicId, prefixes)) {\n            return _html_js__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT_MODE.LIMITED_QUIRKS;\n        }\n    }\n    return _html_js__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT_MODE.NO_QUIRKS;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/common/doctype.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/common/error-codes.js":
/*!********************************************************!*\
  !*** ./node_modules/parse5/dist/common/error-codes.js ***!
  \********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ERR: () => (/* binding */ ERR)\n/* harmony export */ });\nvar ERR;\n(function(ERR) {\n    ERR[\"controlCharacterInInputStream\"] = \"control-character-in-input-stream\";\n    ERR[\"noncharacterInInputStream\"] = \"noncharacter-in-input-stream\";\n    ERR[\"surrogateInInputStream\"] = \"surrogate-in-input-stream\";\n    ERR[\"nonVoidHtmlElementStartTagWithTrailingSolidus\"] = \"non-void-html-element-start-tag-with-trailing-solidus\";\n    ERR[\"endTagWithAttributes\"] = \"end-tag-with-attributes\";\n    ERR[\"endTagWithTrailingSolidus\"] = \"end-tag-with-trailing-solidus\";\n    ERR[\"unexpectedSolidusInTag\"] = \"unexpected-solidus-in-tag\";\n    ERR[\"unexpectedNullCharacter\"] = \"unexpected-null-character\";\n    ERR[\"unexpectedQuestionMarkInsteadOfTagName\"] = \"unexpected-question-mark-instead-of-tag-name\";\n    ERR[\"invalidFirstCharacterOfTagName\"] = \"invalid-first-character-of-tag-name\";\n    ERR[\"unexpectedEqualsSignBeforeAttributeName\"] = \"unexpected-equals-sign-before-attribute-name\";\n    ERR[\"missingEndTagName\"] = \"missing-end-tag-name\";\n    ERR[\"unexpectedCharacterInAttributeName\"] = \"unexpected-character-in-attribute-name\";\n    ERR[\"unknownNamedCharacterReference\"] = \"unknown-named-character-reference\";\n    ERR[\"missingSemicolonAfterCharacterReference\"] = \"missing-semicolon-after-character-reference\";\n    ERR[\"unexpectedCharacterAfterDoctypeSystemIdentifier\"] = \"unexpected-character-after-doctype-system-identifier\";\n    ERR[\"unexpectedCharacterInUnquotedAttributeValue\"] = \"unexpected-character-in-unquoted-attribute-value\";\n    ERR[\"eofBeforeTagName\"] = \"eof-before-tag-name\";\n    ERR[\"eofInTag\"] = \"eof-in-tag\";\n    ERR[\"missingAttributeValue\"] = \"missing-attribute-value\";\n    ERR[\"missingWhitespaceBetweenAttributes\"] = \"missing-whitespace-between-attributes\";\n    ERR[\"missingWhitespaceAfterDoctypePublicKeyword\"] = \"missing-whitespace-after-doctype-public-keyword\";\n    ERR[\"missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers\"] = \"missing-whitespace-between-doctype-public-and-system-identifiers\";\n    ERR[\"missingWhitespaceAfterDoctypeSystemKeyword\"] = \"missing-whitespace-after-doctype-system-keyword\";\n    ERR[\"missingQuoteBeforeDoctypePublicIdentifier\"] = \"missing-quote-before-doctype-public-identifier\";\n    ERR[\"missingQuoteBeforeDoctypeSystemIdentifier\"] = \"missing-quote-before-doctype-system-identifier\";\n    ERR[\"missingDoctypePublicIdentifier\"] = \"missing-doctype-public-identifier\";\n    ERR[\"missingDoctypeSystemIdentifier\"] = \"missing-doctype-system-identifier\";\n    ERR[\"abruptDoctypePublicIdentifier\"] = \"abrupt-doctype-public-identifier\";\n    ERR[\"abruptDoctypeSystemIdentifier\"] = \"abrupt-doctype-system-identifier\";\n    ERR[\"cdataInHtmlContent\"] = \"cdata-in-html-content\";\n    ERR[\"incorrectlyOpenedComment\"] = \"incorrectly-opened-comment\";\n    ERR[\"eofInScriptHtmlCommentLikeText\"] = \"eof-in-script-html-comment-like-text\";\n    ERR[\"eofInDoctype\"] = \"eof-in-doctype\";\n    ERR[\"nestedComment\"] = \"nested-comment\";\n    ERR[\"abruptClosingOfEmptyComment\"] = \"abrupt-closing-of-empty-comment\";\n    ERR[\"eofInComment\"] = \"eof-in-comment\";\n    ERR[\"incorrectlyClosedComment\"] = \"incorrectly-closed-comment\";\n    ERR[\"eofInCdata\"] = \"eof-in-cdata\";\n    ERR[\"absenceOfDigitsInNumericCharacterReference\"] = \"absence-of-digits-in-numeric-character-reference\";\n    ERR[\"nullCharacterReference\"] = \"null-character-reference\";\n    ERR[\"surrogateCharacterReference\"] = \"surrogate-character-reference\";\n    ERR[\"characterReferenceOutsideUnicodeRange\"] = \"character-reference-outside-unicode-range\";\n    ERR[\"controlCharacterReference\"] = \"control-character-reference\";\n    ERR[\"noncharacterCharacterReference\"] = \"noncharacter-character-reference\";\n    ERR[\"missingWhitespaceBeforeDoctypeName\"] = \"missing-whitespace-before-doctype-name\";\n    ERR[\"missingDoctypeName\"] = \"missing-doctype-name\";\n    ERR[\"invalidCharacterSequenceAfterDoctypeName\"] = \"invalid-character-sequence-after-doctype-name\";\n    ERR[\"duplicateAttribute\"] = \"duplicate-attribute\";\n    ERR[\"nonConformingDoctype\"] = \"non-conforming-doctype\";\n    ERR[\"missingDoctype\"] = \"missing-doctype\";\n    ERR[\"misplacedDoctype\"] = \"misplaced-doctype\";\n    ERR[\"endTagWithoutMatchingOpenElement\"] = \"end-tag-without-matching-open-element\";\n    ERR[\"closingOfElementWithOpenChildElements\"] = \"closing-of-element-with-open-child-elements\";\n    ERR[\"disallowedContentInNoscriptInHead\"] = \"disallowed-content-in-noscript-in-head\";\n    ERR[\"openElementsLeftAfterEof\"] = \"open-elements-left-after-eof\";\n    ERR[\"abandonedHeadElementChild\"] = \"abandoned-head-element-child\";\n    ERR[\"misplacedStartTagForHeadElement\"] = \"misplaced-start-tag-for-head-element\";\n    ERR[\"nestedNoscriptInHead\"] = \"nested-noscript-in-head\";\n    ERR[\"eofInElementThatCanContainOnlyText\"] = \"eof-in-element-that-can-contain-only-text\";\n})(ERR || (ERR = {}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/common/error-codes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/common/foreign-content.js":
/*!************************************************************!*\
  !*** ./node_modules/parse5/dist/common/foreign-content.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SVG_TAG_NAMES_ADJUSTMENT_MAP: () => (/* binding */ SVG_TAG_NAMES_ADJUSTMENT_MAP),\n/* harmony export */   adjustTokenMathMLAttrs: () => (/* binding */ adjustTokenMathMLAttrs),\n/* harmony export */   adjustTokenSVGAttrs: () => (/* binding */ adjustTokenSVGAttrs),\n/* harmony export */   adjustTokenSVGTagName: () => (/* binding */ adjustTokenSVGTagName),\n/* harmony export */   adjustTokenXMLAttrs: () => (/* binding */ adjustTokenXMLAttrs),\n/* harmony export */   causesExit: () => (/* binding */ causesExit),\n/* harmony export */   isIntegrationPoint: () => (/* binding */ isIntegrationPoint)\n/* harmony export */ });\n/* harmony import */ var _html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./html.js */ \"(rsc)/./node_modules/parse5/dist/common/html.js\");\n\n//MIME types\nconst MIME_TYPES = {\n    TEXT_HTML: \"text/html\",\n    APPLICATION_XML: \"application/xhtml+xml\"\n};\n//Attributes\nconst DEFINITION_URL_ATTR = \"definitionurl\";\nconst ADJUSTED_DEFINITION_URL_ATTR = \"definitionURL\";\nconst SVG_ATTRS_ADJUSTMENT_MAP = new Map([\n    \"attributeName\",\n    \"attributeType\",\n    \"baseFrequency\",\n    \"baseProfile\",\n    \"calcMode\",\n    \"clipPathUnits\",\n    \"diffuseConstant\",\n    \"edgeMode\",\n    \"filterUnits\",\n    \"glyphRef\",\n    \"gradientTransform\",\n    \"gradientUnits\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keyPoints\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"lengthAdjust\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerUnits\",\n    \"markerWidth\",\n    \"maskContentUnits\",\n    \"maskUnits\",\n    \"numOctaves\",\n    \"pathLength\",\n    \"patternContentUnits\",\n    \"patternTransform\",\n    \"patternUnits\",\n    \"pointsAtX\",\n    \"pointsAtY\",\n    \"pointsAtZ\",\n    \"preserveAlpha\",\n    \"preserveAspectRatio\",\n    \"primitiveUnits\",\n    \"refX\",\n    \"refY\",\n    \"repeatCount\",\n    \"repeatDur\",\n    \"requiredExtensions\",\n    \"requiredFeatures\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"spreadMethod\",\n    \"startOffset\",\n    \"stdDeviation\",\n    \"stitchTiles\",\n    \"surfaceScale\",\n    \"systemLanguage\",\n    \"tableValues\",\n    \"targetX\",\n    \"targetY\",\n    \"textLength\",\n    \"viewBox\",\n    \"viewTarget\",\n    \"xChannelSelector\",\n    \"yChannelSelector\",\n    \"zoomAndPan\"\n].map((attr)=>[\n        attr.toLowerCase(),\n        attr\n    ]));\nconst XML_ATTRS_ADJUSTMENT_MAP = new Map([\n    [\n        \"xlink:actuate\",\n        {\n            prefix: \"xlink\",\n            name: \"actuate\",\n            namespace: _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XLINK\n        }\n    ],\n    [\n        \"xlink:arcrole\",\n        {\n            prefix: \"xlink\",\n            name: \"arcrole\",\n            namespace: _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XLINK\n        }\n    ],\n    [\n        \"xlink:href\",\n        {\n            prefix: \"xlink\",\n            name: \"href\",\n            namespace: _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XLINK\n        }\n    ],\n    [\n        \"xlink:role\",\n        {\n            prefix: \"xlink\",\n            name: \"role\",\n            namespace: _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XLINK\n        }\n    ],\n    [\n        \"xlink:show\",\n        {\n            prefix: \"xlink\",\n            name: \"show\",\n            namespace: _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XLINK\n        }\n    ],\n    [\n        \"xlink:title\",\n        {\n            prefix: \"xlink\",\n            name: \"title\",\n            namespace: _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XLINK\n        }\n    ],\n    [\n        \"xlink:type\",\n        {\n            prefix: \"xlink\",\n            name: \"type\",\n            namespace: _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XLINK\n        }\n    ],\n    [\n        \"xml:lang\",\n        {\n            prefix: \"xml\",\n            name: \"lang\",\n            namespace: _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XML\n        }\n    ],\n    [\n        \"xml:space\",\n        {\n            prefix: \"xml\",\n            name: \"space\",\n            namespace: _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XML\n        }\n    ],\n    [\n        \"xmlns\",\n        {\n            prefix: \"\",\n            name: \"xmlns\",\n            namespace: _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XMLNS\n        }\n    ],\n    [\n        \"xmlns:xlink\",\n        {\n            prefix: \"xmlns\",\n            name: \"xlink\",\n            namespace: _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XMLNS\n        }\n    ]\n]);\n//SVG tag names adjustment map\nconst SVG_TAG_NAMES_ADJUSTMENT_MAP = new Map([\n    \"altGlyph\",\n    \"altGlyphDef\",\n    \"altGlyphItem\",\n    \"animateColor\",\n    \"animateMotion\",\n    \"animateTransform\",\n    \"clipPath\",\n    \"feBlend\",\n    \"feColorMatrix\",\n    \"feComponentTransfer\",\n    \"feComposite\",\n    \"feConvolveMatrix\",\n    \"feDiffuseLighting\",\n    \"feDisplacementMap\",\n    \"feDistantLight\",\n    \"feFlood\",\n    \"feFuncA\",\n    \"feFuncB\",\n    \"feFuncG\",\n    \"feFuncR\",\n    \"feGaussianBlur\",\n    \"feImage\",\n    \"feMerge\",\n    \"feMergeNode\",\n    \"feMorphology\",\n    \"feOffset\",\n    \"fePointLight\",\n    \"feSpecularLighting\",\n    \"feSpotLight\",\n    \"feTile\",\n    \"feTurbulence\",\n    \"foreignObject\",\n    \"glyphRef\",\n    \"linearGradient\",\n    \"radialGradient\",\n    \"textPath\"\n].map((tn)=>[\n        tn.toLowerCase(),\n        tn\n    ]));\n//Tags that causes exit from foreign content\nconst EXITS_FOREIGN_CONTENT = new Set([\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.B,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.BIG,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.BLOCKQUOTE,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.BODY,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.BR,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.CENTER,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.CODE,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.DD,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.DIV,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.DL,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.DT,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.EM,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.EMBED,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.H1,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.H2,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.H3,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.H4,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.H5,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.H6,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.HEAD,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.HR,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.I,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.IMG,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.LI,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.LISTING,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MENU,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.META,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.NOBR,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.OL,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.P,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.PRE,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.RUBY,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.S,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.SMALL,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.SPAN,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.STRONG,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.STRIKE,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.SUB,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.SUP,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TABLE,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TT,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.U,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.UL,\n    _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.VAR\n]);\n//Check exit from foreign content\nfunction causesExit(startTagToken) {\n    const tn = startTagToken.tagID;\n    const isFontWithAttrs = tn === _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.FONT && startTagToken.attrs.some(({ name })=>name === _html_js__WEBPACK_IMPORTED_MODULE_0__.ATTRS.COLOR || name === _html_js__WEBPACK_IMPORTED_MODULE_0__.ATTRS.SIZE || name === _html_js__WEBPACK_IMPORTED_MODULE_0__.ATTRS.FACE);\n    return isFontWithAttrs || EXITS_FOREIGN_CONTENT.has(tn);\n}\n//Token adjustments\nfunction adjustTokenMathMLAttrs(token) {\n    for(let i = 0; i < token.attrs.length; i++){\n        if (token.attrs[i].name === DEFINITION_URL_ATTR) {\n            token.attrs[i].name = ADJUSTED_DEFINITION_URL_ATTR;\n            break;\n        }\n    }\n}\nfunction adjustTokenSVGAttrs(token) {\n    for(let i = 0; i < token.attrs.length; i++){\n        const adjustedAttrName = SVG_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrName != null) {\n            token.attrs[i].name = adjustedAttrName;\n        }\n    }\n}\nfunction adjustTokenXMLAttrs(token) {\n    for(let i = 0; i < token.attrs.length; i++){\n        const adjustedAttrEntry = XML_ATTRS_ADJUSTMENT_MAP.get(token.attrs[i].name);\n        if (adjustedAttrEntry) {\n            token.attrs[i].prefix = adjustedAttrEntry.prefix;\n            token.attrs[i].name = adjustedAttrEntry.name;\n            token.attrs[i].namespace = adjustedAttrEntry.namespace;\n        }\n    }\n}\nfunction adjustTokenSVGTagName(token) {\n    const adjustedTagName = SVG_TAG_NAMES_ADJUSTMENT_MAP.get(token.tagName);\n    if (adjustedTagName != null) {\n        token.tagName = adjustedTagName;\n        token.tagID = (0,_html_js__WEBPACK_IMPORTED_MODULE_0__.getTagID)(token.tagName);\n    }\n}\n//Integration points\nfunction isMathMLTextIntegrationPoint(tn, ns) {\n    return ns === _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.MATHML && (tn === _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MI || tn === _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MO || tn === _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MN || tn === _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MS || tn === _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MTEXT);\n}\nfunction isHtmlIntegrationPoint(tn, ns, attrs) {\n    if (ns === _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.MATHML && tn === _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.ANNOTATION_XML) {\n        for(let i = 0; i < attrs.length; i++){\n            if (attrs[i].name === _html_js__WEBPACK_IMPORTED_MODULE_0__.ATTRS.ENCODING) {\n                const value = attrs[i].value.toLowerCase();\n                return value === MIME_TYPES.TEXT_HTML || value === MIME_TYPES.APPLICATION_XML;\n            }\n        }\n    }\n    return ns === _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.SVG && (tn === _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.FOREIGN_OBJECT || tn === _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.DESC || tn === _html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TITLE);\n}\nfunction isIntegrationPoint(tn, ns, attrs, foreignNS) {\n    return (!foreignNS || foreignNS === _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML) && isHtmlIntegrationPoint(tn, ns, attrs) || (!foreignNS || foreignNS === _html_js__WEBPACK_IMPORTED_MODULE_0__.NS.MATHML) && isMathMLTextIntegrationPoint(tn, ns);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcGFyc2U1L2Rpc3QvY29tbW9uL2ZvcmVpZ24tY29udGVudC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUE2RDtBQUM3RCxZQUFZO0FBQ1osTUFBTUssYUFBYTtJQUNmQyxXQUFXO0lBQ1hDLGlCQUFpQjtBQUNyQjtBQUNBLFlBQVk7QUFDWixNQUFNQyxzQkFBc0I7QUFDNUIsTUFBTUMsK0JBQStCO0FBQ3JDLE1BQU1DLDJCQUEyQixJQUFJQyxJQUFJO0lBQ3JDO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0NBQ0gsQ0FBQ0MsR0FBRyxDQUFDLENBQUNDLE9BQVM7UUFBQ0EsS0FBS0MsV0FBVztRQUFJRDtLQUFLO0FBQzFDLE1BQU1FLDJCQUEyQixJQUFJSixJQUFJO0lBQ3JDO1FBQUM7UUFBaUI7WUFBRUssUUFBUTtZQUFTQyxNQUFNO1lBQVdDLFdBQVdoQix3Q0FBRUEsQ0FBQ2lCLEtBQUs7UUFBQztLQUFFO0lBQzVFO1FBQUM7UUFBaUI7WUFBRUgsUUFBUTtZQUFTQyxNQUFNO1lBQVdDLFdBQVdoQix3Q0FBRUEsQ0FBQ2lCLEtBQUs7UUFBQztLQUFFO0lBQzVFO1FBQUM7UUFBYztZQUFFSCxRQUFRO1lBQVNDLE1BQU07WUFBUUMsV0FBV2hCLHdDQUFFQSxDQUFDaUIsS0FBSztRQUFDO0tBQUU7SUFDdEU7UUFBQztRQUFjO1lBQUVILFFBQVE7WUFBU0MsTUFBTTtZQUFRQyxXQUFXaEIsd0NBQUVBLENBQUNpQixLQUFLO1FBQUM7S0FBRTtJQUN0RTtRQUFDO1FBQWM7WUFBRUgsUUFBUTtZQUFTQyxNQUFNO1lBQVFDLFdBQVdoQix3Q0FBRUEsQ0FBQ2lCLEtBQUs7UUFBQztLQUFFO0lBQ3RFO1FBQUM7UUFBZTtZQUFFSCxRQUFRO1lBQVNDLE1BQU07WUFBU0MsV0FBV2hCLHdDQUFFQSxDQUFDaUIsS0FBSztRQUFDO0tBQUU7SUFDeEU7UUFBQztRQUFjO1lBQUVILFFBQVE7WUFBU0MsTUFBTTtZQUFRQyxXQUFXaEIsd0NBQUVBLENBQUNpQixLQUFLO1FBQUM7S0FBRTtJQUN0RTtRQUFDO1FBQVk7WUFBRUgsUUFBUTtZQUFPQyxNQUFNO1lBQVFDLFdBQVdoQix3Q0FBRUEsQ0FBQ2tCLEdBQUc7UUFBQztLQUFFO0lBQ2hFO1FBQUM7UUFBYTtZQUFFSixRQUFRO1lBQU9DLE1BQU07WUFBU0MsV0FBV2hCLHdDQUFFQSxDQUFDa0IsR0FBRztRQUFDO0tBQUU7SUFDbEU7UUFBQztRQUFTO1lBQUVKLFFBQVE7WUFBSUMsTUFBTTtZQUFTQyxXQUFXaEIsd0NBQUVBLENBQUNtQixLQUFLO1FBQUM7S0FBRTtJQUM3RDtRQUFDO1FBQWU7WUFBRUwsUUFBUTtZQUFTQyxNQUFNO1lBQVNDLFdBQVdoQix3Q0FBRUEsQ0FBQ21CLEtBQUs7UUFBQztLQUFFO0NBQzNFO0FBQ0QsOEJBQThCO0FBQ3ZCLE1BQU1DLCtCQUErQixJQUFJWCxJQUFJO0lBQ2hEO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFDQTtDQUNILENBQUNDLEdBQUcsQ0FBQyxDQUFDVyxLQUFPO1FBQUNBLEdBQUdULFdBQVc7UUFBSVM7S0FBRyxHQUFHO0FBQ3ZDLDRDQUE0QztBQUM1QyxNQUFNQyx3QkFBd0IsSUFBSUMsSUFBSTtJQUNsQ3hCLDRDQUFDQSxDQUFDeUIsQ0FBQztJQUNIekIsNENBQUNBLENBQUMwQixHQUFHO0lBQ0wxQiw0Q0FBQ0EsQ0FBQzJCLFVBQVU7SUFDWjNCLDRDQUFDQSxDQUFDNEIsSUFBSTtJQUNONUIsNENBQUNBLENBQUM2QixFQUFFO0lBQ0o3Qiw0Q0FBQ0EsQ0FBQzhCLE1BQU07SUFDUjlCLDRDQUFDQSxDQUFDK0IsSUFBSTtJQUNOL0IsNENBQUNBLENBQUNnQyxFQUFFO0lBQ0poQyw0Q0FBQ0EsQ0FBQ2lDLEdBQUc7SUFDTGpDLDRDQUFDQSxDQUFDa0MsRUFBRTtJQUNKbEMsNENBQUNBLENBQUNtQyxFQUFFO0lBQ0puQyw0Q0FBQ0EsQ0FBQ29DLEVBQUU7SUFDSnBDLDRDQUFDQSxDQUFDcUMsS0FBSztJQUNQckMsNENBQUNBLENBQUNzQyxFQUFFO0lBQ0p0Qyw0Q0FBQ0EsQ0FBQ3VDLEVBQUU7SUFDSnZDLDRDQUFDQSxDQUFDd0MsRUFBRTtJQUNKeEMsNENBQUNBLENBQUN5QyxFQUFFO0lBQ0p6Qyw0Q0FBQ0EsQ0FBQzBDLEVBQUU7SUFDSjFDLDRDQUFDQSxDQUFDMkMsRUFBRTtJQUNKM0MsNENBQUNBLENBQUM0QyxJQUFJO0lBQ041Qyw0Q0FBQ0EsQ0FBQzZDLEVBQUU7SUFDSjdDLDRDQUFDQSxDQUFDOEMsQ0FBQztJQUNIOUMsNENBQUNBLENBQUMrQyxHQUFHO0lBQ0wvQyw0Q0FBQ0EsQ0FBQ2dELEVBQUU7SUFDSmhELDRDQUFDQSxDQUFDaUQsT0FBTztJQUNUakQsNENBQUNBLENBQUNrRCxJQUFJO0lBQ05sRCw0Q0FBQ0EsQ0FBQ21ELElBQUk7SUFDTm5ELDRDQUFDQSxDQUFDb0QsSUFBSTtJQUNOcEQsNENBQUNBLENBQUNxRCxFQUFFO0lBQ0pyRCw0Q0FBQ0EsQ0FBQ3NELENBQUM7SUFDSHRELDRDQUFDQSxDQUFDdUQsR0FBRztJQUNMdkQsNENBQUNBLENBQUN3RCxJQUFJO0lBQ054RCw0Q0FBQ0EsQ0FBQ3lELENBQUM7SUFDSHpELDRDQUFDQSxDQUFDMEQsS0FBSztJQUNQMUQsNENBQUNBLENBQUMyRCxJQUFJO0lBQ04zRCw0Q0FBQ0EsQ0FBQzRELE1BQU07SUFDUjVELDRDQUFDQSxDQUFDNkQsTUFBTTtJQUNSN0QsNENBQUNBLENBQUM4RCxHQUFHO0lBQ0w5RCw0Q0FBQ0EsQ0FBQytELEdBQUc7SUFDTC9ELDRDQUFDQSxDQUFDZ0UsS0FBSztJQUNQaEUsNENBQUNBLENBQUNpRSxFQUFFO0lBQ0pqRSw0Q0FBQ0EsQ0FBQ2tFLENBQUM7SUFDSGxFLDRDQUFDQSxDQUFDbUUsRUFBRTtJQUNKbkUsNENBQUNBLENBQUNvRSxHQUFHO0NBQ1I7QUFDRCxpQ0FBaUM7QUFDMUIsU0FBU0MsV0FBV0MsYUFBYTtJQUNwQyxNQUFNaEQsS0FBS2dELGNBQWNDLEtBQUs7SUFDOUIsTUFBTUMsa0JBQWtCbEQsT0FBT3RCLDRDQUFDQSxDQUFDeUUsSUFBSSxJQUNqQ0gsY0FBY0ksS0FBSyxDQUFDQyxJQUFJLENBQUMsQ0FBQyxFQUFFM0QsSUFBSSxFQUFFLEdBQUtBLFNBQVNkLDJDQUFLQSxDQUFDMEUsS0FBSyxJQUFJNUQsU0FBU2QsMkNBQUtBLENBQUMyRSxJQUFJLElBQUk3RCxTQUFTZCwyQ0FBS0EsQ0FBQzRFLElBQUk7SUFDN0csT0FBT04sbUJBQW1CakQsc0JBQXNCd0QsR0FBRyxDQUFDekQ7QUFDeEQ7QUFDQSxtQkFBbUI7QUFDWixTQUFTMEQsdUJBQXVCQyxLQUFLO0lBQ3hDLElBQUssSUFBSUMsSUFBSSxHQUFHQSxJQUFJRCxNQUFNUCxLQUFLLENBQUNTLE1BQU0sRUFBRUQsSUFBSztRQUN6QyxJQUFJRCxNQUFNUCxLQUFLLENBQUNRLEVBQUUsQ0FBQ2xFLElBQUksS0FBS1QscUJBQXFCO1lBQzdDMEUsTUFBTVAsS0FBSyxDQUFDUSxFQUFFLENBQUNsRSxJQUFJLEdBQUdSO1lBQ3RCO1FBQ0o7SUFDSjtBQUNKO0FBQ08sU0FBUzRFLG9CQUFvQkgsS0FBSztJQUNyQyxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUQsTUFBTVAsS0FBSyxDQUFDUyxNQUFNLEVBQUVELElBQUs7UUFDekMsTUFBTUcsbUJBQW1CNUUseUJBQXlCNkUsR0FBRyxDQUFDTCxNQUFNUCxLQUFLLENBQUNRLEVBQUUsQ0FBQ2xFLElBQUk7UUFDekUsSUFBSXFFLG9CQUFvQixNQUFNO1lBQzFCSixNQUFNUCxLQUFLLENBQUNRLEVBQUUsQ0FBQ2xFLElBQUksR0FBR3FFO1FBQzFCO0lBQ0o7QUFDSjtBQUNPLFNBQVNFLG9CQUFvQk4sS0FBSztJQUNyQyxJQUFLLElBQUlDLElBQUksR0FBR0EsSUFBSUQsTUFBTVAsS0FBSyxDQUFDUyxNQUFNLEVBQUVELElBQUs7UUFDekMsTUFBTU0sb0JBQW9CMUUseUJBQXlCd0UsR0FBRyxDQUFDTCxNQUFNUCxLQUFLLENBQUNRLEVBQUUsQ0FBQ2xFLElBQUk7UUFDMUUsSUFBSXdFLG1CQUFtQjtZQUNuQlAsTUFBTVAsS0FBSyxDQUFDUSxFQUFFLENBQUNuRSxNQUFNLEdBQUd5RSxrQkFBa0J6RSxNQUFNO1lBQ2hEa0UsTUFBTVAsS0FBSyxDQUFDUSxFQUFFLENBQUNsRSxJQUFJLEdBQUd3RSxrQkFBa0J4RSxJQUFJO1lBQzVDaUUsTUFBTVAsS0FBSyxDQUFDUSxFQUFFLENBQUNqRSxTQUFTLEdBQUd1RSxrQkFBa0J2RSxTQUFTO1FBQzFEO0lBQ0o7QUFDSjtBQUNPLFNBQVN3RSxzQkFBc0JSLEtBQUs7SUFDdkMsTUFBTVMsa0JBQWtCckUsNkJBQTZCaUUsR0FBRyxDQUFDTCxNQUFNVSxPQUFPO0lBQ3RFLElBQUlELG1CQUFtQixNQUFNO1FBQ3pCVCxNQUFNVSxPQUFPLEdBQUdEO1FBQ2hCVCxNQUFNVixLQUFLLEdBQUdwRSxrREFBUUEsQ0FBQzhFLE1BQU1VLE9BQU87SUFDeEM7QUFDSjtBQUNBLG9CQUFvQjtBQUNwQixTQUFTQyw2QkFBNkJ0RSxFQUFFLEVBQUV1RSxFQUFFO0lBQ3hDLE9BQU9BLE9BQU81Rix3Q0FBRUEsQ0FBQzZGLE1BQU0sSUFBS3hFLENBQUFBLE9BQU90Qiw0Q0FBQ0EsQ0FBQytGLEVBQUUsSUFBSXpFLE9BQU90Qiw0Q0FBQ0EsQ0FBQ2dHLEVBQUUsSUFBSTFFLE9BQU90Qiw0Q0FBQ0EsQ0FBQ2lHLEVBQUUsSUFBSTNFLE9BQU90Qiw0Q0FBQ0EsQ0FBQ2tHLEVBQUUsSUFBSTVFLE9BQU90Qiw0Q0FBQ0EsQ0FBQ21HLEtBQUs7QUFDMUc7QUFDQSxTQUFTQyx1QkFBdUI5RSxFQUFFLEVBQUV1RSxFQUFFLEVBQUVuQixLQUFLO0lBQ3pDLElBQUltQixPQUFPNUYsd0NBQUVBLENBQUM2RixNQUFNLElBQUl4RSxPQUFPdEIsNENBQUNBLENBQUNxRyxjQUFjLEVBQUU7UUFDN0MsSUFBSyxJQUFJbkIsSUFBSSxHQUFHQSxJQUFJUixNQUFNUyxNQUFNLEVBQUVELElBQUs7WUFDbkMsSUFBSVIsS0FBSyxDQUFDUSxFQUFFLENBQUNsRSxJQUFJLEtBQUtkLDJDQUFLQSxDQUFDb0csUUFBUSxFQUFFO2dCQUNsQyxNQUFNQyxRQUFRN0IsS0FBSyxDQUFDUSxFQUFFLENBQUNxQixLQUFLLENBQUMxRixXQUFXO2dCQUN4QyxPQUFPMEYsVUFBVW5HLFdBQVdDLFNBQVMsSUFBSWtHLFVBQVVuRyxXQUFXRSxlQUFlO1lBQ2pGO1FBQ0o7SUFDSjtJQUNBLE9BQU91RixPQUFPNUYsd0NBQUVBLENBQUN1RyxHQUFHLElBQUtsRixDQUFBQSxPQUFPdEIsNENBQUNBLENBQUN5RyxjQUFjLElBQUluRixPQUFPdEIsNENBQUNBLENBQUMwRyxJQUFJLElBQUlwRixPQUFPdEIsNENBQUNBLENBQUMyRyxLQUFLO0FBQ3ZGO0FBQ08sU0FBU0MsbUJBQW1CdEYsRUFBRSxFQUFFdUUsRUFBRSxFQUFFbkIsS0FBSyxFQUFFbUMsU0FBUztJQUN2RCxPQUFRLENBQUUsQ0FBQ0EsYUFBYUEsY0FBYzVHLHdDQUFFQSxDQUFDNkcsSUFBSSxLQUFLVix1QkFBdUI5RSxJQUFJdUUsSUFBSW5CLFVBQzVFLENBQUMsQ0FBQ21DLGFBQWFBLGNBQWM1Ryx3Q0FBRUEsQ0FBQzZGLE1BQU0sS0FBS0YsNkJBQTZCdEUsSUFBSXVFO0FBQ3JGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmVudG8tZ3JpZC1nZW5lcmF0b3IvLi9ub2RlX21vZHVsZXMvcGFyc2U1L2Rpc3QvY29tbW9uL2ZvcmVpZ24tY29udGVudC5qcz9kMmQ3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRBR19JRCBhcyAkLCBOUywgQVRUUlMsIGdldFRhZ0lEIH0gZnJvbSAnLi9odG1sLmpzJztcbi8vTUlNRSB0eXBlc1xuY29uc3QgTUlNRV9UWVBFUyA9IHtcbiAgICBURVhUX0hUTUw6ICd0ZXh0L2h0bWwnLFxuICAgIEFQUExJQ0FUSU9OX1hNTDogJ2FwcGxpY2F0aW9uL3hodG1sK3htbCcsXG59O1xuLy9BdHRyaWJ1dGVzXG5jb25zdCBERUZJTklUSU9OX1VSTF9BVFRSID0gJ2RlZmluaXRpb251cmwnO1xuY29uc3QgQURKVVNURURfREVGSU5JVElPTl9VUkxfQVRUUiA9ICdkZWZpbml0aW9uVVJMJztcbmNvbnN0IFNWR19BVFRSU19BREpVU1RNRU5UX01BUCA9IG5ldyBNYXAoW1xuICAgICdhdHRyaWJ1dGVOYW1lJyxcbiAgICAnYXR0cmlidXRlVHlwZScsXG4gICAgJ2Jhc2VGcmVxdWVuY3knLFxuICAgICdiYXNlUHJvZmlsZScsXG4gICAgJ2NhbGNNb2RlJyxcbiAgICAnY2xpcFBhdGhVbml0cycsXG4gICAgJ2RpZmZ1c2VDb25zdGFudCcsXG4gICAgJ2VkZ2VNb2RlJyxcbiAgICAnZmlsdGVyVW5pdHMnLFxuICAgICdnbHlwaFJlZicsXG4gICAgJ2dyYWRpZW50VHJhbnNmb3JtJyxcbiAgICAnZ3JhZGllbnRVbml0cycsXG4gICAgJ2tlcm5lbE1hdHJpeCcsXG4gICAgJ2tlcm5lbFVuaXRMZW5ndGgnLFxuICAgICdrZXlQb2ludHMnLFxuICAgICdrZXlTcGxpbmVzJyxcbiAgICAna2V5VGltZXMnLFxuICAgICdsZW5ndGhBZGp1c3QnLFxuICAgICdsaW1pdGluZ0NvbmVBbmdsZScsXG4gICAgJ21hcmtlckhlaWdodCcsXG4gICAgJ21hcmtlclVuaXRzJyxcbiAgICAnbWFya2VyV2lkdGgnLFxuICAgICdtYXNrQ29udGVudFVuaXRzJyxcbiAgICAnbWFza1VuaXRzJyxcbiAgICAnbnVtT2N0YXZlcycsXG4gICAgJ3BhdGhMZW5ndGgnLFxuICAgICdwYXR0ZXJuQ29udGVudFVuaXRzJyxcbiAgICAncGF0dGVyblRyYW5zZm9ybScsXG4gICAgJ3BhdHRlcm5Vbml0cycsXG4gICAgJ3BvaW50c0F0WCcsXG4gICAgJ3BvaW50c0F0WScsXG4gICAgJ3BvaW50c0F0WicsXG4gICAgJ3ByZXNlcnZlQWxwaGEnLFxuICAgICdwcmVzZXJ2ZUFzcGVjdFJhdGlvJyxcbiAgICAncHJpbWl0aXZlVW5pdHMnLFxuICAgICdyZWZYJyxcbiAgICAncmVmWScsXG4gICAgJ3JlcGVhdENvdW50JyxcbiAgICAncmVwZWF0RHVyJyxcbiAgICAncmVxdWlyZWRFeHRlbnNpb25zJyxcbiAgICAncmVxdWlyZWRGZWF0dXJlcycsXG4gICAgJ3NwZWN1bGFyQ29uc3RhbnQnLFxuICAgICdzcGVjdWxhckV4cG9uZW50JyxcbiAgICAnc3ByZWFkTWV0aG9kJyxcbiAgICAnc3RhcnRPZmZzZXQnLFxuICAgICdzdGREZXZpYXRpb24nLFxuICAgICdzdGl0Y2hUaWxlcycsXG4gICAgJ3N1cmZhY2VTY2FsZScsXG4gICAgJ3N5c3RlbUxhbmd1YWdlJyxcbiAgICAndGFibGVWYWx1ZXMnLFxuICAgICd0YXJnZXRYJyxcbiAgICAndGFyZ2V0WScsXG4gICAgJ3RleHRMZW5ndGgnLFxuICAgICd2aWV3Qm94JyxcbiAgICAndmlld1RhcmdldCcsXG4gICAgJ3hDaGFubmVsU2VsZWN0b3InLFxuICAgICd5Q2hhbm5lbFNlbGVjdG9yJyxcbiAgICAnem9vbUFuZFBhbicsXG5dLm1hcCgoYXR0cikgPT4gW2F0dHIudG9Mb3dlckNhc2UoKSwgYXR0cl0pKTtcbmNvbnN0IFhNTF9BVFRSU19BREpVU1RNRU5UX01BUCA9IG5ldyBNYXAoW1xuICAgIFsneGxpbms6YWN0dWF0ZScsIHsgcHJlZml4OiAneGxpbmsnLCBuYW1lOiAnYWN0dWF0ZScsIG5hbWVzcGFjZTogTlMuWExJTksgfV0sXG4gICAgWyd4bGluazphcmNyb2xlJywgeyBwcmVmaXg6ICd4bGluaycsIG5hbWU6ICdhcmNyb2xlJywgbmFtZXNwYWNlOiBOUy5YTElOSyB9XSxcbiAgICBbJ3hsaW5rOmhyZWYnLCB7IHByZWZpeDogJ3hsaW5rJywgbmFtZTogJ2hyZWYnLCBuYW1lc3BhY2U6IE5TLlhMSU5LIH1dLFxuICAgIFsneGxpbms6cm9sZScsIHsgcHJlZml4OiAneGxpbmsnLCBuYW1lOiAncm9sZScsIG5hbWVzcGFjZTogTlMuWExJTksgfV0sXG4gICAgWyd4bGluazpzaG93JywgeyBwcmVmaXg6ICd4bGluaycsIG5hbWU6ICdzaG93JywgbmFtZXNwYWNlOiBOUy5YTElOSyB9XSxcbiAgICBbJ3hsaW5rOnRpdGxlJywgeyBwcmVmaXg6ICd4bGluaycsIG5hbWU6ICd0aXRsZScsIG5hbWVzcGFjZTogTlMuWExJTksgfV0sXG4gICAgWyd4bGluazp0eXBlJywgeyBwcmVmaXg6ICd4bGluaycsIG5hbWU6ICd0eXBlJywgbmFtZXNwYWNlOiBOUy5YTElOSyB9XSxcbiAgICBbJ3htbDpsYW5nJywgeyBwcmVmaXg6ICd4bWwnLCBuYW1lOiAnbGFuZycsIG5hbWVzcGFjZTogTlMuWE1MIH1dLFxuICAgIFsneG1sOnNwYWNlJywgeyBwcmVmaXg6ICd4bWwnLCBuYW1lOiAnc3BhY2UnLCBuYW1lc3BhY2U6IE5TLlhNTCB9XSxcbiAgICBbJ3htbG5zJywgeyBwcmVmaXg6ICcnLCBuYW1lOiAneG1sbnMnLCBuYW1lc3BhY2U6IE5TLlhNTE5TIH1dLFxuICAgIFsneG1sbnM6eGxpbmsnLCB7IHByZWZpeDogJ3htbG5zJywgbmFtZTogJ3hsaW5rJywgbmFtZXNwYWNlOiBOUy5YTUxOUyB9XSxcbl0pO1xuLy9TVkcgdGFnIG5hbWVzIGFkanVzdG1lbnQgbWFwXG5leHBvcnQgY29uc3QgU1ZHX1RBR19OQU1FU19BREpVU1RNRU5UX01BUCA9IG5ldyBNYXAoW1xuICAgICdhbHRHbHlwaCcsXG4gICAgJ2FsdEdseXBoRGVmJyxcbiAgICAnYWx0R2x5cGhJdGVtJyxcbiAgICAnYW5pbWF0ZUNvbG9yJyxcbiAgICAnYW5pbWF0ZU1vdGlvbicsXG4gICAgJ2FuaW1hdGVUcmFuc2Zvcm0nLFxuICAgICdjbGlwUGF0aCcsXG4gICAgJ2ZlQmxlbmQnLFxuICAgICdmZUNvbG9yTWF0cml4JyxcbiAgICAnZmVDb21wb25lbnRUcmFuc2ZlcicsXG4gICAgJ2ZlQ29tcG9zaXRlJyxcbiAgICAnZmVDb252b2x2ZU1hdHJpeCcsXG4gICAgJ2ZlRGlmZnVzZUxpZ2h0aW5nJyxcbiAgICAnZmVEaXNwbGFjZW1lbnRNYXAnLFxuICAgICdmZURpc3RhbnRMaWdodCcsXG4gICAgJ2ZlRmxvb2QnLFxuICAgICdmZUZ1bmNBJyxcbiAgICAnZmVGdW5jQicsXG4gICAgJ2ZlRnVuY0cnLFxuICAgICdmZUZ1bmNSJyxcbiAgICAnZmVHYXVzc2lhbkJsdXInLFxuICAgICdmZUltYWdlJyxcbiAgICAnZmVNZXJnZScsXG4gICAgJ2ZlTWVyZ2VOb2RlJyxcbiAgICAnZmVNb3JwaG9sb2d5JyxcbiAgICAnZmVPZmZzZXQnLFxuICAgICdmZVBvaW50TGlnaHQnLFxuICAgICdmZVNwZWN1bGFyTGlnaHRpbmcnLFxuICAgICdmZVNwb3RMaWdodCcsXG4gICAgJ2ZlVGlsZScsXG4gICAgJ2ZlVHVyYnVsZW5jZScsXG4gICAgJ2ZvcmVpZ25PYmplY3QnLFxuICAgICdnbHlwaFJlZicsXG4gICAgJ2xpbmVhckdyYWRpZW50JyxcbiAgICAncmFkaWFsR3JhZGllbnQnLFxuICAgICd0ZXh0UGF0aCcsXG5dLm1hcCgodG4pID0+IFt0bi50b0xvd2VyQ2FzZSgpLCB0bl0pKTtcbi8vVGFncyB0aGF0IGNhdXNlcyBleGl0IGZyb20gZm9yZWlnbiBjb250ZW50XG5jb25zdCBFWElUU19GT1JFSUdOX0NPTlRFTlQgPSBuZXcgU2V0KFtcbiAgICAkLkIsXG4gICAgJC5CSUcsXG4gICAgJC5CTE9DS1FVT1RFLFxuICAgICQuQk9EWSxcbiAgICAkLkJSLFxuICAgICQuQ0VOVEVSLFxuICAgICQuQ09ERSxcbiAgICAkLkRELFxuICAgICQuRElWLFxuICAgICQuREwsXG4gICAgJC5EVCxcbiAgICAkLkVNLFxuICAgICQuRU1CRUQsXG4gICAgJC5IMSxcbiAgICAkLkgyLFxuICAgICQuSDMsXG4gICAgJC5INCxcbiAgICAkLkg1LFxuICAgICQuSDYsXG4gICAgJC5IRUFELFxuICAgICQuSFIsXG4gICAgJC5JLFxuICAgICQuSU1HLFxuICAgICQuTEksXG4gICAgJC5MSVNUSU5HLFxuICAgICQuTUVOVSxcbiAgICAkLk1FVEEsXG4gICAgJC5OT0JSLFxuICAgICQuT0wsXG4gICAgJC5QLFxuICAgICQuUFJFLFxuICAgICQuUlVCWSxcbiAgICAkLlMsXG4gICAgJC5TTUFMTCxcbiAgICAkLlNQQU4sXG4gICAgJC5TVFJPTkcsXG4gICAgJC5TVFJJS0UsXG4gICAgJC5TVUIsXG4gICAgJC5TVVAsXG4gICAgJC5UQUJMRSxcbiAgICAkLlRULFxuICAgICQuVSxcbiAgICAkLlVMLFxuICAgICQuVkFSLFxuXSk7XG4vL0NoZWNrIGV4aXQgZnJvbSBmb3JlaWduIGNvbnRlbnRcbmV4cG9ydCBmdW5jdGlvbiBjYXVzZXNFeGl0KHN0YXJ0VGFnVG9rZW4pIHtcbiAgICBjb25zdCB0biA9IHN0YXJ0VGFnVG9rZW4udGFnSUQ7XG4gICAgY29uc3QgaXNGb250V2l0aEF0dHJzID0gdG4gPT09ICQuRk9OVCAmJlxuICAgICAgICBzdGFydFRhZ1Rva2VuLmF0dHJzLnNvbWUoKHsgbmFtZSB9KSA9PiBuYW1lID09PSBBVFRSUy5DT0xPUiB8fCBuYW1lID09PSBBVFRSUy5TSVpFIHx8IG5hbWUgPT09IEFUVFJTLkZBQ0UpO1xuICAgIHJldHVybiBpc0ZvbnRXaXRoQXR0cnMgfHwgRVhJVFNfRk9SRUlHTl9DT05URU5ULmhhcyh0bik7XG59XG4vL1Rva2VuIGFkanVzdG1lbnRzXG5leHBvcnQgZnVuY3Rpb24gYWRqdXN0VG9rZW5NYXRoTUxBdHRycyh0b2tlbikge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdG9rZW4uYXR0cnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgaWYgKHRva2VuLmF0dHJzW2ldLm5hbWUgPT09IERFRklOSVRJT05fVVJMX0FUVFIpIHtcbiAgICAgICAgICAgIHRva2VuLmF0dHJzW2ldLm5hbWUgPSBBREpVU1RFRF9ERUZJTklUSU9OX1VSTF9BVFRSO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gYWRqdXN0VG9rZW5TVkdBdHRycyh0b2tlbikge1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdG9rZW4uYXR0cnMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgY29uc3QgYWRqdXN0ZWRBdHRyTmFtZSA9IFNWR19BVFRSU19BREpVU1RNRU5UX01BUC5nZXQodG9rZW4uYXR0cnNbaV0ubmFtZSk7XG4gICAgICAgIGlmIChhZGp1c3RlZEF0dHJOYW1lICE9IG51bGwpIHtcbiAgICAgICAgICAgIHRva2VuLmF0dHJzW2ldLm5hbWUgPSBhZGp1c3RlZEF0dHJOYW1lO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uIGFkanVzdFRva2VuWE1MQXR0cnModG9rZW4pIHtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRva2VuLmF0dHJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGNvbnN0IGFkanVzdGVkQXR0ckVudHJ5ID0gWE1MX0FUVFJTX0FESlVTVE1FTlRfTUFQLmdldCh0b2tlbi5hdHRyc1tpXS5uYW1lKTtcbiAgICAgICAgaWYgKGFkanVzdGVkQXR0ckVudHJ5KSB7XG4gICAgICAgICAgICB0b2tlbi5hdHRyc1tpXS5wcmVmaXggPSBhZGp1c3RlZEF0dHJFbnRyeS5wcmVmaXg7XG4gICAgICAgICAgICB0b2tlbi5hdHRyc1tpXS5uYW1lID0gYWRqdXN0ZWRBdHRyRW50cnkubmFtZTtcbiAgICAgICAgICAgIHRva2VuLmF0dHJzW2ldLm5hbWVzcGFjZSA9IGFkanVzdGVkQXR0ckVudHJ5Lm5hbWVzcGFjZTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiBhZGp1c3RUb2tlblNWR1RhZ05hbWUodG9rZW4pIHtcbiAgICBjb25zdCBhZGp1c3RlZFRhZ05hbWUgPSBTVkdfVEFHX05BTUVTX0FESlVTVE1FTlRfTUFQLmdldCh0b2tlbi50YWdOYW1lKTtcbiAgICBpZiAoYWRqdXN0ZWRUYWdOYW1lICE9IG51bGwpIHtcbiAgICAgICAgdG9rZW4udGFnTmFtZSA9IGFkanVzdGVkVGFnTmFtZTtcbiAgICAgICAgdG9rZW4udGFnSUQgPSBnZXRUYWdJRCh0b2tlbi50YWdOYW1lKTtcbiAgICB9XG59XG4vL0ludGVncmF0aW9uIHBvaW50c1xuZnVuY3Rpb24gaXNNYXRoTUxUZXh0SW50ZWdyYXRpb25Qb2ludCh0biwgbnMpIHtcbiAgICByZXR1cm4gbnMgPT09IE5TLk1BVEhNTCAmJiAodG4gPT09ICQuTUkgfHwgdG4gPT09ICQuTU8gfHwgdG4gPT09ICQuTU4gfHwgdG4gPT09ICQuTVMgfHwgdG4gPT09ICQuTVRFWFQpO1xufVxuZnVuY3Rpb24gaXNIdG1sSW50ZWdyYXRpb25Qb2ludCh0biwgbnMsIGF0dHJzKSB7XG4gICAgaWYgKG5zID09PSBOUy5NQVRITUwgJiYgdG4gPT09ICQuQU5OT1RBVElPTl9YTUwpIHtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhdHRycy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgaWYgKGF0dHJzW2ldLm5hbWUgPT09IEFUVFJTLkVOQ09ESU5HKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgdmFsdWUgPSBhdHRyc1tpXS52YWx1ZS50b0xvd2VyQ2FzZSgpO1xuICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZSA9PT0gTUlNRV9UWVBFUy5URVhUX0hUTUwgfHwgdmFsdWUgPT09IE1JTUVfVFlQRVMuQVBQTElDQVRJT05fWE1MO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBucyA9PT0gTlMuU1ZHICYmICh0biA9PT0gJC5GT1JFSUdOX09CSkVDVCB8fCB0biA9PT0gJC5ERVNDIHx8IHRuID09PSAkLlRJVExFKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0ludGVncmF0aW9uUG9pbnQodG4sIG5zLCBhdHRycywgZm9yZWlnbk5TKSB7XG4gICAgcmV0dXJuICgoKCFmb3JlaWduTlMgfHwgZm9yZWlnbk5TID09PSBOUy5IVE1MKSAmJiBpc0h0bWxJbnRlZ3JhdGlvblBvaW50KHRuLCBucywgYXR0cnMpKSB8fFxuICAgICAgICAoKCFmb3JlaWduTlMgfHwgZm9yZWlnbk5TID09PSBOUy5NQVRITUwpICYmIGlzTWF0aE1MVGV4dEludGVncmF0aW9uUG9pbnQodG4sIG5zKSkpO1xufVxuIl0sIm5hbWVzIjpbIlRBR19JRCIsIiQiLCJOUyIsIkFUVFJTIiwiZ2V0VGFnSUQiLCJNSU1FX1RZUEVTIiwiVEVYVF9IVE1MIiwiQVBQTElDQVRJT05fWE1MIiwiREVGSU5JVElPTl9VUkxfQVRUUiIsIkFESlVTVEVEX0RFRklOSVRJT05fVVJMX0FUVFIiLCJTVkdfQVRUUlNfQURKVVNUTUVOVF9NQVAiLCJNYXAiLCJtYXAiLCJhdHRyIiwidG9Mb3dlckNhc2UiLCJYTUxfQVRUUlNfQURKVVNUTUVOVF9NQVAiLCJwcmVmaXgiLCJuYW1lIiwibmFtZXNwYWNlIiwiWExJTksiLCJYTUwiLCJYTUxOUyIsIlNWR19UQUdfTkFNRVNfQURKVVNUTUVOVF9NQVAiLCJ0biIsIkVYSVRTX0ZPUkVJR05fQ09OVEVOVCIsIlNldCIsIkIiLCJCSUciLCJCTE9DS1FVT1RFIiwiQk9EWSIsIkJSIiwiQ0VOVEVSIiwiQ09ERSIsIkREIiwiRElWIiwiREwiLCJEVCIsIkVNIiwiRU1CRUQiLCJIMSIsIkgyIiwiSDMiLCJINCIsIkg1IiwiSDYiLCJIRUFEIiwiSFIiLCJJIiwiSU1HIiwiTEkiLCJMSVNUSU5HIiwiTUVOVSIsIk1FVEEiLCJOT0JSIiwiT0wiLCJQIiwiUFJFIiwiUlVCWSIsIlMiLCJTTUFMTCIsIlNQQU4iLCJTVFJPTkciLCJTVFJJS0UiLCJTVUIiLCJTVVAiLCJUQUJMRSIsIlRUIiwiVSIsIlVMIiwiVkFSIiwiY2F1c2VzRXhpdCIsInN0YXJ0VGFnVG9rZW4iLCJ0YWdJRCIsImlzRm9udFdpdGhBdHRycyIsIkZPTlQiLCJhdHRycyIsInNvbWUiLCJDT0xPUiIsIlNJWkUiLCJGQUNFIiwiaGFzIiwiYWRqdXN0VG9rZW5NYXRoTUxBdHRycyIsInRva2VuIiwiaSIsImxlbmd0aCIsImFkanVzdFRva2VuU1ZHQXR0cnMiLCJhZGp1c3RlZEF0dHJOYW1lIiwiZ2V0IiwiYWRqdXN0VG9rZW5YTUxBdHRycyIsImFkanVzdGVkQXR0ckVudHJ5IiwiYWRqdXN0VG9rZW5TVkdUYWdOYW1lIiwiYWRqdXN0ZWRUYWdOYW1lIiwidGFnTmFtZSIsImlzTWF0aE1MVGV4dEludGVncmF0aW9uUG9pbnQiLCJucyIsIk1BVEhNTCIsIk1JIiwiTU8iLCJNTiIsIk1TIiwiTVRFWFQiLCJpc0h0bWxJbnRlZ3JhdGlvblBvaW50IiwiQU5OT1RBVElPTl9YTUwiLCJFTkNPRElORyIsInZhbHVlIiwiU1ZHIiwiRk9SRUlHTl9PQkpFQ1QiLCJERVNDIiwiVElUTEUiLCJpc0ludGVncmF0aW9uUG9pbnQiLCJmb3JlaWduTlMiLCJIVE1MIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/common/foreign-content.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/common/html.js":
/*!*************************************************!*\
  !*** ./node_modules/parse5/dist/common/html.js ***!
  \*************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ATTRS: () => (/* binding */ ATTRS),\n/* harmony export */   DOCUMENT_MODE: () => (/* binding */ DOCUMENT_MODE),\n/* harmony export */   NS: () => (/* binding */ NS),\n/* harmony export */   NUMBERED_HEADERS: () => (/* binding */ NUMBERED_HEADERS),\n/* harmony export */   SPECIAL_ELEMENTS: () => (/* binding */ SPECIAL_ELEMENTS),\n/* harmony export */   TAG_ID: () => (/* binding */ TAG_ID),\n/* harmony export */   TAG_NAMES: () => (/* binding */ TAG_NAMES),\n/* harmony export */   getTagID: () => (/* binding */ getTagID),\n/* harmony export */   hasUnescapedText: () => (/* binding */ hasUnescapedText)\n/* harmony export */ });\n/** All valid namespaces in HTML. */ var NS;\n(function(NS) {\n    NS[\"HTML\"] = \"http://www.w3.org/1999/xhtml\";\n    NS[\"MATHML\"] = \"http://www.w3.org/1998/Math/MathML\";\n    NS[\"SVG\"] = \"http://www.w3.org/2000/svg\";\n    NS[\"XLINK\"] = \"http://www.w3.org/1999/xlink\";\n    NS[\"XML\"] = \"http://www.w3.org/XML/1998/namespace\";\n    NS[\"XMLNS\"] = \"http://www.w3.org/2000/xmlns/\";\n})(NS || (NS = {}));\nvar ATTRS;\n(function(ATTRS) {\n    ATTRS[\"TYPE\"] = \"type\";\n    ATTRS[\"ACTION\"] = \"action\";\n    ATTRS[\"ENCODING\"] = \"encoding\";\n    ATTRS[\"PROMPT\"] = \"prompt\";\n    ATTRS[\"NAME\"] = \"name\";\n    ATTRS[\"COLOR\"] = \"color\";\n    ATTRS[\"FACE\"] = \"face\";\n    ATTRS[\"SIZE\"] = \"size\";\n})(ATTRS || (ATTRS = {}));\n/**\n * The mode of the document.\n *\n * @see {@link https://dom.spec.whatwg.org/#concept-document-limited-quirks}\n */ var DOCUMENT_MODE;\n(function(DOCUMENT_MODE) {\n    DOCUMENT_MODE[\"NO_QUIRKS\"] = \"no-quirks\";\n    DOCUMENT_MODE[\"QUIRKS\"] = \"quirks\";\n    DOCUMENT_MODE[\"LIMITED_QUIRKS\"] = \"limited-quirks\";\n})(DOCUMENT_MODE || (DOCUMENT_MODE = {}));\nvar TAG_NAMES;\n(function(TAG_NAMES) {\n    TAG_NAMES[\"A\"] = \"a\";\n    TAG_NAMES[\"ADDRESS\"] = \"address\";\n    TAG_NAMES[\"ANNOTATION_XML\"] = \"annotation-xml\";\n    TAG_NAMES[\"APPLET\"] = \"applet\";\n    TAG_NAMES[\"AREA\"] = \"area\";\n    TAG_NAMES[\"ARTICLE\"] = \"article\";\n    TAG_NAMES[\"ASIDE\"] = \"aside\";\n    TAG_NAMES[\"B\"] = \"b\";\n    TAG_NAMES[\"BASE\"] = \"base\";\n    TAG_NAMES[\"BASEFONT\"] = \"basefont\";\n    TAG_NAMES[\"BGSOUND\"] = \"bgsound\";\n    TAG_NAMES[\"BIG\"] = \"big\";\n    TAG_NAMES[\"BLOCKQUOTE\"] = \"blockquote\";\n    TAG_NAMES[\"BODY\"] = \"body\";\n    TAG_NAMES[\"BR\"] = \"br\";\n    TAG_NAMES[\"BUTTON\"] = \"button\";\n    TAG_NAMES[\"CAPTION\"] = \"caption\";\n    TAG_NAMES[\"CENTER\"] = \"center\";\n    TAG_NAMES[\"CODE\"] = \"code\";\n    TAG_NAMES[\"COL\"] = \"col\";\n    TAG_NAMES[\"COLGROUP\"] = \"colgroup\";\n    TAG_NAMES[\"DD\"] = \"dd\";\n    TAG_NAMES[\"DESC\"] = \"desc\";\n    TAG_NAMES[\"DETAILS\"] = \"details\";\n    TAG_NAMES[\"DIALOG\"] = \"dialog\";\n    TAG_NAMES[\"DIR\"] = \"dir\";\n    TAG_NAMES[\"DIV\"] = \"div\";\n    TAG_NAMES[\"DL\"] = \"dl\";\n    TAG_NAMES[\"DT\"] = \"dt\";\n    TAG_NAMES[\"EM\"] = \"em\";\n    TAG_NAMES[\"EMBED\"] = \"embed\";\n    TAG_NAMES[\"FIELDSET\"] = \"fieldset\";\n    TAG_NAMES[\"FIGCAPTION\"] = \"figcaption\";\n    TAG_NAMES[\"FIGURE\"] = \"figure\";\n    TAG_NAMES[\"FONT\"] = \"font\";\n    TAG_NAMES[\"FOOTER\"] = \"footer\";\n    TAG_NAMES[\"FOREIGN_OBJECT\"] = \"foreignObject\";\n    TAG_NAMES[\"FORM\"] = \"form\";\n    TAG_NAMES[\"FRAME\"] = \"frame\";\n    TAG_NAMES[\"FRAMESET\"] = \"frameset\";\n    TAG_NAMES[\"H1\"] = \"h1\";\n    TAG_NAMES[\"H2\"] = \"h2\";\n    TAG_NAMES[\"H3\"] = \"h3\";\n    TAG_NAMES[\"H4\"] = \"h4\";\n    TAG_NAMES[\"H5\"] = \"h5\";\n    TAG_NAMES[\"H6\"] = \"h6\";\n    TAG_NAMES[\"HEAD\"] = \"head\";\n    TAG_NAMES[\"HEADER\"] = \"header\";\n    TAG_NAMES[\"HGROUP\"] = \"hgroup\";\n    TAG_NAMES[\"HR\"] = \"hr\";\n    TAG_NAMES[\"HTML\"] = \"html\";\n    TAG_NAMES[\"I\"] = \"i\";\n    TAG_NAMES[\"IMG\"] = \"img\";\n    TAG_NAMES[\"IMAGE\"] = \"image\";\n    TAG_NAMES[\"INPUT\"] = \"input\";\n    TAG_NAMES[\"IFRAME\"] = \"iframe\";\n    TAG_NAMES[\"KEYGEN\"] = \"keygen\";\n    TAG_NAMES[\"LABEL\"] = \"label\";\n    TAG_NAMES[\"LI\"] = \"li\";\n    TAG_NAMES[\"LINK\"] = \"link\";\n    TAG_NAMES[\"LISTING\"] = \"listing\";\n    TAG_NAMES[\"MAIN\"] = \"main\";\n    TAG_NAMES[\"MALIGNMARK\"] = \"malignmark\";\n    TAG_NAMES[\"MARQUEE\"] = \"marquee\";\n    TAG_NAMES[\"MATH\"] = \"math\";\n    TAG_NAMES[\"MENU\"] = \"menu\";\n    TAG_NAMES[\"META\"] = \"meta\";\n    TAG_NAMES[\"MGLYPH\"] = \"mglyph\";\n    TAG_NAMES[\"MI\"] = \"mi\";\n    TAG_NAMES[\"MO\"] = \"mo\";\n    TAG_NAMES[\"MN\"] = \"mn\";\n    TAG_NAMES[\"MS\"] = \"ms\";\n    TAG_NAMES[\"MTEXT\"] = \"mtext\";\n    TAG_NAMES[\"NAV\"] = \"nav\";\n    TAG_NAMES[\"NOBR\"] = \"nobr\";\n    TAG_NAMES[\"NOFRAMES\"] = \"noframes\";\n    TAG_NAMES[\"NOEMBED\"] = \"noembed\";\n    TAG_NAMES[\"NOSCRIPT\"] = \"noscript\";\n    TAG_NAMES[\"OBJECT\"] = \"object\";\n    TAG_NAMES[\"OL\"] = \"ol\";\n    TAG_NAMES[\"OPTGROUP\"] = \"optgroup\";\n    TAG_NAMES[\"OPTION\"] = \"option\";\n    TAG_NAMES[\"P\"] = \"p\";\n    TAG_NAMES[\"PARAM\"] = \"param\";\n    TAG_NAMES[\"PLAINTEXT\"] = \"plaintext\";\n    TAG_NAMES[\"PRE\"] = \"pre\";\n    TAG_NAMES[\"RB\"] = \"rb\";\n    TAG_NAMES[\"RP\"] = \"rp\";\n    TAG_NAMES[\"RT\"] = \"rt\";\n    TAG_NAMES[\"RTC\"] = \"rtc\";\n    TAG_NAMES[\"RUBY\"] = \"ruby\";\n    TAG_NAMES[\"S\"] = \"s\";\n    TAG_NAMES[\"SCRIPT\"] = \"script\";\n    TAG_NAMES[\"SEARCH\"] = \"search\";\n    TAG_NAMES[\"SECTION\"] = \"section\";\n    TAG_NAMES[\"SELECT\"] = \"select\";\n    TAG_NAMES[\"SOURCE\"] = \"source\";\n    TAG_NAMES[\"SMALL\"] = \"small\";\n    TAG_NAMES[\"SPAN\"] = \"span\";\n    TAG_NAMES[\"STRIKE\"] = \"strike\";\n    TAG_NAMES[\"STRONG\"] = \"strong\";\n    TAG_NAMES[\"STYLE\"] = \"style\";\n    TAG_NAMES[\"SUB\"] = \"sub\";\n    TAG_NAMES[\"SUMMARY\"] = \"summary\";\n    TAG_NAMES[\"SUP\"] = \"sup\";\n    TAG_NAMES[\"TABLE\"] = \"table\";\n    TAG_NAMES[\"TBODY\"] = \"tbody\";\n    TAG_NAMES[\"TEMPLATE\"] = \"template\";\n    TAG_NAMES[\"TEXTAREA\"] = \"textarea\";\n    TAG_NAMES[\"TFOOT\"] = \"tfoot\";\n    TAG_NAMES[\"TD\"] = \"td\";\n    TAG_NAMES[\"TH\"] = \"th\";\n    TAG_NAMES[\"THEAD\"] = \"thead\";\n    TAG_NAMES[\"TITLE\"] = \"title\";\n    TAG_NAMES[\"TR\"] = \"tr\";\n    TAG_NAMES[\"TRACK\"] = \"track\";\n    TAG_NAMES[\"TT\"] = \"tt\";\n    TAG_NAMES[\"U\"] = \"u\";\n    TAG_NAMES[\"UL\"] = \"ul\";\n    TAG_NAMES[\"SVG\"] = \"svg\";\n    TAG_NAMES[\"VAR\"] = \"var\";\n    TAG_NAMES[\"WBR\"] = \"wbr\";\n    TAG_NAMES[\"XMP\"] = \"xmp\";\n})(TAG_NAMES || (TAG_NAMES = {}));\n/**\n * Tag IDs are numeric IDs for known tag names.\n *\n * We use tag IDs to improve the performance of tag name comparisons.\n */ var TAG_ID;\n(function(TAG_ID) {\n    TAG_ID[TAG_ID[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n    TAG_ID[TAG_ID[\"A\"] = 1] = \"A\";\n    TAG_ID[TAG_ID[\"ADDRESS\"] = 2] = \"ADDRESS\";\n    TAG_ID[TAG_ID[\"ANNOTATION_XML\"] = 3] = \"ANNOTATION_XML\";\n    TAG_ID[TAG_ID[\"APPLET\"] = 4] = \"APPLET\";\n    TAG_ID[TAG_ID[\"AREA\"] = 5] = \"AREA\";\n    TAG_ID[TAG_ID[\"ARTICLE\"] = 6] = \"ARTICLE\";\n    TAG_ID[TAG_ID[\"ASIDE\"] = 7] = \"ASIDE\";\n    TAG_ID[TAG_ID[\"B\"] = 8] = \"B\";\n    TAG_ID[TAG_ID[\"BASE\"] = 9] = \"BASE\";\n    TAG_ID[TAG_ID[\"BASEFONT\"] = 10] = \"BASEFONT\";\n    TAG_ID[TAG_ID[\"BGSOUND\"] = 11] = \"BGSOUND\";\n    TAG_ID[TAG_ID[\"BIG\"] = 12] = \"BIG\";\n    TAG_ID[TAG_ID[\"BLOCKQUOTE\"] = 13] = \"BLOCKQUOTE\";\n    TAG_ID[TAG_ID[\"BODY\"] = 14] = \"BODY\";\n    TAG_ID[TAG_ID[\"BR\"] = 15] = \"BR\";\n    TAG_ID[TAG_ID[\"BUTTON\"] = 16] = \"BUTTON\";\n    TAG_ID[TAG_ID[\"CAPTION\"] = 17] = \"CAPTION\";\n    TAG_ID[TAG_ID[\"CENTER\"] = 18] = \"CENTER\";\n    TAG_ID[TAG_ID[\"CODE\"] = 19] = \"CODE\";\n    TAG_ID[TAG_ID[\"COL\"] = 20] = \"COL\";\n    TAG_ID[TAG_ID[\"COLGROUP\"] = 21] = \"COLGROUP\";\n    TAG_ID[TAG_ID[\"DD\"] = 22] = \"DD\";\n    TAG_ID[TAG_ID[\"DESC\"] = 23] = \"DESC\";\n    TAG_ID[TAG_ID[\"DETAILS\"] = 24] = \"DETAILS\";\n    TAG_ID[TAG_ID[\"DIALOG\"] = 25] = \"DIALOG\";\n    TAG_ID[TAG_ID[\"DIR\"] = 26] = \"DIR\";\n    TAG_ID[TAG_ID[\"DIV\"] = 27] = \"DIV\";\n    TAG_ID[TAG_ID[\"DL\"] = 28] = \"DL\";\n    TAG_ID[TAG_ID[\"DT\"] = 29] = \"DT\";\n    TAG_ID[TAG_ID[\"EM\"] = 30] = \"EM\";\n    TAG_ID[TAG_ID[\"EMBED\"] = 31] = \"EMBED\";\n    TAG_ID[TAG_ID[\"FIELDSET\"] = 32] = \"FIELDSET\";\n    TAG_ID[TAG_ID[\"FIGCAPTION\"] = 33] = \"FIGCAPTION\";\n    TAG_ID[TAG_ID[\"FIGURE\"] = 34] = \"FIGURE\";\n    TAG_ID[TAG_ID[\"FONT\"] = 35] = \"FONT\";\n    TAG_ID[TAG_ID[\"FOOTER\"] = 36] = \"FOOTER\";\n    TAG_ID[TAG_ID[\"FOREIGN_OBJECT\"] = 37] = \"FOREIGN_OBJECT\";\n    TAG_ID[TAG_ID[\"FORM\"] = 38] = \"FORM\";\n    TAG_ID[TAG_ID[\"FRAME\"] = 39] = \"FRAME\";\n    TAG_ID[TAG_ID[\"FRAMESET\"] = 40] = \"FRAMESET\";\n    TAG_ID[TAG_ID[\"H1\"] = 41] = \"H1\";\n    TAG_ID[TAG_ID[\"H2\"] = 42] = \"H2\";\n    TAG_ID[TAG_ID[\"H3\"] = 43] = \"H3\";\n    TAG_ID[TAG_ID[\"H4\"] = 44] = \"H4\";\n    TAG_ID[TAG_ID[\"H5\"] = 45] = \"H5\";\n    TAG_ID[TAG_ID[\"H6\"] = 46] = \"H6\";\n    TAG_ID[TAG_ID[\"HEAD\"] = 47] = \"HEAD\";\n    TAG_ID[TAG_ID[\"HEADER\"] = 48] = \"HEADER\";\n    TAG_ID[TAG_ID[\"HGROUP\"] = 49] = \"HGROUP\";\n    TAG_ID[TAG_ID[\"HR\"] = 50] = \"HR\";\n    TAG_ID[TAG_ID[\"HTML\"] = 51] = \"HTML\";\n    TAG_ID[TAG_ID[\"I\"] = 52] = \"I\";\n    TAG_ID[TAG_ID[\"IMG\"] = 53] = \"IMG\";\n    TAG_ID[TAG_ID[\"IMAGE\"] = 54] = \"IMAGE\";\n    TAG_ID[TAG_ID[\"INPUT\"] = 55] = \"INPUT\";\n    TAG_ID[TAG_ID[\"IFRAME\"] = 56] = \"IFRAME\";\n    TAG_ID[TAG_ID[\"KEYGEN\"] = 57] = \"KEYGEN\";\n    TAG_ID[TAG_ID[\"LABEL\"] = 58] = \"LABEL\";\n    TAG_ID[TAG_ID[\"LI\"] = 59] = \"LI\";\n    TAG_ID[TAG_ID[\"LINK\"] = 60] = \"LINK\";\n    TAG_ID[TAG_ID[\"LISTING\"] = 61] = \"LISTING\";\n    TAG_ID[TAG_ID[\"MAIN\"] = 62] = \"MAIN\";\n    TAG_ID[TAG_ID[\"MALIGNMARK\"] = 63] = \"MALIGNMARK\";\n    TAG_ID[TAG_ID[\"MARQUEE\"] = 64] = \"MARQUEE\";\n    TAG_ID[TAG_ID[\"MATH\"] = 65] = \"MATH\";\n    TAG_ID[TAG_ID[\"MENU\"] = 66] = \"MENU\";\n    TAG_ID[TAG_ID[\"META\"] = 67] = \"META\";\n    TAG_ID[TAG_ID[\"MGLYPH\"] = 68] = \"MGLYPH\";\n    TAG_ID[TAG_ID[\"MI\"] = 69] = \"MI\";\n    TAG_ID[TAG_ID[\"MO\"] = 70] = \"MO\";\n    TAG_ID[TAG_ID[\"MN\"] = 71] = \"MN\";\n    TAG_ID[TAG_ID[\"MS\"] = 72] = \"MS\";\n    TAG_ID[TAG_ID[\"MTEXT\"] = 73] = \"MTEXT\";\n    TAG_ID[TAG_ID[\"NAV\"] = 74] = \"NAV\";\n    TAG_ID[TAG_ID[\"NOBR\"] = 75] = \"NOBR\";\n    TAG_ID[TAG_ID[\"NOFRAMES\"] = 76] = \"NOFRAMES\";\n    TAG_ID[TAG_ID[\"NOEMBED\"] = 77] = \"NOEMBED\";\n    TAG_ID[TAG_ID[\"NOSCRIPT\"] = 78] = \"NOSCRIPT\";\n    TAG_ID[TAG_ID[\"OBJECT\"] = 79] = \"OBJECT\";\n    TAG_ID[TAG_ID[\"OL\"] = 80] = \"OL\";\n    TAG_ID[TAG_ID[\"OPTGROUP\"] = 81] = \"OPTGROUP\";\n    TAG_ID[TAG_ID[\"OPTION\"] = 82] = \"OPTION\";\n    TAG_ID[TAG_ID[\"P\"] = 83] = \"P\";\n    TAG_ID[TAG_ID[\"PARAM\"] = 84] = \"PARAM\";\n    TAG_ID[TAG_ID[\"PLAINTEXT\"] = 85] = \"PLAINTEXT\";\n    TAG_ID[TAG_ID[\"PRE\"] = 86] = \"PRE\";\n    TAG_ID[TAG_ID[\"RB\"] = 87] = \"RB\";\n    TAG_ID[TAG_ID[\"RP\"] = 88] = \"RP\";\n    TAG_ID[TAG_ID[\"RT\"] = 89] = \"RT\";\n    TAG_ID[TAG_ID[\"RTC\"] = 90] = \"RTC\";\n    TAG_ID[TAG_ID[\"RUBY\"] = 91] = \"RUBY\";\n    TAG_ID[TAG_ID[\"S\"] = 92] = \"S\";\n    TAG_ID[TAG_ID[\"SCRIPT\"] = 93] = \"SCRIPT\";\n    TAG_ID[TAG_ID[\"SEARCH\"] = 94] = \"SEARCH\";\n    TAG_ID[TAG_ID[\"SECTION\"] = 95] = \"SECTION\";\n    TAG_ID[TAG_ID[\"SELECT\"] = 96] = \"SELECT\";\n    TAG_ID[TAG_ID[\"SOURCE\"] = 97] = \"SOURCE\";\n    TAG_ID[TAG_ID[\"SMALL\"] = 98] = \"SMALL\";\n    TAG_ID[TAG_ID[\"SPAN\"] = 99] = \"SPAN\";\n    TAG_ID[TAG_ID[\"STRIKE\"] = 100] = \"STRIKE\";\n    TAG_ID[TAG_ID[\"STRONG\"] = 101] = \"STRONG\";\n    TAG_ID[TAG_ID[\"STYLE\"] = 102] = \"STYLE\";\n    TAG_ID[TAG_ID[\"SUB\"] = 103] = \"SUB\";\n    TAG_ID[TAG_ID[\"SUMMARY\"] = 104] = \"SUMMARY\";\n    TAG_ID[TAG_ID[\"SUP\"] = 105] = \"SUP\";\n    TAG_ID[TAG_ID[\"TABLE\"] = 106] = \"TABLE\";\n    TAG_ID[TAG_ID[\"TBODY\"] = 107] = \"TBODY\";\n    TAG_ID[TAG_ID[\"TEMPLATE\"] = 108] = \"TEMPLATE\";\n    TAG_ID[TAG_ID[\"TEXTAREA\"] = 109] = \"TEXTAREA\";\n    TAG_ID[TAG_ID[\"TFOOT\"] = 110] = \"TFOOT\";\n    TAG_ID[TAG_ID[\"TD\"] = 111] = \"TD\";\n    TAG_ID[TAG_ID[\"TH\"] = 112] = \"TH\";\n    TAG_ID[TAG_ID[\"THEAD\"] = 113] = \"THEAD\";\n    TAG_ID[TAG_ID[\"TITLE\"] = 114] = \"TITLE\";\n    TAG_ID[TAG_ID[\"TR\"] = 115] = \"TR\";\n    TAG_ID[TAG_ID[\"TRACK\"] = 116] = \"TRACK\";\n    TAG_ID[TAG_ID[\"TT\"] = 117] = \"TT\";\n    TAG_ID[TAG_ID[\"U\"] = 118] = \"U\";\n    TAG_ID[TAG_ID[\"UL\"] = 119] = \"UL\";\n    TAG_ID[TAG_ID[\"SVG\"] = 120] = \"SVG\";\n    TAG_ID[TAG_ID[\"VAR\"] = 121] = \"VAR\";\n    TAG_ID[TAG_ID[\"WBR\"] = 122] = \"WBR\";\n    TAG_ID[TAG_ID[\"XMP\"] = 123] = \"XMP\";\n})(TAG_ID || (TAG_ID = {}));\nconst TAG_NAME_TO_ID = new Map([\n    [\n        TAG_NAMES.A,\n        TAG_ID.A\n    ],\n    [\n        TAG_NAMES.ADDRESS,\n        TAG_ID.ADDRESS\n    ],\n    [\n        TAG_NAMES.ANNOTATION_XML,\n        TAG_ID.ANNOTATION_XML\n    ],\n    [\n        TAG_NAMES.APPLET,\n        TAG_ID.APPLET\n    ],\n    [\n        TAG_NAMES.AREA,\n        TAG_ID.AREA\n    ],\n    [\n        TAG_NAMES.ARTICLE,\n        TAG_ID.ARTICLE\n    ],\n    [\n        TAG_NAMES.ASIDE,\n        TAG_ID.ASIDE\n    ],\n    [\n        TAG_NAMES.B,\n        TAG_ID.B\n    ],\n    [\n        TAG_NAMES.BASE,\n        TAG_ID.BASE\n    ],\n    [\n        TAG_NAMES.BASEFONT,\n        TAG_ID.BASEFONT\n    ],\n    [\n        TAG_NAMES.BGSOUND,\n        TAG_ID.BGSOUND\n    ],\n    [\n        TAG_NAMES.BIG,\n        TAG_ID.BIG\n    ],\n    [\n        TAG_NAMES.BLOCKQUOTE,\n        TAG_ID.BLOCKQUOTE\n    ],\n    [\n        TAG_NAMES.BODY,\n        TAG_ID.BODY\n    ],\n    [\n        TAG_NAMES.BR,\n        TAG_ID.BR\n    ],\n    [\n        TAG_NAMES.BUTTON,\n        TAG_ID.BUTTON\n    ],\n    [\n        TAG_NAMES.CAPTION,\n        TAG_ID.CAPTION\n    ],\n    [\n        TAG_NAMES.CENTER,\n        TAG_ID.CENTER\n    ],\n    [\n        TAG_NAMES.CODE,\n        TAG_ID.CODE\n    ],\n    [\n        TAG_NAMES.COL,\n        TAG_ID.COL\n    ],\n    [\n        TAG_NAMES.COLGROUP,\n        TAG_ID.COLGROUP\n    ],\n    [\n        TAG_NAMES.DD,\n        TAG_ID.DD\n    ],\n    [\n        TAG_NAMES.DESC,\n        TAG_ID.DESC\n    ],\n    [\n        TAG_NAMES.DETAILS,\n        TAG_ID.DETAILS\n    ],\n    [\n        TAG_NAMES.DIALOG,\n        TAG_ID.DIALOG\n    ],\n    [\n        TAG_NAMES.DIR,\n        TAG_ID.DIR\n    ],\n    [\n        TAG_NAMES.DIV,\n        TAG_ID.DIV\n    ],\n    [\n        TAG_NAMES.DL,\n        TAG_ID.DL\n    ],\n    [\n        TAG_NAMES.DT,\n        TAG_ID.DT\n    ],\n    [\n        TAG_NAMES.EM,\n        TAG_ID.EM\n    ],\n    [\n        TAG_NAMES.EMBED,\n        TAG_ID.EMBED\n    ],\n    [\n        TAG_NAMES.FIELDSET,\n        TAG_ID.FIELDSET\n    ],\n    [\n        TAG_NAMES.FIGCAPTION,\n        TAG_ID.FIGCAPTION\n    ],\n    [\n        TAG_NAMES.FIGURE,\n        TAG_ID.FIGURE\n    ],\n    [\n        TAG_NAMES.FONT,\n        TAG_ID.FONT\n    ],\n    [\n        TAG_NAMES.FOOTER,\n        TAG_ID.FOOTER\n    ],\n    [\n        TAG_NAMES.FOREIGN_OBJECT,\n        TAG_ID.FOREIGN_OBJECT\n    ],\n    [\n        TAG_NAMES.FORM,\n        TAG_ID.FORM\n    ],\n    [\n        TAG_NAMES.FRAME,\n        TAG_ID.FRAME\n    ],\n    [\n        TAG_NAMES.FRAMESET,\n        TAG_ID.FRAMESET\n    ],\n    [\n        TAG_NAMES.H1,\n        TAG_ID.H1\n    ],\n    [\n        TAG_NAMES.H2,\n        TAG_ID.H2\n    ],\n    [\n        TAG_NAMES.H3,\n        TAG_ID.H3\n    ],\n    [\n        TAG_NAMES.H4,\n        TAG_ID.H4\n    ],\n    [\n        TAG_NAMES.H5,\n        TAG_ID.H5\n    ],\n    [\n        TAG_NAMES.H6,\n        TAG_ID.H6\n    ],\n    [\n        TAG_NAMES.HEAD,\n        TAG_ID.HEAD\n    ],\n    [\n        TAG_NAMES.HEADER,\n        TAG_ID.HEADER\n    ],\n    [\n        TAG_NAMES.HGROUP,\n        TAG_ID.HGROUP\n    ],\n    [\n        TAG_NAMES.HR,\n        TAG_ID.HR\n    ],\n    [\n        TAG_NAMES.HTML,\n        TAG_ID.HTML\n    ],\n    [\n        TAG_NAMES.I,\n        TAG_ID.I\n    ],\n    [\n        TAG_NAMES.IMG,\n        TAG_ID.IMG\n    ],\n    [\n        TAG_NAMES.IMAGE,\n        TAG_ID.IMAGE\n    ],\n    [\n        TAG_NAMES.INPUT,\n        TAG_ID.INPUT\n    ],\n    [\n        TAG_NAMES.IFRAME,\n        TAG_ID.IFRAME\n    ],\n    [\n        TAG_NAMES.KEYGEN,\n        TAG_ID.KEYGEN\n    ],\n    [\n        TAG_NAMES.LABEL,\n        TAG_ID.LABEL\n    ],\n    [\n        TAG_NAMES.LI,\n        TAG_ID.LI\n    ],\n    [\n        TAG_NAMES.LINK,\n        TAG_ID.LINK\n    ],\n    [\n        TAG_NAMES.LISTING,\n        TAG_ID.LISTING\n    ],\n    [\n        TAG_NAMES.MAIN,\n        TAG_ID.MAIN\n    ],\n    [\n        TAG_NAMES.MALIGNMARK,\n        TAG_ID.MALIGNMARK\n    ],\n    [\n        TAG_NAMES.MARQUEE,\n        TAG_ID.MARQUEE\n    ],\n    [\n        TAG_NAMES.MATH,\n        TAG_ID.MATH\n    ],\n    [\n        TAG_NAMES.MENU,\n        TAG_ID.MENU\n    ],\n    [\n        TAG_NAMES.META,\n        TAG_ID.META\n    ],\n    [\n        TAG_NAMES.MGLYPH,\n        TAG_ID.MGLYPH\n    ],\n    [\n        TAG_NAMES.MI,\n        TAG_ID.MI\n    ],\n    [\n        TAG_NAMES.MO,\n        TAG_ID.MO\n    ],\n    [\n        TAG_NAMES.MN,\n        TAG_ID.MN\n    ],\n    [\n        TAG_NAMES.MS,\n        TAG_ID.MS\n    ],\n    [\n        TAG_NAMES.MTEXT,\n        TAG_ID.MTEXT\n    ],\n    [\n        TAG_NAMES.NAV,\n        TAG_ID.NAV\n    ],\n    [\n        TAG_NAMES.NOBR,\n        TAG_ID.NOBR\n    ],\n    [\n        TAG_NAMES.NOFRAMES,\n        TAG_ID.NOFRAMES\n    ],\n    [\n        TAG_NAMES.NOEMBED,\n        TAG_ID.NOEMBED\n    ],\n    [\n        TAG_NAMES.NOSCRIPT,\n        TAG_ID.NOSCRIPT\n    ],\n    [\n        TAG_NAMES.OBJECT,\n        TAG_ID.OBJECT\n    ],\n    [\n        TAG_NAMES.OL,\n        TAG_ID.OL\n    ],\n    [\n        TAG_NAMES.OPTGROUP,\n        TAG_ID.OPTGROUP\n    ],\n    [\n        TAG_NAMES.OPTION,\n        TAG_ID.OPTION\n    ],\n    [\n        TAG_NAMES.P,\n        TAG_ID.P\n    ],\n    [\n        TAG_NAMES.PARAM,\n        TAG_ID.PARAM\n    ],\n    [\n        TAG_NAMES.PLAINTEXT,\n        TAG_ID.PLAINTEXT\n    ],\n    [\n        TAG_NAMES.PRE,\n        TAG_ID.PRE\n    ],\n    [\n        TAG_NAMES.RB,\n        TAG_ID.RB\n    ],\n    [\n        TAG_NAMES.RP,\n        TAG_ID.RP\n    ],\n    [\n        TAG_NAMES.RT,\n        TAG_ID.RT\n    ],\n    [\n        TAG_NAMES.RTC,\n        TAG_ID.RTC\n    ],\n    [\n        TAG_NAMES.RUBY,\n        TAG_ID.RUBY\n    ],\n    [\n        TAG_NAMES.S,\n        TAG_ID.S\n    ],\n    [\n        TAG_NAMES.SCRIPT,\n        TAG_ID.SCRIPT\n    ],\n    [\n        TAG_NAMES.SEARCH,\n        TAG_ID.SEARCH\n    ],\n    [\n        TAG_NAMES.SECTION,\n        TAG_ID.SECTION\n    ],\n    [\n        TAG_NAMES.SELECT,\n        TAG_ID.SELECT\n    ],\n    [\n        TAG_NAMES.SOURCE,\n        TAG_ID.SOURCE\n    ],\n    [\n        TAG_NAMES.SMALL,\n        TAG_ID.SMALL\n    ],\n    [\n        TAG_NAMES.SPAN,\n        TAG_ID.SPAN\n    ],\n    [\n        TAG_NAMES.STRIKE,\n        TAG_ID.STRIKE\n    ],\n    [\n        TAG_NAMES.STRONG,\n        TAG_ID.STRONG\n    ],\n    [\n        TAG_NAMES.STYLE,\n        TAG_ID.STYLE\n    ],\n    [\n        TAG_NAMES.SUB,\n        TAG_ID.SUB\n    ],\n    [\n        TAG_NAMES.SUMMARY,\n        TAG_ID.SUMMARY\n    ],\n    [\n        TAG_NAMES.SUP,\n        TAG_ID.SUP\n    ],\n    [\n        TAG_NAMES.TABLE,\n        TAG_ID.TABLE\n    ],\n    [\n        TAG_NAMES.TBODY,\n        TAG_ID.TBODY\n    ],\n    [\n        TAG_NAMES.TEMPLATE,\n        TAG_ID.TEMPLATE\n    ],\n    [\n        TAG_NAMES.TEXTAREA,\n        TAG_ID.TEXTAREA\n    ],\n    [\n        TAG_NAMES.TFOOT,\n        TAG_ID.TFOOT\n    ],\n    [\n        TAG_NAMES.TD,\n        TAG_ID.TD\n    ],\n    [\n        TAG_NAMES.TH,\n        TAG_ID.TH\n    ],\n    [\n        TAG_NAMES.THEAD,\n        TAG_ID.THEAD\n    ],\n    [\n        TAG_NAMES.TITLE,\n        TAG_ID.TITLE\n    ],\n    [\n        TAG_NAMES.TR,\n        TAG_ID.TR\n    ],\n    [\n        TAG_NAMES.TRACK,\n        TAG_ID.TRACK\n    ],\n    [\n        TAG_NAMES.TT,\n        TAG_ID.TT\n    ],\n    [\n        TAG_NAMES.U,\n        TAG_ID.U\n    ],\n    [\n        TAG_NAMES.UL,\n        TAG_ID.UL\n    ],\n    [\n        TAG_NAMES.SVG,\n        TAG_ID.SVG\n    ],\n    [\n        TAG_NAMES.VAR,\n        TAG_ID.VAR\n    ],\n    [\n        TAG_NAMES.WBR,\n        TAG_ID.WBR\n    ],\n    [\n        TAG_NAMES.XMP,\n        TAG_ID.XMP\n    ]\n]);\nfunction getTagID(tagName) {\n    var _a;\n    return (_a = TAG_NAME_TO_ID.get(tagName)) !== null && _a !== void 0 ? _a : TAG_ID.UNKNOWN;\n}\nconst $ = TAG_ID;\nconst SPECIAL_ELEMENTS = {\n    [NS.HTML]: new Set([\n        $.ADDRESS,\n        $.APPLET,\n        $.AREA,\n        $.ARTICLE,\n        $.ASIDE,\n        $.BASE,\n        $.BASEFONT,\n        $.BGSOUND,\n        $.BLOCKQUOTE,\n        $.BODY,\n        $.BR,\n        $.BUTTON,\n        $.CAPTION,\n        $.CENTER,\n        $.COL,\n        $.COLGROUP,\n        $.DD,\n        $.DETAILS,\n        $.DIR,\n        $.DIV,\n        $.DL,\n        $.DT,\n        $.EMBED,\n        $.FIELDSET,\n        $.FIGCAPTION,\n        $.FIGURE,\n        $.FOOTER,\n        $.FORM,\n        $.FRAME,\n        $.FRAMESET,\n        $.H1,\n        $.H2,\n        $.H3,\n        $.H4,\n        $.H5,\n        $.H6,\n        $.HEAD,\n        $.HEADER,\n        $.HGROUP,\n        $.HR,\n        $.HTML,\n        $.IFRAME,\n        $.IMG,\n        $.INPUT,\n        $.LI,\n        $.LINK,\n        $.LISTING,\n        $.MAIN,\n        $.MARQUEE,\n        $.MENU,\n        $.META,\n        $.NAV,\n        $.NOEMBED,\n        $.NOFRAMES,\n        $.NOSCRIPT,\n        $.OBJECT,\n        $.OL,\n        $.P,\n        $.PARAM,\n        $.PLAINTEXT,\n        $.PRE,\n        $.SCRIPT,\n        $.SECTION,\n        $.SELECT,\n        $.SOURCE,\n        $.STYLE,\n        $.SUMMARY,\n        $.TABLE,\n        $.TBODY,\n        $.TD,\n        $.TEMPLATE,\n        $.TEXTAREA,\n        $.TFOOT,\n        $.TH,\n        $.THEAD,\n        $.TITLE,\n        $.TR,\n        $.TRACK,\n        $.UL,\n        $.WBR,\n        $.XMP\n    ]),\n    [NS.MATHML]: new Set([\n        $.MI,\n        $.MO,\n        $.MN,\n        $.MS,\n        $.MTEXT,\n        $.ANNOTATION_XML\n    ]),\n    [NS.SVG]: new Set([\n        $.TITLE,\n        $.FOREIGN_OBJECT,\n        $.DESC\n    ]),\n    [NS.XLINK]: new Set(),\n    [NS.XML]: new Set(),\n    [NS.XMLNS]: new Set()\n};\nconst NUMBERED_HEADERS = new Set([\n    $.H1,\n    $.H2,\n    $.H3,\n    $.H4,\n    $.H5,\n    $.H6\n]);\nconst UNESCAPED_TEXT = new Set([\n    TAG_NAMES.STYLE,\n    TAG_NAMES.SCRIPT,\n    TAG_NAMES.XMP,\n    TAG_NAMES.IFRAME,\n    TAG_NAMES.NOEMBED,\n    TAG_NAMES.NOFRAMES,\n    TAG_NAMES.PLAINTEXT\n]);\nfunction hasUnescapedText(tn, scriptingEnabled) {\n    return UNESCAPED_TEXT.has(tn) || scriptingEnabled && tn === TAG_NAMES.NOSCRIPT;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/common/html.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/common/token.js":
/*!**************************************************!*\
  !*** ./node_modules/parse5/dist/common/token.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TokenType: () => (/* binding */ TokenType),\n/* harmony export */   getTokenAttr: () => (/* binding */ getTokenAttr)\n/* harmony export */ });\nvar TokenType;\n(function(TokenType) {\n    TokenType[TokenType[\"CHARACTER\"] = 0] = \"CHARACTER\";\n    TokenType[TokenType[\"NULL_CHARACTER\"] = 1] = \"NULL_CHARACTER\";\n    TokenType[TokenType[\"WHITESPACE_CHARACTER\"] = 2] = \"WHITESPACE_CHARACTER\";\n    TokenType[TokenType[\"START_TAG\"] = 3] = \"START_TAG\";\n    TokenType[TokenType[\"END_TAG\"] = 4] = \"END_TAG\";\n    TokenType[TokenType[\"COMMENT\"] = 5] = \"COMMENT\";\n    TokenType[TokenType[\"DOCTYPE\"] = 6] = \"DOCTYPE\";\n    TokenType[TokenType[\"EOF\"] = 7] = \"EOF\";\n    TokenType[TokenType[\"HIBERNATION\"] = 8] = \"HIBERNATION\";\n})(TokenType || (TokenType = {}));\nfunction getTokenAttr(token, attrName) {\n    for(let i = token.attrs.length - 1; i >= 0; i--){\n        if (token.attrs[i].name === attrName) {\n            return token.attrs[i].value;\n        }\n    }\n    return null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcGFyc2U1L2Rpc3QvY29tbW9uL3Rva2VuLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQU8sSUFBSUEsVUFBVTtBQUNwQixVQUFVQSxTQUFTO0lBQ2hCQSxTQUFTLENBQUNBLFNBQVMsQ0FBQyxZQUFZLEdBQUcsRUFBRSxHQUFHO0lBQ3hDQSxTQUFTLENBQUNBLFNBQVMsQ0FBQyxpQkFBaUIsR0FBRyxFQUFFLEdBQUc7SUFDN0NBLFNBQVMsQ0FBQ0EsU0FBUyxDQUFDLHVCQUF1QixHQUFHLEVBQUUsR0FBRztJQUNuREEsU0FBUyxDQUFDQSxTQUFTLENBQUMsWUFBWSxHQUFHLEVBQUUsR0FBRztJQUN4Q0EsU0FBUyxDQUFDQSxTQUFTLENBQUMsVUFBVSxHQUFHLEVBQUUsR0FBRztJQUN0Q0EsU0FBUyxDQUFDQSxTQUFTLENBQUMsVUFBVSxHQUFHLEVBQUUsR0FBRztJQUN0Q0EsU0FBUyxDQUFDQSxTQUFTLENBQUMsVUFBVSxHQUFHLEVBQUUsR0FBRztJQUN0Q0EsU0FBUyxDQUFDQSxTQUFTLENBQUMsTUFBTSxHQUFHLEVBQUUsR0FBRztJQUNsQ0EsU0FBUyxDQUFDQSxTQUFTLENBQUMsY0FBYyxHQUFHLEVBQUUsR0FBRztBQUM5QyxHQUFHQSxhQUFjQSxDQUFBQSxZQUFZLENBQUM7QUFDdkIsU0FBU0MsYUFBYUMsS0FBSyxFQUFFQyxRQUFRO0lBQ3hDLElBQUssSUFBSUMsSUFBSUYsTUFBTUcsS0FBSyxDQUFDQyxNQUFNLEdBQUcsR0FBR0YsS0FBSyxHQUFHQSxJQUFLO1FBQzlDLElBQUlGLE1BQU1HLEtBQUssQ0FBQ0QsRUFBRSxDQUFDRyxJQUFJLEtBQUtKLFVBQVU7WUFDbEMsT0FBT0QsTUFBTUcsS0FBSyxDQUFDRCxFQUFFLENBQUNJLEtBQUs7UUFDL0I7SUFDSjtJQUNBLE9BQU87QUFDWCIsInNvdXJjZXMiOlsid2VicGFjazovL2JlbnRvLWdyaWQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL3BhcnNlNS9kaXN0L2NvbW1vbi90b2tlbi5qcz82M2U3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB2YXIgVG9rZW5UeXBlO1xuKGZ1bmN0aW9uIChUb2tlblR5cGUpIHtcbiAgICBUb2tlblR5cGVbVG9rZW5UeXBlW1wiQ0hBUkFDVEVSXCJdID0gMF0gPSBcIkNIQVJBQ1RFUlwiO1xuICAgIFRva2VuVHlwZVtUb2tlblR5cGVbXCJOVUxMX0NIQVJBQ1RFUlwiXSA9IDFdID0gXCJOVUxMX0NIQVJBQ1RFUlwiO1xuICAgIFRva2VuVHlwZVtUb2tlblR5cGVbXCJXSElURVNQQUNFX0NIQVJBQ1RFUlwiXSA9IDJdID0gXCJXSElURVNQQUNFX0NIQVJBQ1RFUlwiO1xuICAgIFRva2VuVHlwZVtUb2tlblR5cGVbXCJTVEFSVF9UQUdcIl0gPSAzXSA9IFwiU1RBUlRfVEFHXCI7XG4gICAgVG9rZW5UeXBlW1Rva2VuVHlwZVtcIkVORF9UQUdcIl0gPSA0XSA9IFwiRU5EX1RBR1wiO1xuICAgIFRva2VuVHlwZVtUb2tlblR5cGVbXCJDT01NRU5UXCJdID0gNV0gPSBcIkNPTU1FTlRcIjtcbiAgICBUb2tlblR5cGVbVG9rZW5UeXBlW1wiRE9DVFlQRVwiXSA9IDZdID0gXCJET0NUWVBFXCI7XG4gICAgVG9rZW5UeXBlW1Rva2VuVHlwZVtcIkVPRlwiXSA9IDddID0gXCJFT0ZcIjtcbiAgICBUb2tlblR5cGVbVG9rZW5UeXBlW1wiSElCRVJOQVRJT05cIl0gPSA4XSA9IFwiSElCRVJOQVRJT05cIjtcbn0pKFRva2VuVHlwZSB8fCAoVG9rZW5UeXBlID0ge30pKTtcbmV4cG9ydCBmdW5jdGlvbiBnZXRUb2tlbkF0dHIodG9rZW4sIGF0dHJOYW1lKSB7XG4gICAgZm9yIChsZXQgaSA9IHRva2VuLmF0dHJzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSB7XG4gICAgICAgIGlmICh0b2tlbi5hdHRyc1tpXS5uYW1lID09PSBhdHRyTmFtZSkge1xuICAgICAgICAgICAgcmV0dXJuIHRva2VuLmF0dHJzW2ldLnZhbHVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xufVxuIl0sIm5hbWVzIjpbIlRva2VuVHlwZSIsImdldFRva2VuQXR0ciIsInRva2VuIiwiYXR0ck5hbWUiLCJpIiwiYXR0cnMiLCJsZW5ndGgiLCJuYW1lIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/common/token.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/common/unicode.js":
/*!****************************************************!*\
  !*** ./node_modules/parse5/dist/common/unicode.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CODE_POINTS: () => (/* binding */ CODE_POINTS),\n/* harmony export */   REPLACEMENT_CHARACTER: () => (/* binding */ REPLACEMENT_CHARACTER),\n/* harmony export */   SEQUENCES: () => (/* binding */ SEQUENCES),\n/* harmony export */   getSurrogatePairCodePoint: () => (/* binding */ getSurrogatePairCodePoint),\n/* harmony export */   isControlCodePoint: () => (/* binding */ isControlCodePoint),\n/* harmony export */   isSurrogate: () => (/* binding */ isSurrogate),\n/* harmony export */   isSurrogatePair: () => (/* binding */ isSurrogatePair),\n/* harmony export */   isUndefinedCodePoint: () => (/* binding */ isUndefinedCodePoint)\n/* harmony export */ });\nconst UNDEFINED_CODE_POINTS = new Set([\n    65534,\n    65535,\n    131070,\n    131071,\n    196606,\n    196607,\n    262142,\n    262143,\n    327678,\n    327679,\n    393214,\n    393215,\n    458750,\n    458751,\n    524286,\n    524287,\n    589822,\n    589823,\n    655358,\n    655359,\n    720894,\n    720895,\n    786430,\n    786431,\n    851966,\n    851967,\n    917502,\n    917503,\n    983038,\n    983039,\n    1048574,\n    1048575,\n    1114110,\n    1114111\n]);\nconst REPLACEMENT_CHARACTER = \"�\";\nvar CODE_POINTS;\n(function(CODE_POINTS) {\n    CODE_POINTS[CODE_POINTS[\"EOF\"] = -1] = \"EOF\";\n    CODE_POINTS[CODE_POINTS[\"NULL\"] = 0] = \"NULL\";\n    CODE_POINTS[CODE_POINTS[\"TABULATION\"] = 9] = \"TABULATION\";\n    CODE_POINTS[CODE_POINTS[\"CARRIAGE_RETURN\"] = 13] = \"CARRIAGE_RETURN\";\n    CODE_POINTS[CODE_POINTS[\"LINE_FEED\"] = 10] = \"LINE_FEED\";\n    CODE_POINTS[CODE_POINTS[\"FORM_FEED\"] = 12] = \"FORM_FEED\";\n    CODE_POINTS[CODE_POINTS[\"SPACE\"] = 32] = \"SPACE\";\n    CODE_POINTS[CODE_POINTS[\"EXCLAMATION_MARK\"] = 33] = \"EXCLAMATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"QUOTATION_MARK\"] = 34] = \"QUOTATION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"AMPERSAND\"] = 38] = \"AMPERSAND\";\n    CODE_POINTS[CODE_POINTS[\"APOSTROPHE\"] = 39] = \"APOSTROPHE\";\n    CODE_POINTS[CODE_POINTS[\"HYPHEN_MINUS\"] = 45] = \"HYPHEN_MINUS\";\n    CODE_POINTS[CODE_POINTS[\"SOLIDUS\"] = 47] = \"SOLIDUS\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_0\"] = 48] = \"DIGIT_0\";\n    CODE_POINTS[CODE_POINTS[\"DIGIT_9\"] = 57] = \"DIGIT_9\";\n    CODE_POINTS[CODE_POINTS[\"SEMICOLON\"] = 59] = \"SEMICOLON\";\n    CODE_POINTS[CODE_POINTS[\"LESS_THAN_SIGN\"] = 60] = \"LESS_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"EQUALS_SIGN\"] = 61] = \"EQUALS_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"GREATER_THAN_SIGN\"] = 62] = \"GREATER_THAN_SIGN\";\n    CODE_POINTS[CODE_POINTS[\"QUESTION_MARK\"] = 63] = \"QUESTION_MARK\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_A\"] = 65] = \"LATIN_CAPITAL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_CAPITAL_Z\"] = 90] = \"LATIN_CAPITAL_Z\";\n    CODE_POINTS[CODE_POINTS[\"RIGHT_SQUARE_BRACKET\"] = 93] = \"RIGHT_SQUARE_BRACKET\";\n    CODE_POINTS[CODE_POINTS[\"GRAVE_ACCENT\"] = 96] = \"GRAVE_ACCENT\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_A\"] = 97] = \"LATIN_SMALL_A\";\n    CODE_POINTS[CODE_POINTS[\"LATIN_SMALL_Z\"] = 122] = \"LATIN_SMALL_Z\";\n})(CODE_POINTS || (CODE_POINTS = {}));\nconst SEQUENCES = {\n    DASH_DASH: \"--\",\n    CDATA_START: \"[CDATA[\",\n    DOCTYPE: \"doctype\",\n    SCRIPT: \"script\",\n    PUBLIC: \"public\",\n    SYSTEM: \"system\"\n};\n//Surrogates\nfunction isSurrogate(cp) {\n    return cp >= 55296 && cp <= 57343;\n}\nfunction isSurrogatePair(cp) {\n    return cp >= 56320 && cp <= 57343;\n}\nfunction getSurrogatePairCodePoint(cp1, cp2) {\n    return (cp1 - 55296) * 1024 + 9216 + cp2;\n}\n//NOTE: excluding NULL and ASCII whitespace\nfunction isControlCodePoint(cp) {\n    return cp !== 0x20 && cp !== 0x0a && cp !== 0x0d && cp !== 0x09 && cp !== 0x0c && cp >= 0x01 && cp <= 0x1f || cp >= 0x7f && cp <= 0x9f;\n}\nfunction isUndefinedCodePoint(cp) {\n    return cp >= 64976 && cp <= 65007 || UNDEFINED_CODE_POINTS.has(cp);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcGFyc2U1L2Rpc3QvY29tbW9uL3VuaWNvZGUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQSxNQUFNQSx3QkFBd0IsSUFBSUMsSUFBSTtJQUNsQztJQUFPO0lBQU87SUFBUTtJQUFRO0lBQVE7SUFBUTtJQUFRO0lBQVE7SUFBUTtJQUFRO0lBQzlFO0lBQVE7SUFBUTtJQUFRO0lBQVE7SUFBUTtJQUFRO0lBQVE7SUFBUTtJQUFRO0lBQ3hFO0lBQVE7SUFBUTtJQUFRO0lBQVE7SUFBUTtJQUFRO0lBQVE7SUFBUTtJQUFRO0lBQ3hFO0lBQVM7SUFBUztDQUNyQjtBQUNNLE1BQU1DLHdCQUF3QixJQUFTO0FBQ3ZDLElBQUlDLFlBQVk7QUFDdEIsVUFBVUEsV0FBVztJQUNsQkEsV0FBVyxDQUFDQSxXQUFXLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRSxHQUFHO0lBQ3ZDQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxPQUFPLEdBQUcsRUFBRSxHQUFHO0lBQ3ZDQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxhQUFhLEdBQUcsRUFBRSxHQUFHO0lBQzdDQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxrQkFBa0IsR0FBRyxHQUFHLEdBQUc7SUFDbkRBLFdBQVcsQ0FBQ0EsV0FBVyxDQUFDLFlBQVksR0FBRyxHQUFHLEdBQUc7SUFDN0NBLFdBQVcsQ0FBQ0EsV0FBVyxDQUFDLFlBQVksR0FBRyxHQUFHLEdBQUc7SUFDN0NBLFdBQVcsQ0FBQ0EsV0FBVyxDQUFDLFFBQVEsR0FBRyxHQUFHLEdBQUc7SUFDekNBLFdBQVcsQ0FBQ0EsV0FBVyxDQUFDLG1CQUFtQixHQUFHLEdBQUcsR0FBRztJQUNwREEsV0FBVyxDQUFDQSxXQUFXLENBQUMsaUJBQWlCLEdBQUcsR0FBRyxHQUFHO0lBQ2xEQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxZQUFZLEdBQUcsR0FBRyxHQUFHO0lBQzdDQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxhQUFhLEdBQUcsR0FBRyxHQUFHO0lBQzlDQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxlQUFlLEdBQUcsR0FBRyxHQUFHO0lBQ2hEQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxVQUFVLEdBQUcsR0FBRyxHQUFHO0lBQzNDQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxVQUFVLEdBQUcsR0FBRyxHQUFHO0lBQzNDQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxVQUFVLEdBQUcsR0FBRyxHQUFHO0lBQzNDQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxZQUFZLEdBQUcsR0FBRyxHQUFHO0lBQzdDQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxpQkFBaUIsR0FBRyxHQUFHLEdBQUc7SUFDbERBLFdBQVcsQ0FBQ0EsV0FBVyxDQUFDLGNBQWMsR0FBRyxHQUFHLEdBQUc7SUFDL0NBLFdBQVcsQ0FBQ0EsV0FBVyxDQUFDLG9CQUFvQixHQUFHLEdBQUcsR0FBRztJQUNyREEsV0FBVyxDQUFDQSxXQUFXLENBQUMsZ0JBQWdCLEdBQUcsR0FBRyxHQUFHO0lBQ2pEQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxrQkFBa0IsR0FBRyxHQUFHLEdBQUc7SUFDbkRBLFdBQVcsQ0FBQ0EsV0FBVyxDQUFDLGtCQUFrQixHQUFHLEdBQUcsR0FBRztJQUNuREEsV0FBVyxDQUFDQSxXQUFXLENBQUMsdUJBQXVCLEdBQUcsR0FBRyxHQUFHO0lBQ3hEQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxlQUFlLEdBQUcsR0FBRyxHQUFHO0lBQ2hEQSxXQUFXLENBQUNBLFdBQVcsQ0FBQyxnQkFBZ0IsR0FBRyxHQUFHLEdBQUc7SUFDakRBLFdBQVcsQ0FBQ0EsV0FBVyxDQUFDLGdCQUFnQixHQUFHLElBQUksR0FBRztBQUN0RCxHQUFHQSxlQUFnQkEsQ0FBQUEsY0FBYyxDQUFDO0FBQzNCLE1BQU1DLFlBQVk7SUFDckJDLFdBQVc7SUFDWEMsYUFBYTtJQUNiQyxTQUFTO0lBQ1RDLFFBQVE7SUFDUkMsUUFBUTtJQUNSQyxRQUFRO0FBQ1osRUFBRTtBQUNGLFlBQVk7QUFDTCxTQUFTQyxZQUFZQyxFQUFFO0lBQzFCLE9BQU9BLE1BQU0sU0FBU0EsTUFBTTtBQUNoQztBQUNPLFNBQVNDLGdCQUFnQkQsRUFBRTtJQUM5QixPQUFPQSxNQUFNLFNBQVNBLE1BQU07QUFDaEM7QUFDTyxTQUFTRSwwQkFBMEJDLEdBQUcsRUFBRUMsR0FBRztJQUM5QyxPQUFPLENBQUNELE1BQU0sS0FBSSxJQUFLLE9BQU8sT0FBT0M7QUFDekM7QUFDQSwyQ0FBMkM7QUFDcEMsU0FBU0MsbUJBQW1CTCxFQUFFO0lBQ2pDLE9BQVEsT0FBUSxRQUFRQSxPQUFPLFFBQVFBLE9BQU8sUUFBUUEsT0FBTyxRQUFRQSxPQUFPLFFBQVFBLE1BQU0sUUFBUUEsTUFBTSxRQUNuR0EsTUFBTSxRQUFRQSxNQUFNO0FBQzdCO0FBQ08sU0FBU00scUJBQXFCTixFQUFFO0lBQ25DLE9BQU8sTUFBTyxTQUFTQSxNQUFNLFNBQVVaLHNCQUFzQm1CLEdBQUcsQ0FBQ1A7QUFDckUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iZW50by1ncmlkLWdlbmVyYXRvci8uL25vZGVfbW9kdWxlcy9wYXJzZTUvZGlzdC9jb21tb24vdW5pY29kZS5qcz81ZDhmIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IFVOREVGSU5FRF9DT0RFX1BPSU5UUyA9IG5ldyBTZXQoW1xuICAgIDY1NTM0LCA2NTUzNSwgMTMxMDcwLCAxMzEwNzEsIDE5NjYwNiwgMTk2NjA3LCAyNjIxNDIsIDI2MjE0MywgMzI3Njc4LCAzMjc2NzksIDM5MzIxNCxcbiAgICAzOTMyMTUsIDQ1ODc1MCwgNDU4NzUxLCA1MjQyODYsIDUyNDI4NywgNTg5ODIyLCA1ODk4MjMsIDY1NTM1OCwgNjU1MzU5LCA3MjA4OTQsXG4gICAgNzIwODk1LCA3ODY0MzAsIDc4NjQzMSwgODUxOTY2LCA4NTE5NjcsIDkxNzUwMiwgOTE3NTAzLCA5ODMwMzgsIDk4MzAzOSwgMTA0ODU3NCxcbiAgICAxMDQ4NTc1LCAxMTE0MTEwLCAxMTE0MTExLFxuXSk7XG5leHBvcnQgY29uc3QgUkVQTEFDRU1FTlRfQ0hBUkFDVEVSID0gJ1xcdUZGRkQnO1xuZXhwb3J0IHZhciBDT0RFX1BPSU5UUztcbihmdW5jdGlvbiAoQ09ERV9QT0lOVFMpIHtcbiAgICBDT0RFX1BPSU5UU1tDT0RFX1BPSU5UU1tcIkVPRlwiXSA9IC0xXSA9IFwiRU9GXCI7XG4gICAgQ09ERV9QT0lOVFNbQ09ERV9QT0lOVFNbXCJOVUxMXCJdID0gMF0gPSBcIk5VTExcIjtcbiAgICBDT0RFX1BPSU5UU1tDT0RFX1BPSU5UU1tcIlRBQlVMQVRJT05cIl0gPSA5XSA9IFwiVEFCVUxBVElPTlwiO1xuICAgIENPREVfUE9JTlRTW0NPREVfUE9JTlRTW1wiQ0FSUklBR0VfUkVUVVJOXCJdID0gMTNdID0gXCJDQVJSSUFHRV9SRVRVUk5cIjtcbiAgICBDT0RFX1BPSU5UU1tDT0RFX1BPSU5UU1tcIkxJTkVfRkVFRFwiXSA9IDEwXSA9IFwiTElORV9GRUVEXCI7XG4gICAgQ09ERV9QT0lOVFNbQ09ERV9QT0lOVFNbXCJGT1JNX0ZFRURcIl0gPSAxMl0gPSBcIkZPUk1fRkVFRFwiO1xuICAgIENPREVfUE9JTlRTW0NPREVfUE9JTlRTW1wiU1BBQ0VcIl0gPSAzMl0gPSBcIlNQQUNFXCI7XG4gICAgQ09ERV9QT0lOVFNbQ09ERV9QT0lOVFNbXCJFWENMQU1BVElPTl9NQVJLXCJdID0gMzNdID0gXCJFWENMQU1BVElPTl9NQVJLXCI7XG4gICAgQ09ERV9QT0lOVFNbQ09ERV9QT0lOVFNbXCJRVU9UQVRJT05fTUFSS1wiXSA9IDM0XSA9IFwiUVVPVEFUSU9OX01BUktcIjtcbiAgICBDT0RFX1BPSU5UU1tDT0RFX1BPSU5UU1tcIkFNUEVSU0FORFwiXSA9IDM4XSA9IFwiQU1QRVJTQU5EXCI7XG4gICAgQ09ERV9QT0lOVFNbQ09ERV9QT0lOVFNbXCJBUE9TVFJPUEhFXCJdID0gMzldID0gXCJBUE9TVFJPUEhFXCI7XG4gICAgQ09ERV9QT0lOVFNbQ09ERV9QT0lOVFNbXCJIWVBIRU5fTUlOVVNcIl0gPSA0NV0gPSBcIkhZUEhFTl9NSU5VU1wiO1xuICAgIENPREVfUE9JTlRTW0NPREVfUE9JTlRTW1wiU09MSURVU1wiXSA9IDQ3XSA9IFwiU09MSURVU1wiO1xuICAgIENPREVfUE9JTlRTW0NPREVfUE9JTlRTW1wiRElHSVRfMFwiXSA9IDQ4XSA9IFwiRElHSVRfMFwiO1xuICAgIENPREVfUE9JTlRTW0NPREVfUE9JTlRTW1wiRElHSVRfOVwiXSA9IDU3XSA9IFwiRElHSVRfOVwiO1xuICAgIENPREVfUE9JTlRTW0NPREVfUE9JTlRTW1wiU0VNSUNPTE9OXCJdID0gNTldID0gXCJTRU1JQ09MT05cIjtcbiAgICBDT0RFX1BPSU5UU1tDT0RFX1BPSU5UU1tcIkxFU1NfVEhBTl9TSUdOXCJdID0gNjBdID0gXCJMRVNTX1RIQU5fU0lHTlwiO1xuICAgIENPREVfUE9JTlRTW0NPREVfUE9JTlRTW1wiRVFVQUxTX1NJR05cIl0gPSA2MV0gPSBcIkVRVUFMU19TSUdOXCI7XG4gICAgQ09ERV9QT0lOVFNbQ09ERV9QT0lOVFNbXCJHUkVBVEVSX1RIQU5fU0lHTlwiXSA9IDYyXSA9IFwiR1JFQVRFUl9USEFOX1NJR05cIjtcbiAgICBDT0RFX1BPSU5UU1tDT0RFX1BPSU5UU1tcIlFVRVNUSU9OX01BUktcIl0gPSA2M10gPSBcIlFVRVNUSU9OX01BUktcIjtcbiAgICBDT0RFX1BPSU5UU1tDT0RFX1BPSU5UU1tcIkxBVElOX0NBUElUQUxfQVwiXSA9IDY1XSA9IFwiTEFUSU5fQ0FQSVRBTF9BXCI7XG4gICAgQ09ERV9QT0lOVFNbQ09ERV9QT0lOVFNbXCJMQVRJTl9DQVBJVEFMX1pcIl0gPSA5MF0gPSBcIkxBVElOX0NBUElUQUxfWlwiO1xuICAgIENPREVfUE9JTlRTW0NPREVfUE9JTlRTW1wiUklHSFRfU1FVQVJFX0JSQUNLRVRcIl0gPSA5M10gPSBcIlJJR0hUX1NRVUFSRV9CUkFDS0VUXCI7XG4gICAgQ09ERV9QT0lOVFNbQ09ERV9QT0lOVFNbXCJHUkFWRV9BQ0NFTlRcIl0gPSA5Nl0gPSBcIkdSQVZFX0FDQ0VOVFwiO1xuICAgIENPREVfUE9JTlRTW0NPREVfUE9JTlRTW1wiTEFUSU5fU01BTExfQVwiXSA9IDk3XSA9IFwiTEFUSU5fU01BTExfQVwiO1xuICAgIENPREVfUE9JTlRTW0NPREVfUE9JTlRTW1wiTEFUSU5fU01BTExfWlwiXSA9IDEyMl0gPSBcIkxBVElOX1NNQUxMX1pcIjtcbn0pKENPREVfUE9JTlRTIHx8IChDT0RFX1BPSU5UUyA9IHt9KSk7XG5leHBvcnQgY29uc3QgU0VRVUVOQ0VTID0ge1xuICAgIERBU0hfREFTSDogJy0tJyxcbiAgICBDREFUQV9TVEFSVDogJ1tDREFUQVsnLFxuICAgIERPQ1RZUEU6ICdkb2N0eXBlJyxcbiAgICBTQ1JJUFQ6ICdzY3JpcHQnLFxuICAgIFBVQkxJQzogJ3B1YmxpYycsXG4gICAgU1lTVEVNOiAnc3lzdGVtJyxcbn07XG4vL1N1cnJvZ2F0ZXNcbmV4cG9ydCBmdW5jdGlvbiBpc1N1cnJvZ2F0ZShjcCkge1xuICAgIHJldHVybiBjcCA+PSA1NTI5NiAmJiBjcCA8PSA1NzM0Mztcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1N1cnJvZ2F0ZVBhaXIoY3ApIHtcbiAgICByZXR1cm4gY3AgPj0gNTYzMjAgJiYgY3AgPD0gNTczNDM7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0U3Vycm9nYXRlUGFpckNvZGVQb2ludChjcDEsIGNwMikge1xuICAgIHJldHVybiAoY3AxIC0gNTUyOTYpICogMTAyNCArIDkyMTYgKyBjcDI7XG59XG4vL05PVEU6IGV4Y2x1ZGluZyBOVUxMIGFuZCBBU0NJSSB3aGl0ZXNwYWNlXG5leHBvcnQgZnVuY3Rpb24gaXNDb250cm9sQ29kZVBvaW50KGNwKSB7XG4gICAgcmV0dXJuICgoY3AgIT09IDB4MjAgJiYgY3AgIT09IDB4MGEgJiYgY3AgIT09IDB4MGQgJiYgY3AgIT09IDB4MDkgJiYgY3AgIT09IDB4MGMgJiYgY3AgPj0gMHgwMSAmJiBjcCA8PSAweDFmKSB8fFxuICAgICAgICAoY3AgPj0gMHg3ZiAmJiBjcCA8PSAweDlmKSk7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNVbmRlZmluZWRDb2RlUG9pbnQoY3ApIHtcbiAgICByZXR1cm4gKGNwID49IDY0OTc2ICYmIGNwIDw9IDY1MDA3KSB8fCBVTkRFRklORURfQ09ERV9QT0lOVFMuaGFzKGNwKTtcbn1cbiJdLCJuYW1lcyI6WyJVTkRFRklORURfQ09ERV9QT0lOVFMiLCJTZXQiLCJSRVBMQUNFTUVOVF9DSEFSQUNURVIiLCJDT0RFX1BPSU5UUyIsIlNFUVVFTkNFUyIsIkRBU0hfREFTSCIsIkNEQVRBX1NUQVJUIiwiRE9DVFlQRSIsIlNDUklQVCIsIlBVQkxJQyIsIlNZU1RFTSIsImlzU3Vycm9nYXRlIiwiY3AiLCJpc1N1cnJvZ2F0ZVBhaXIiLCJnZXRTdXJyb2dhdGVQYWlyQ29kZVBvaW50IiwiY3AxIiwiY3AyIiwiaXNDb250cm9sQ29kZVBvaW50IiwiaXNVbmRlZmluZWRDb2RlUG9pbnQiLCJoYXMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/common/unicode.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/index.js":
/*!*******************************************!*\
  !*** ./node_modules/parse5/dist/index.js ***!
  \*******************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ErrorCodes: () => (/* reexport safe */ _common_error_codes_js__WEBPACK_IMPORTED_MODULE_3__.ERR),\n/* harmony export */   Parser: () => (/* reexport safe */ _parser_index_js__WEBPACK_IMPORTED_MODULE_0__.Parser),\n/* harmony export */   Token: () => (/* reexport module object */ _common_token_js__WEBPACK_IMPORTED_MODULE_6__),\n/* harmony export */   Tokenizer: () => (/* reexport safe */ _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_7__.Tokenizer),\n/* harmony export */   TokenizerMode: () => (/* reexport safe */ _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_7__.TokenizerMode),\n/* harmony export */   defaultTreeAdapter: () => (/* reexport safe */ _tree_adapters_default_js__WEBPACK_IMPORTED_MODULE_1__.defaultTreeAdapter),\n/* harmony export */   foreignContent: () => (/* reexport module object */ _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_4__),\n/* harmony export */   html: () => (/* reexport module object */ _common_html_js__WEBPACK_IMPORTED_MODULE_5__),\n/* harmony export */   parse: () => (/* binding */ parse),\n/* harmony export */   parseFragment: () => (/* binding */ parseFragment),\n/* harmony export */   serialize: () => (/* reexport safe */ _serializer_index_js__WEBPACK_IMPORTED_MODULE_2__.serialize),\n/* harmony export */   serializeOuter: () => (/* reexport safe */ _serializer_index_js__WEBPACK_IMPORTED_MODULE_2__.serializeOuter)\n/* harmony export */ });\n/* harmony import */ var _parser_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parser/index.js */ \"(rsc)/./node_modules/parse5/dist/parser/index.js\");\n/* harmony import */ var _tree_adapters_default_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tree-adapters/default.js */ \"(rsc)/./node_modules/parse5/dist/tree-adapters/default.js\");\n/* harmony import */ var _serializer_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./serializer/index.js */ \"(rsc)/./node_modules/parse5/dist/serializer/index.js\");\n/* harmony import */ var _common_error_codes_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common/error-codes.js */ \"(rsc)/./node_modules/parse5/dist/common/error-codes.js\");\n/* harmony import */ var _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common/foreign-content.js */ \"(rsc)/./node_modules/parse5/dist/common/foreign-content.js\");\n/* harmony import */ var _common_html_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common/html.js */ \"(rsc)/./node_modules/parse5/dist/common/html.js\");\n/* harmony import */ var _common_token_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./common/token.js */ \"(rsc)/./node_modules/parse5/dist/common/token.js\");\n/* harmony import */ var _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./tokenizer/index.js */ \"(rsc)/./node_modules/parse5/dist/tokenizer/index.js\");\n\n\n\n\n\n/** @internal */ \n\n\n/** @internal */ \n// Shorthands\n/**\n * Parses an HTML string.\n *\n * @param html Input HTML string.\n * @param options Parsing options.\n * @returns Document\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * console.log(document.childNodes[1].tagName); //> 'html'\n *```\n */ function parse(html, options) {\n    return _parser_index_js__WEBPACK_IMPORTED_MODULE_0__.Parser.parse(html, options);\n}\nfunction parseFragment(fragmentContext, html, options) {\n    if (typeof fragmentContext === \"string\") {\n        options = html;\n        html = fragmentContext;\n        fragmentContext = null;\n    }\n    const parser = _parser_index_js__WEBPACK_IMPORTED_MODULE_0__.Parser.getFragmentParser(fragmentContext, options);\n    parser.tokenizer.write(html, true);\n    return parser.getFragment();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcGFyc2U1L2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBMkM7QUFDcUI7QUFDSjtBQUNNO0FBQ047QUFDNUQsY0FBYyxHQUNnRDtBQUNyQjtBQUNFO0FBQzNDLGNBQWMsR0FDa0Q7QUFDaEUsYUFBYTtBQUNiOzs7Ozs7Ozs7Ozs7Ozs7O0NBZ0JDLEdBQ00sU0FBU1csTUFBTUosSUFBSSxFQUFFSyxPQUFPO0lBQy9CLE9BQU9aLG9EQUFNQSxDQUFDVyxLQUFLLENBQUNKLE1BQU1LO0FBQzlCO0FBQ08sU0FBU0MsY0FBY0MsZUFBZSxFQUFFUCxJQUFJLEVBQUVLLE9BQU87SUFDeEQsSUFBSSxPQUFPRSxvQkFBb0IsVUFBVTtRQUNyQ0YsVUFBVUw7UUFDVkEsT0FBT087UUFDUEEsa0JBQWtCO0lBQ3RCO0lBQ0EsTUFBTUMsU0FBU2Ysb0RBQU1BLENBQUNnQixpQkFBaUIsQ0FBQ0YsaUJBQWlCRjtJQUN6REcsT0FBT0UsU0FBUyxDQUFDQyxLQUFLLENBQUNYLE1BQU07SUFDN0IsT0FBT1EsT0FBT0ksV0FBVztBQUM3QiIsInNvdXJjZXMiOlsid2VicGFjazovL2JlbnRvLWdyaWQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL3BhcnNlNS9kaXN0L2luZGV4LmpzP2UxYTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUGFyc2VyIH0gZnJvbSAnLi9wYXJzZXIvaW5kZXguanMnO1xuZXhwb3J0IHsgZGVmYXVsdFRyZWVBZGFwdGVyIH0gZnJvbSAnLi90cmVlLWFkYXB0ZXJzL2RlZmF1bHQuanMnO1xuZXhwb3J0IHsgLyoqIEBpbnRlcm5hbCAqLyBQYXJzZXIgfSBmcm9tICcuL3BhcnNlci9pbmRleC5qcyc7XG5leHBvcnQgeyBzZXJpYWxpemUsIHNlcmlhbGl6ZU91dGVyIH0gZnJvbSAnLi9zZXJpYWxpemVyL2luZGV4LmpzJztcbmV4cG9ydCB7IEVSUiBhcyBFcnJvckNvZGVzIH0gZnJvbSAnLi9jb21tb24vZXJyb3ItY29kZXMuanMnO1xuLyoqIEBpbnRlcm5hbCAqL1xuZXhwb3J0ICogYXMgZm9yZWlnbkNvbnRlbnQgZnJvbSAnLi9jb21tb24vZm9yZWlnbi1jb250ZW50LmpzJztcbmV4cG9ydCAqIGFzIGh0bWwgZnJvbSAnLi9jb21tb24vaHRtbC5qcyc7XG5leHBvcnQgKiBhcyBUb2tlbiBmcm9tICcuL2NvbW1vbi90b2tlbi5qcyc7XG4vKiogQGludGVybmFsICovXG5leHBvcnQgeyBUb2tlbml6ZXIsIFRva2VuaXplck1vZGUgfSBmcm9tICcuL3Rva2VuaXplci9pbmRleC5qcyc7XG4vLyBTaG9ydGhhbmRzXG4vKipcbiAqIFBhcnNlcyBhbiBIVE1MIHN0cmluZy5cbiAqXG4gKiBAcGFyYW0gaHRtbCBJbnB1dCBIVE1MIHN0cmluZy5cbiAqIEBwYXJhbSBvcHRpb25zIFBhcnNpbmcgb3B0aW9ucy5cbiAqIEByZXR1cm5zIERvY3VtZW50XG4gKlxuICogQGV4YW1wbGVcbiAqXG4gKiBgYGBqc1xuICogY29uc3QgcGFyc2U1ID0gcmVxdWlyZSgncGFyc2U1Jyk7XG4gKlxuICogY29uc3QgZG9jdW1lbnQgPSBwYXJzZTUucGFyc2UoJzwhRE9DVFlQRSBodG1sPjxodG1sPjxoZWFkPjwvaGVhZD48Ym9keT5IaSB0aGVyZSE8L2JvZHk+PC9odG1sPicpO1xuICpcbiAqIGNvbnNvbGUubG9nKGRvY3VtZW50LmNoaWxkTm9kZXNbMV0udGFnTmFtZSk7IC8vPiAnaHRtbCdcbiAqYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZShodG1sLCBvcHRpb25zKSB7XG4gICAgcmV0dXJuIFBhcnNlci5wYXJzZShodG1sLCBvcHRpb25zKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUZyYWdtZW50KGZyYWdtZW50Q29udGV4dCwgaHRtbCwgb3B0aW9ucykge1xuICAgIGlmICh0eXBlb2YgZnJhZ21lbnRDb250ZXh0ID09PSAnc3RyaW5nJykge1xuICAgICAgICBvcHRpb25zID0gaHRtbDtcbiAgICAgICAgaHRtbCA9IGZyYWdtZW50Q29udGV4dDtcbiAgICAgICAgZnJhZ21lbnRDb250ZXh0ID0gbnVsbDtcbiAgICB9XG4gICAgY29uc3QgcGFyc2VyID0gUGFyc2VyLmdldEZyYWdtZW50UGFyc2VyKGZyYWdtZW50Q29udGV4dCwgb3B0aW9ucyk7XG4gICAgcGFyc2VyLnRva2VuaXplci53cml0ZShodG1sLCB0cnVlKTtcbiAgICByZXR1cm4gcGFyc2VyLmdldEZyYWdtZW50KCk7XG59XG4iXSwibmFtZXMiOlsiUGFyc2VyIiwiZGVmYXVsdFRyZWVBZGFwdGVyIiwic2VyaWFsaXplIiwic2VyaWFsaXplT3V0ZXIiLCJFUlIiLCJFcnJvckNvZGVzIiwiZm9yZWlnbkNvbnRlbnQiLCJodG1sIiwiVG9rZW4iLCJUb2tlbml6ZXIiLCJUb2tlbml6ZXJNb2RlIiwicGFyc2UiLCJvcHRpb25zIiwicGFyc2VGcmFnbWVudCIsImZyYWdtZW50Q29udGV4dCIsInBhcnNlciIsImdldEZyYWdtZW50UGFyc2VyIiwidG9rZW5pemVyIiwid3JpdGUiLCJnZXRGcmFnbWVudCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/parser/formatting-element-list.js":
/*!********************************************************************!*\
  !*** ./node_modules/parse5/dist/parser/formatting-element-list.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EntryType: () => (/* binding */ EntryType),\n/* harmony export */   FormattingElementList: () => (/* binding */ FormattingElementList)\n/* harmony export */ });\n//Const\nconst NOAH_ARK_CAPACITY = 3;\nvar EntryType;\n(function(EntryType) {\n    EntryType[EntryType[\"Marker\"] = 0] = \"Marker\";\n    EntryType[EntryType[\"Element\"] = 1] = \"Element\";\n})(EntryType || (EntryType = {}));\nconst MARKER = {\n    type: EntryType.Marker\n};\n//List of formatting elements\nclass FormattingElementList {\n    constructor(treeAdapter){\n        this.treeAdapter = treeAdapter;\n        this.entries = [];\n        this.bookmark = null;\n    }\n    //Noah Ark's condition\n    //OPTIMIZATION: at first we try to find possible candidates for exclusion using\n    //lightweight heuristics without thorough attributes check.\n    _getNoahArkConditionCandidates(newElement, neAttrs) {\n        const candidates = [];\n        const neAttrsLength = neAttrs.length;\n        const neTagName = this.treeAdapter.getTagName(newElement);\n        const neNamespaceURI = this.treeAdapter.getNamespaceURI(newElement);\n        for(let i = 0; i < this.entries.length; i++){\n            const entry = this.entries[i];\n            if (entry.type === EntryType.Marker) {\n                break;\n            }\n            const { element } = entry;\n            if (this.treeAdapter.getTagName(element) === neTagName && this.treeAdapter.getNamespaceURI(element) === neNamespaceURI) {\n                const elementAttrs = this.treeAdapter.getAttrList(element);\n                if (elementAttrs.length === neAttrsLength) {\n                    candidates.push({\n                        idx: i,\n                        attrs: elementAttrs\n                    });\n                }\n            }\n        }\n        return candidates;\n    }\n    _ensureNoahArkCondition(newElement) {\n        if (this.entries.length < NOAH_ARK_CAPACITY) return;\n        const neAttrs = this.treeAdapter.getAttrList(newElement);\n        const candidates = this._getNoahArkConditionCandidates(newElement, neAttrs);\n        if (candidates.length < NOAH_ARK_CAPACITY) return;\n        //NOTE: build attrs map for the new element, so we can perform fast lookups\n        const neAttrsMap = new Map(neAttrs.map((neAttr)=>[\n                neAttr.name,\n                neAttr.value\n            ]));\n        let validCandidates = 0;\n        //NOTE: remove bottommost candidates, until Noah's Ark condition will not be met\n        for(let i = 0; i < candidates.length; i++){\n            const candidate = candidates[i];\n            // We know that `candidate.attrs.length === neAttrs.length`\n            if (candidate.attrs.every((cAttr)=>neAttrsMap.get(cAttr.name) === cAttr.value)) {\n                validCandidates += 1;\n                if (validCandidates >= NOAH_ARK_CAPACITY) {\n                    this.entries.splice(candidate.idx, 1);\n                }\n            }\n        }\n    }\n    //Mutations\n    insertMarker() {\n        this.entries.unshift(MARKER);\n    }\n    pushElement(element, token) {\n        this._ensureNoahArkCondition(element);\n        this.entries.unshift({\n            type: EntryType.Element,\n            element,\n            token\n        });\n    }\n    insertElementAfterBookmark(element, token) {\n        const bookmarkIdx = this.entries.indexOf(this.bookmark);\n        this.entries.splice(bookmarkIdx, 0, {\n            type: EntryType.Element,\n            element,\n            token\n        });\n    }\n    removeEntry(entry) {\n        const entryIndex = this.entries.indexOf(entry);\n        if (entryIndex !== -1) {\n            this.entries.splice(entryIndex, 1);\n        }\n    }\n    /**\n     * Clears the list of formatting elements up to the last marker.\n     *\n     * @see https://html.spec.whatwg.org/multipage/parsing.html#clear-the-list-of-active-formatting-elements-up-to-the-last-marker\n     */ clearToLastMarker() {\n        const markerIdx = this.entries.indexOf(MARKER);\n        if (markerIdx === -1) {\n            this.entries.length = 0;\n        } else {\n            this.entries.splice(0, markerIdx + 1);\n        }\n    }\n    //Search\n    getElementEntryInScopeWithTagName(tagName) {\n        const entry = this.entries.find((entry)=>entry.type === EntryType.Marker || this.treeAdapter.getTagName(entry.element) === tagName);\n        return entry && entry.type === EntryType.Element ? entry : null;\n    }\n    getElementEntry(element) {\n        return this.entries.find((entry)=>entry.type === EntryType.Element && entry.element === element);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/parser/formatting-element-list.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/parser/index.js":
/*!**************************************************!*\
  !*** ./node_modules/parse5/dist/parser/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Parser: () => (/* binding */ Parser)\n/* harmony export */ });\n/* harmony import */ var _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../tokenizer/index.js */ \"(rsc)/./node_modules/parse5/dist/tokenizer/index.js\");\n/* harmony import */ var _open_element_stack_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./open-element-stack.js */ \"(rsc)/./node_modules/parse5/dist/parser/open-element-stack.js\");\n/* harmony import */ var _formatting_element_list_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./formatting-element-list.js */ \"(rsc)/./node_modules/parse5/dist/parser/formatting-element-list.js\");\n/* harmony import */ var _tree_adapters_default_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../tree-adapters/default.js */ \"(rsc)/./node_modules/parse5/dist/tree-adapters/default.js\");\n/* harmony import */ var _common_doctype_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/doctype.js */ \"(rsc)/./node_modules/parse5/dist/common/doctype.js\");\n/* harmony import */ var _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/foreign-content.js */ \"(rsc)/./node_modules/parse5/dist/common/foreign-content.js\");\n/* harmony import */ var _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/error-codes.js */ \"(rsc)/./node_modules/parse5/dist/common/error-codes.js\");\n/* harmony import */ var _common_unicode_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/unicode.js */ \"(rsc)/./node_modules/parse5/dist/common/unicode.js\");\n/* harmony import */ var _common_html_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../common/html.js */ \"(rsc)/./node_modules/parse5/dist/common/html.js\");\n/* harmony import */ var _common_token_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../common/token.js */ \"(rsc)/./node_modules/parse5/dist/common/token.js\");\n\n\n\n\n\n\n\n\n\n\n//Misc constants\nconst HIDDEN_INPUT_TYPE = \"hidden\";\n//Adoption agency loops iteration count\nconst AA_OUTER_LOOP_ITER = 8;\nconst AA_INNER_LOOP_ITER = 3;\n//Insertion modes\nvar InsertionMode;\n(function(InsertionMode) {\n    InsertionMode[InsertionMode[\"INITIAL\"] = 0] = \"INITIAL\";\n    InsertionMode[InsertionMode[\"BEFORE_HTML\"] = 1] = \"BEFORE_HTML\";\n    InsertionMode[InsertionMode[\"BEFORE_HEAD\"] = 2] = \"BEFORE_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD\"] = 3] = \"IN_HEAD\";\n    InsertionMode[InsertionMode[\"IN_HEAD_NO_SCRIPT\"] = 4] = \"IN_HEAD_NO_SCRIPT\";\n    InsertionMode[InsertionMode[\"AFTER_HEAD\"] = 5] = \"AFTER_HEAD\";\n    InsertionMode[InsertionMode[\"IN_BODY\"] = 6] = \"IN_BODY\";\n    InsertionMode[InsertionMode[\"TEXT\"] = 7] = \"TEXT\";\n    InsertionMode[InsertionMode[\"IN_TABLE\"] = 8] = \"IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TABLE_TEXT\"] = 9] = \"IN_TABLE_TEXT\";\n    InsertionMode[InsertionMode[\"IN_CAPTION\"] = 10] = \"IN_CAPTION\";\n    InsertionMode[InsertionMode[\"IN_COLUMN_GROUP\"] = 11] = \"IN_COLUMN_GROUP\";\n    InsertionMode[InsertionMode[\"IN_TABLE_BODY\"] = 12] = \"IN_TABLE_BODY\";\n    InsertionMode[InsertionMode[\"IN_ROW\"] = 13] = \"IN_ROW\";\n    InsertionMode[InsertionMode[\"IN_CELL\"] = 14] = \"IN_CELL\";\n    InsertionMode[InsertionMode[\"IN_SELECT\"] = 15] = \"IN_SELECT\";\n    InsertionMode[InsertionMode[\"IN_SELECT_IN_TABLE\"] = 16] = \"IN_SELECT_IN_TABLE\";\n    InsertionMode[InsertionMode[\"IN_TEMPLATE\"] = 17] = \"IN_TEMPLATE\";\n    InsertionMode[InsertionMode[\"AFTER_BODY\"] = 18] = \"AFTER_BODY\";\n    InsertionMode[InsertionMode[\"IN_FRAMESET\"] = 19] = \"IN_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_FRAMESET\"] = 20] = \"AFTER_FRAMESET\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_BODY\"] = 21] = \"AFTER_AFTER_BODY\";\n    InsertionMode[InsertionMode[\"AFTER_AFTER_FRAMESET\"] = 22] = \"AFTER_AFTER_FRAMESET\";\n})(InsertionMode || (InsertionMode = {}));\nconst BASE_LOC = {\n    startLine: -1,\n    startCol: -1,\n    startOffset: -1,\n    endLine: -1,\n    endCol: -1,\n    endOffset: -1\n};\nconst TABLE_STRUCTURE_TAGS = new Set([\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR\n]);\nconst defaultParserOptions = {\n    scriptingEnabled: true,\n    sourceCodeLocationInfo: false,\n    treeAdapter: _tree_adapters_default_js__WEBPACK_IMPORTED_MODULE_3__.defaultTreeAdapter,\n    onParseError: null\n};\n//Parser\nclass Parser {\n    constructor(options, document, /** @internal */ fragmentContext = null, /** @internal */ scriptHandler = null){\n        this.fragmentContext = fragmentContext;\n        this.scriptHandler = scriptHandler;\n        this.currentToken = null;\n        this.stopped = false;\n        /** @internal */ this.insertionMode = InsertionMode.INITIAL;\n        /** @internal */ this.originalInsertionMode = InsertionMode.INITIAL;\n        /** @internal */ this.headElement = null;\n        /** @internal */ this.formElement = null;\n        /** Indicates that the current node is not an element in the HTML namespace */ this.currentNotInHTML = false;\n        /**\n         * The template insertion mode stack is maintained from the left.\n         * Ie. the topmost element will always have index 0.\n         *\n         * @internal\n         */ this.tmplInsertionModeStack = [];\n        /** @internal */ this.pendingCharacterTokens = [];\n        /** @internal */ this.hasNonWhitespacePendingCharacterToken = false;\n        /** @internal */ this.framesetOk = true;\n        /** @internal */ this.skipNextNewLine = false;\n        /** @internal */ this.fosterParentingEnabled = false;\n        this.options = {\n            ...defaultParserOptions,\n            ...options\n        };\n        this.treeAdapter = this.options.treeAdapter;\n        this.onParseError = this.options.onParseError;\n        // Always enable location info if we report parse errors.\n        if (this.onParseError) {\n            this.options.sourceCodeLocationInfo = true;\n        }\n        this.document = document !== null && document !== void 0 ? document : this.treeAdapter.createDocument();\n        this.tokenizer = new _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.Tokenizer(this.options, this);\n        this.activeFormattingElements = new _formatting_element_list_js__WEBPACK_IMPORTED_MODULE_2__.FormattingElementList(this.treeAdapter);\n        this.fragmentContextID = fragmentContext ? (0,_common_html_js__WEBPACK_IMPORTED_MODULE_8__.getTagID)(this.treeAdapter.getTagName(fragmentContext)) : _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.UNKNOWN;\n        this._setContextModes(fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : this.document, this.fragmentContextID);\n        this.openElements = new _open_element_stack_js__WEBPACK_IMPORTED_MODULE_1__.OpenElementStack(this.document, this.treeAdapter, this);\n    }\n    // API\n    static parse(html, options) {\n        const parser = new this(options);\n        parser.tokenizer.write(html, true);\n        return parser.document;\n    }\n    static getFragmentParser(fragmentContext, options) {\n        const opts = {\n            ...defaultParserOptions,\n            ...options\n        };\n        //NOTE: use a <template> element as the fragment context if no context element was provided,\n        //so we will parse in a \"forgiving\" manner\n        fragmentContext !== null && fragmentContext !== void 0 ? fragmentContext : fragmentContext = opts.treeAdapter.createElement(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.TEMPLATE, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML, []);\n        //NOTE: create a fake element which will be used as the `document` for fragment parsing.\n        //This is important for jsdom, where a new `document` cannot be created. This led to\n        //fragment parsing messing with the main `document`.\n        const documentMock = opts.treeAdapter.createElement(\"documentmock\", _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML, []);\n        const parser = new this(opts, documentMock, fragmentContext);\n        if (parser.fragmentContextID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE) {\n            parser.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n        }\n        parser._initTokenizerForFragmentParsing();\n        parser._insertFakeRootElement();\n        parser._resetInsertionMode();\n        parser._findFormInFragmentContext();\n        return parser;\n    }\n    getFragment() {\n        const rootElement = this.treeAdapter.getFirstChild(this.document);\n        const fragment = this.treeAdapter.createDocumentFragment();\n        this._adoptNodes(rootElement, fragment);\n        return fragment;\n    }\n    //Errors\n    /** @internal */ _err(token, code, beforeToken) {\n        var _a;\n        if (!this.onParseError) return;\n        const loc = (_a = token.location) !== null && _a !== void 0 ? _a : BASE_LOC;\n        const err = {\n            code,\n            startLine: loc.startLine,\n            startCol: loc.startCol,\n            startOffset: loc.startOffset,\n            endLine: beforeToken ? loc.startLine : loc.endLine,\n            endCol: beforeToken ? loc.startCol : loc.endCol,\n            endOffset: beforeToken ? loc.startOffset : loc.endOffset\n        };\n        this.onParseError(err);\n    }\n    //Stack events\n    /** @internal */ onItemPush(node, tid, isTop) {\n        var _a, _b;\n        (_b = (_a = this.treeAdapter).onItemPush) === null || _b === void 0 ? void 0 : _b.call(_a, node);\n        if (isTop && this.openElements.stackTop > 0) this._setContextModes(node, tid);\n    }\n    /** @internal */ onItemPop(node, isTop) {\n        var _a, _b;\n        if (this.options.sourceCodeLocationInfo) {\n            this._setEndLocation(node, this.currentToken);\n        }\n        (_b = (_a = this.treeAdapter).onItemPop) === null || _b === void 0 ? void 0 : _b.call(_a, node, this.openElements.current);\n        if (isTop) {\n            let current;\n            let currentTagId;\n            if (this.openElements.stackTop === 0 && this.fragmentContext) {\n                current = this.fragmentContext;\n                currentTagId = this.fragmentContextID;\n            } else {\n                ({ current, currentTagId } = this.openElements);\n            }\n            this._setContextModes(current, currentTagId);\n        }\n    }\n    _setContextModes(current, tid) {\n        const isHTML = current === this.document || current && this.treeAdapter.getNamespaceURI(current) === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML;\n        this.currentNotInHTML = !isHTML;\n        this.tokenizer.inForeignNode = !isHTML && current !== undefined && tid !== undefined && !this._isIntegrationPoint(tid, current);\n    }\n    /** @protected */ _switchToTextParsing(currentToken, nextTokenizerState) {\n        this._insertElement(currentToken, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n        this.tokenizer.state = nextTokenizerState;\n        this.originalInsertionMode = this.insertionMode;\n        this.insertionMode = InsertionMode.TEXT;\n    }\n    switchToPlaintextParsing() {\n        this.insertionMode = InsertionMode.TEXT;\n        this.originalInsertionMode = InsertionMode.IN_BODY;\n        this.tokenizer.state = _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.PLAINTEXT;\n    }\n    //Fragment parsing\n    /** @protected */ _getAdjustedCurrentElement() {\n        return this.openElements.stackTop === 0 && this.fragmentContext ? this.fragmentContext : this.openElements.current;\n    }\n    /** @protected */ _findFormInFragmentContext() {\n        let node = this.fragmentContext;\n        while(node){\n            if (this.treeAdapter.getTagName(node) === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.FORM) {\n                this.formElement = node;\n                break;\n            }\n            node = this.treeAdapter.getParentNode(node);\n        }\n    }\n    _initTokenizerForFragmentParsing() {\n        if (!this.fragmentContext || this.treeAdapter.getNamespaceURI(this.fragmentContext) !== _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML) {\n            return;\n        }\n        switch(this.fragmentContextID){\n            case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TITLE:\n            case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEXTAREA:\n                {\n                    this.tokenizer.state = _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.RCDATA;\n                    break;\n                }\n            case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.STYLE:\n            case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.XMP:\n            case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.IFRAME:\n            case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOEMBED:\n            case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOFRAMES:\n            case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOSCRIPT:\n                {\n                    this.tokenizer.state = _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.RAWTEXT;\n                    break;\n                }\n            case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SCRIPT:\n                {\n                    this.tokenizer.state = _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.SCRIPT_DATA;\n                    break;\n                }\n            case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.PLAINTEXT:\n                {\n                    this.tokenizer.state = _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.PLAINTEXT;\n                    break;\n                }\n            default:\n        }\n    }\n    //Tree mutation\n    /** @protected */ _setDocumentType(token) {\n        const name = token.name || \"\";\n        const publicId = token.publicId || \"\";\n        const systemId = token.systemId || \"\";\n        this.treeAdapter.setDocumentType(this.document, name, publicId, systemId);\n        if (token.location) {\n            const documentChildren = this.treeAdapter.getChildNodes(this.document);\n            const docTypeNode = documentChildren.find((node)=>this.treeAdapter.isDocumentTypeNode(node));\n            if (docTypeNode) {\n                this.treeAdapter.setNodeSourceCodeLocation(docTypeNode, token.location);\n            }\n        }\n    }\n    /** @protected */ _attachElementToTree(element, location) {\n        if (this.options.sourceCodeLocationInfo) {\n            const loc = location && {\n                ...location,\n                startTag: location\n            };\n            this.treeAdapter.setNodeSourceCodeLocation(element, loc);\n        }\n        if (this._shouldFosterParentOnInsertion()) {\n            this._fosterParentElement(element);\n        } else {\n            const parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.appendChild(parent !== null && parent !== void 0 ? parent : this.document, element);\n        }\n    }\n    /**\n     * For self-closing tags. Add an element to the tree, but skip adding it\n     * to the stack.\n     */ /** @protected */ _appendElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n    }\n    /** @protected */ _insertElement(token, namespaceURI) {\n        const element = this.treeAdapter.createElement(token.tagName, namespaceURI, token.attrs);\n        this._attachElementToTree(element, token.location);\n        this.openElements.push(element, token.tagID);\n    }\n    /** @protected */ _insertFakeElement(tagName, tagID) {\n        const element = this.treeAdapter.createElement(tagName, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML, []);\n        this._attachElementToTree(element, null);\n        this.openElements.push(element, tagID);\n    }\n    /** @protected */ _insertTemplate(token) {\n        const tmpl = this.treeAdapter.createElement(token.tagName, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML, token.attrs);\n        const content = this.treeAdapter.createDocumentFragment();\n        this.treeAdapter.setTemplateContent(tmpl, content);\n        this._attachElementToTree(tmpl, token.location);\n        this.openElements.push(tmpl, token.tagID);\n        if (this.options.sourceCodeLocationInfo) this.treeAdapter.setNodeSourceCodeLocation(content, null);\n    }\n    /** @protected */ _insertFakeRootElement() {\n        const element = this.treeAdapter.createElement(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.HTML, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML, []);\n        if (this.options.sourceCodeLocationInfo) this.treeAdapter.setNodeSourceCodeLocation(element, null);\n        this.treeAdapter.appendChild(this.openElements.current, element);\n        this.openElements.push(element, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML);\n    }\n    /** @protected */ _appendCommentNode(token, parent) {\n        const commentNode = this.treeAdapter.createCommentNode(token.data);\n        this.treeAdapter.appendChild(parent, commentNode);\n        if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(commentNode, token.location);\n        }\n    }\n    /** @protected */ _insertCharacters(token) {\n        let parent;\n        let beforeElement;\n        if (this._shouldFosterParentOnInsertion()) {\n            ({ parent, beforeElement } = this._findFosterParentingLocation());\n            if (beforeElement) {\n                this.treeAdapter.insertTextBefore(parent, token.chars, beforeElement);\n            } else {\n                this.treeAdapter.insertText(parent, token.chars);\n            }\n        } else {\n            parent = this.openElements.currentTmplContentOrNode;\n            this.treeAdapter.insertText(parent, token.chars);\n        }\n        if (!token.location) return;\n        const siblings = this.treeAdapter.getChildNodes(parent);\n        const textNodeIdx = beforeElement ? siblings.lastIndexOf(beforeElement) : siblings.length;\n        const textNode = siblings[textNodeIdx - 1];\n        //NOTE: if we have a location assigned by another token, then just update the end position\n        const tnLoc = this.treeAdapter.getNodeSourceCodeLocation(textNode);\n        if (tnLoc) {\n            const { endLine, endCol, endOffset } = token.location;\n            this.treeAdapter.updateNodeSourceCodeLocation(textNode, {\n                endLine,\n                endCol,\n                endOffset\n            });\n        } else if (this.options.sourceCodeLocationInfo) {\n            this.treeAdapter.setNodeSourceCodeLocation(textNode, token.location);\n        }\n    }\n    /** @protected */ _adoptNodes(donor, recipient) {\n        for(let child = this.treeAdapter.getFirstChild(donor); child; child = this.treeAdapter.getFirstChild(donor)){\n            this.treeAdapter.detachNode(child);\n            this.treeAdapter.appendChild(recipient, child);\n        }\n    }\n    /** @protected */ _setEndLocation(element, closingToken) {\n        if (this.treeAdapter.getNodeSourceCodeLocation(element) && closingToken.location) {\n            const ctLoc = closingToken.location;\n            const tn = this.treeAdapter.getTagName(element);\n            const endLoc = // NOTE: For cases like <p> <p> </p> - First 'p' closes without a closing\n            // tag and for cases like <td> <p> </td> - 'p' closes without a closing tag.\n            closingToken.type === _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.END_TAG && tn === closingToken.tagName ? {\n                endTag: {\n                    ...ctLoc\n                },\n                endLine: ctLoc.endLine,\n                endCol: ctLoc.endCol,\n                endOffset: ctLoc.endOffset\n            } : {\n                endLine: ctLoc.startLine,\n                endCol: ctLoc.startCol,\n                endOffset: ctLoc.startOffset\n            };\n            this.treeAdapter.updateNodeSourceCodeLocation(element, endLoc);\n        }\n    }\n    //Token processing\n    shouldProcessStartTagTokenInForeignContent(token) {\n        // Check that neither current === document, or ns === NS.HTML\n        if (!this.currentNotInHTML) return false;\n        let current;\n        let currentTagId;\n        if (this.openElements.stackTop === 0 && this.fragmentContext) {\n            current = this.fragmentContext;\n            currentTagId = this.fragmentContextID;\n        } else {\n            ({ current, currentTagId } = this.openElements);\n        }\n        if (token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SVG && this.treeAdapter.getTagName(current) === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.ANNOTATION_XML && this.treeAdapter.getNamespaceURI(current) === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.MATHML) {\n            return false;\n        }\n        return(// Check that `current` is not an integration point for HTML or MathML elements.\n        this.tokenizer.inForeignNode || // If it _is_ an integration point, then we might have to check that it is not an HTML\n        // integration point.\n        (token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.MGLYPH || token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.MALIGNMARK) && currentTagId !== undefined && !this._isIntegrationPoint(currentTagId, current, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML));\n    }\n    /** @protected */ _processToken(token) {\n        switch(token.type){\n            case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.CHARACTER:\n                {\n                    this.onCharacter(token);\n                    break;\n                }\n            case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.NULL_CHARACTER:\n                {\n                    this.onNullCharacter(token);\n                    break;\n                }\n            case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.COMMENT:\n                {\n                    this.onComment(token);\n                    break;\n                }\n            case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.DOCTYPE:\n                {\n                    this.onDoctype(token);\n                    break;\n                }\n            case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.START_TAG:\n                {\n                    this._processStartTag(token);\n                    break;\n                }\n            case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.END_TAG:\n                {\n                    this.onEndTag(token);\n                    break;\n                }\n            case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.EOF:\n                {\n                    this.onEof(token);\n                    break;\n                }\n            case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.WHITESPACE_CHARACTER:\n                {\n                    this.onWhitespaceCharacter(token);\n                    break;\n                }\n        }\n    }\n    //Integration points\n    /** @protected */ _isIntegrationPoint(tid, element, foreignNS) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        const attrs = this.treeAdapter.getAttrList(element);\n        return _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_5__.isIntegrationPoint(tid, ns, attrs, foreignNS);\n    }\n    //Active formatting elements reconstruction\n    /** @protected */ _reconstructActiveFormattingElements() {\n        const listLength = this.activeFormattingElements.entries.length;\n        if (listLength) {\n            const endIndex = this.activeFormattingElements.entries.findIndex((entry)=>entry.type === _formatting_element_list_js__WEBPACK_IMPORTED_MODULE_2__.EntryType.Marker || this.openElements.contains(entry.element));\n            const unopenIdx = endIndex === -1 ? listLength - 1 : endIndex - 1;\n            for(let i = unopenIdx; i >= 0; i--){\n                const entry = this.activeFormattingElements.entries[i];\n                this._insertElement(entry.token, this.treeAdapter.getNamespaceURI(entry.element));\n                entry.element = this.openElements.current;\n            }\n        }\n    }\n    //Close elements\n    /** @protected */ _closeTableCell() {\n        this.openElements.generateImpliedEndTags();\n        this.openElements.popUntilTableCellPopped();\n        this.activeFormattingElements.clearToLastMarker();\n        this.insertionMode = InsertionMode.IN_ROW;\n    }\n    /** @protected */ _closePElement() {\n        this.openElements.generateImpliedEndTagsWithExclusion(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P);\n        this.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P);\n    }\n    //Insertion modes\n    /** @protected */ _resetInsertionMode() {\n        for(let i = this.openElements.stackTop; i >= 0; i--){\n            //Insertion mode reset map\n            switch(i === 0 && this.fragmentContext ? this.fragmentContextID : this.openElements.tagIDs[i]){\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR:\n                    {\n                        this.insertionMode = InsertionMode.IN_ROW;\n                        return;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY:\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD:\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT:\n                    {\n                        this.insertionMode = InsertionMode.IN_TABLE_BODY;\n                        return;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION:\n                    {\n                        this.insertionMode = InsertionMode.IN_CAPTION;\n                        return;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n                    {\n                        this.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                        return;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE:\n                    {\n                        this.insertionMode = InsertionMode.IN_TABLE;\n                        return;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY:\n                    {\n                        this.insertionMode = InsertionMode.IN_BODY;\n                        return;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FRAMESET:\n                    {\n                        this.insertionMode = InsertionMode.IN_FRAMESET;\n                        return;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SELECT:\n                    {\n                        this._resetInsertionModeForSelect(i);\n                        return;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n                    {\n                        this.insertionMode = this.tmplInsertionModeStack[0];\n                        return;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n                    {\n                        this.insertionMode = this.headElement ? InsertionMode.AFTER_HEAD : InsertionMode.BEFORE_HEAD;\n                        return;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD:\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH:\n                    {\n                        if (i > 0) {\n                            this.insertionMode = InsertionMode.IN_CELL;\n                            return;\n                        }\n                        break;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEAD:\n                    {\n                        if (i > 0) {\n                            this.insertionMode = InsertionMode.IN_HEAD;\n                            return;\n                        }\n                        break;\n                    }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_BODY;\n    }\n    /** @protected */ _resetInsertionModeForSelect(selectIdx) {\n        if (selectIdx > 0) {\n            for(let i = selectIdx - 1; i > 0; i--){\n                const tn = this.openElements.tagIDs[i];\n                if (tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE) {\n                    break;\n                } else if (tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE) {\n                    this.insertionMode = InsertionMode.IN_SELECT_IN_TABLE;\n                    return;\n                }\n            }\n        }\n        this.insertionMode = InsertionMode.IN_SELECT;\n    }\n    //Foster parenting\n    /** @protected */ _isElementCausesFosterParenting(tn) {\n        return TABLE_STRUCTURE_TAGS.has(tn);\n    }\n    /** @protected */ _shouldFosterParentOnInsertion() {\n        return this.fosterParentingEnabled && this.openElements.currentTagId !== undefined && this._isElementCausesFosterParenting(this.openElements.currentTagId);\n    }\n    /** @protected */ _findFosterParentingLocation() {\n        for(let i = this.openElements.stackTop; i >= 0; i--){\n            const openElement = this.openElements.items[i];\n            switch(this.openElements.tagIDs[i]){\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n                    {\n                        if (this.treeAdapter.getNamespaceURI(openElement) === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML) {\n                            return {\n                                parent: this.treeAdapter.getTemplateContent(openElement),\n                                beforeElement: null\n                            };\n                        }\n                        break;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE:\n                    {\n                        const parent = this.treeAdapter.getParentNode(openElement);\n                        if (parent) {\n                            return {\n                                parent,\n                                beforeElement: openElement\n                            };\n                        }\n                        return {\n                            parent: this.openElements.items[i - 1],\n                            beforeElement: null\n                        };\n                    }\n                default:\n            }\n        }\n        return {\n            parent: this.openElements.items[0],\n            beforeElement: null\n        };\n    }\n    /** @protected */ _fosterParentElement(element) {\n        const location = this._findFosterParentingLocation();\n        if (location.beforeElement) {\n            this.treeAdapter.insertBefore(location.parent, element, location.beforeElement);\n        } else {\n            this.treeAdapter.appendChild(location.parent, element);\n        }\n    }\n    //Special elements\n    /** @protected */ _isSpecialElement(element, id) {\n        const ns = this.treeAdapter.getNamespaceURI(element);\n        return _common_html_js__WEBPACK_IMPORTED_MODULE_8__.SPECIAL_ELEMENTS[ns].has(id);\n    }\n    /** @internal */ onCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            characterInForeignContent(this, token);\n            return;\n        }\n        switch(this.insertionMode){\n            case InsertionMode.INITIAL:\n                {\n                    tokenInInitialMode(this, token);\n                    break;\n                }\n            case InsertionMode.BEFORE_HTML:\n                {\n                    tokenBeforeHtml(this, token);\n                    break;\n                }\n            case InsertionMode.BEFORE_HEAD:\n                {\n                    tokenBeforeHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_HEAD:\n                {\n                    tokenInHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n                {\n                    tokenInHeadNoScript(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_HEAD:\n                {\n                    tokenAfterHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n                {\n                    characterInBody(this, token);\n                    break;\n                }\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n                {\n                    this._insertCharacters(token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n                {\n                    characterInTable(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE_TEXT:\n                {\n                    characterInTableText(this, token);\n                    break;\n                }\n            case InsertionMode.IN_COLUMN_GROUP:\n                {\n                    tokenInColumnGroup(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_BODY:\n                {\n                    tokenAfterBody(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_AFTER_BODY:\n                {\n                    tokenAfterAfterBody(this, token);\n                    break;\n                }\n            default:\n        }\n    }\n    /** @internal */ onNullCharacter(token) {\n        this.skipNextNewLine = false;\n        if (this.tokenizer.inForeignNode) {\n            nullCharacterInForeignContent(this, token);\n            return;\n        }\n        switch(this.insertionMode){\n            case InsertionMode.INITIAL:\n                {\n                    tokenInInitialMode(this, token);\n                    break;\n                }\n            case InsertionMode.BEFORE_HTML:\n                {\n                    tokenBeforeHtml(this, token);\n                    break;\n                }\n            case InsertionMode.BEFORE_HEAD:\n                {\n                    tokenBeforeHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_HEAD:\n                {\n                    tokenInHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n                {\n                    tokenInHeadNoScript(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_HEAD:\n                {\n                    tokenAfterHead(this, token);\n                    break;\n                }\n            case InsertionMode.TEXT:\n                {\n                    this._insertCharacters(token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n                {\n                    characterInTable(this, token);\n                    break;\n                }\n            case InsertionMode.IN_COLUMN_GROUP:\n                {\n                    tokenInColumnGroup(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_BODY:\n                {\n                    tokenAfterBody(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_AFTER_BODY:\n                {\n                    tokenAfterAfterBody(this, token);\n                    break;\n                }\n            default:\n        }\n    }\n    /** @internal */ onComment(token) {\n        this.skipNextNewLine = false;\n        if (this.currentNotInHTML) {\n            appendComment(this, token);\n            return;\n        }\n        switch(this.insertionMode){\n            case InsertionMode.INITIAL:\n            case InsertionMode.BEFORE_HTML:\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n                {\n                    appendComment(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE_TEXT:\n                {\n                    tokenInTableText(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_BODY:\n                {\n                    appendCommentToRootHtmlElement(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET:\n                {\n                    appendCommentToDocument(this, token);\n                    break;\n                }\n            default:\n        }\n    }\n    /** @internal */ onDoctype(token) {\n        this.skipNextNewLine = false;\n        switch(this.insertionMode){\n            case InsertionMode.INITIAL:\n                {\n                    doctypeInInitialMode(this, token);\n                    break;\n                }\n            case InsertionMode.BEFORE_HEAD:\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n                {\n                    this._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.misplacedDoctype);\n                    break;\n                }\n            case InsertionMode.IN_TABLE_TEXT:\n                {\n                    tokenInTableText(this, token);\n                    break;\n                }\n            default:\n        }\n    }\n    /** @internal */ onStartTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        this._processStartTag(token);\n        if (token.selfClosing && !token.ackSelfClosing) {\n            this._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.nonVoidHtmlElementStartTagWithTrailingSolidus);\n        }\n    }\n    /**\n     * Processes a given start tag.\n     *\n     * `onStartTag` checks if a self-closing tag was recognized. When a token\n     * is moved inbetween multiple insertion modes, this check for self-closing\n     * could lead to false positives. To avoid this, `_processStartTag` is used\n     * for nested calls.\n     *\n     * @param token The token to process.\n     * @protected\n     */ _processStartTag(token) {\n        if (this.shouldProcessStartTagTokenInForeignContent(token)) {\n            startTagInForeignContent(this, token);\n        } else {\n            this._startTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */ _startTagOutsideForeignContent(token) {\n        switch(this.insertionMode){\n            case InsertionMode.INITIAL:\n                {\n                    tokenInInitialMode(this, token);\n                    break;\n                }\n            case InsertionMode.BEFORE_HTML:\n                {\n                    startTagBeforeHtml(this, token);\n                    break;\n                }\n            case InsertionMode.BEFORE_HEAD:\n                {\n                    startTagBeforeHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_HEAD:\n                {\n                    startTagInHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n                {\n                    startTagInHeadNoScript(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_HEAD:\n                {\n                    startTagAfterHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_BODY:\n                {\n                    startTagInBody(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE:\n                {\n                    startTagInTable(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE_TEXT:\n                {\n                    tokenInTableText(this, token);\n                    break;\n                }\n            case InsertionMode.IN_CAPTION:\n                {\n                    startTagInCaption(this, token);\n                    break;\n                }\n            case InsertionMode.IN_COLUMN_GROUP:\n                {\n                    startTagInColumnGroup(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE_BODY:\n                {\n                    startTagInTableBody(this, token);\n                    break;\n                }\n            case InsertionMode.IN_ROW:\n                {\n                    startTagInRow(this, token);\n                    break;\n                }\n            case InsertionMode.IN_CELL:\n                {\n                    startTagInCell(this, token);\n                    break;\n                }\n            case InsertionMode.IN_SELECT:\n                {\n                    startTagInSelect(this, token);\n                    break;\n                }\n            case InsertionMode.IN_SELECT_IN_TABLE:\n                {\n                    startTagInSelectInTable(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TEMPLATE:\n                {\n                    startTagInTemplate(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_BODY:\n                {\n                    startTagAfterBody(this, token);\n                    break;\n                }\n            case InsertionMode.IN_FRAMESET:\n                {\n                    startTagInFrameset(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_FRAMESET:\n                {\n                    startTagAfterFrameset(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_AFTER_BODY:\n                {\n                    startTagAfterAfterBody(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_AFTER_FRAMESET:\n                {\n                    startTagAfterAfterFrameset(this, token);\n                    break;\n                }\n            default:\n        }\n    }\n    /** @internal */ onEndTag(token) {\n        this.skipNextNewLine = false;\n        this.currentToken = token;\n        if (this.currentNotInHTML) {\n            endTagInForeignContent(this, token);\n        } else {\n            this._endTagOutsideForeignContent(token);\n        }\n    }\n    /** @protected */ _endTagOutsideForeignContent(token) {\n        switch(this.insertionMode){\n            case InsertionMode.INITIAL:\n                {\n                    tokenInInitialMode(this, token);\n                    break;\n                }\n            case InsertionMode.BEFORE_HTML:\n                {\n                    endTagBeforeHtml(this, token);\n                    break;\n                }\n            case InsertionMode.BEFORE_HEAD:\n                {\n                    endTagBeforeHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_HEAD:\n                {\n                    endTagInHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n                {\n                    endTagInHeadNoScript(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_HEAD:\n                {\n                    endTagAfterHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_BODY:\n                {\n                    endTagInBody(this, token);\n                    break;\n                }\n            case InsertionMode.TEXT:\n                {\n                    endTagInText(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE:\n                {\n                    endTagInTable(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE_TEXT:\n                {\n                    tokenInTableText(this, token);\n                    break;\n                }\n            case InsertionMode.IN_CAPTION:\n                {\n                    endTagInCaption(this, token);\n                    break;\n                }\n            case InsertionMode.IN_COLUMN_GROUP:\n                {\n                    endTagInColumnGroup(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE_BODY:\n                {\n                    endTagInTableBody(this, token);\n                    break;\n                }\n            case InsertionMode.IN_ROW:\n                {\n                    endTagInRow(this, token);\n                    break;\n                }\n            case InsertionMode.IN_CELL:\n                {\n                    endTagInCell(this, token);\n                    break;\n                }\n            case InsertionMode.IN_SELECT:\n                {\n                    endTagInSelect(this, token);\n                    break;\n                }\n            case InsertionMode.IN_SELECT_IN_TABLE:\n                {\n                    endTagInSelectInTable(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TEMPLATE:\n                {\n                    endTagInTemplate(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_BODY:\n                {\n                    endTagAfterBody(this, token);\n                    break;\n                }\n            case InsertionMode.IN_FRAMESET:\n                {\n                    endTagInFrameset(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_FRAMESET:\n                {\n                    endTagAfterFrameset(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_AFTER_BODY:\n                {\n                    tokenAfterAfterBody(this, token);\n                    break;\n                }\n            default:\n        }\n    }\n    /** @internal */ onEof(token) {\n        switch(this.insertionMode){\n            case InsertionMode.INITIAL:\n                {\n                    tokenInInitialMode(this, token);\n                    break;\n                }\n            case InsertionMode.BEFORE_HTML:\n                {\n                    tokenBeforeHtml(this, token);\n                    break;\n                }\n            case InsertionMode.BEFORE_HEAD:\n                {\n                    tokenBeforeHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_HEAD:\n                {\n                    tokenInHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n                {\n                    tokenInHeadNoScript(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_HEAD:\n                {\n                    tokenAfterHead(this, token);\n                    break;\n                }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n                {\n                    eofInBody(this, token);\n                    break;\n                }\n            case InsertionMode.TEXT:\n                {\n                    eofInText(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE_TEXT:\n                {\n                    tokenInTableText(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TEMPLATE:\n                {\n                    eofInTemplate(this, token);\n                    break;\n                }\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET:\n                {\n                    stopParsing(this, token);\n                    break;\n                }\n            default:\n        }\n    }\n    /** @internal */ onWhitespaceCharacter(token) {\n        if (this.skipNextNewLine) {\n            this.skipNextNewLine = false;\n            if (token.chars.charCodeAt(0) === _common_unicode_js__WEBPACK_IMPORTED_MODULE_7__.CODE_POINTS.LINE_FEED) {\n                if (token.chars.length === 1) {\n                    return;\n                }\n                token.chars = token.chars.substr(1);\n            }\n        }\n        if (this.tokenizer.inForeignNode) {\n            this._insertCharacters(token);\n            return;\n        }\n        switch(this.insertionMode){\n            case InsertionMode.IN_HEAD:\n            case InsertionMode.IN_HEAD_NO_SCRIPT:\n            case InsertionMode.AFTER_HEAD:\n            case InsertionMode.TEXT:\n            case InsertionMode.IN_COLUMN_GROUP:\n            case InsertionMode.IN_SELECT:\n            case InsertionMode.IN_SELECT_IN_TABLE:\n            case InsertionMode.IN_FRAMESET:\n            case InsertionMode.AFTER_FRAMESET:\n                {\n                    this._insertCharacters(token);\n                    break;\n                }\n            case InsertionMode.IN_BODY:\n            case InsertionMode.IN_CAPTION:\n            case InsertionMode.IN_CELL:\n            case InsertionMode.IN_TEMPLATE:\n            case InsertionMode.AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_BODY:\n            case InsertionMode.AFTER_AFTER_FRAMESET:\n                {\n                    whitespaceCharacterInBody(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE:\n            case InsertionMode.IN_TABLE_BODY:\n            case InsertionMode.IN_ROW:\n                {\n                    characterInTable(this, token);\n                    break;\n                }\n            case InsertionMode.IN_TABLE_TEXT:\n                {\n                    whitespaceCharacterInTableText(this, token);\n                    break;\n                }\n            default:\n        }\n    }\n}\n//Adoption agency algorithm\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/tree-construction.html#adoptionAgency)\n//------------------------------------------------------------------\n//Steps 5-8 of the algorithm\nfunction aaObtainFormattingElementEntry(p, token) {\n    let formattingElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(token.tagName);\n    if (formattingElementEntry) {\n        if (!p.openElements.contains(formattingElementEntry.element)) {\n            p.activeFormattingElements.removeEntry(formattingElementEntry);\n            formattingElementEntry = null;\n        } else if (!p.openElements.hasInScope(token.tagID)) {\n            formattingElementEntry = null;\n        }\n    } else {\n        genericEndTagInBody(p, token);\n    }\n    return formattingElementEntry;\n}\n//Steps 9 and 10 of the algorithm\nfunction aaObtainFurthestBlock(p, formattingElementEntry) {\n    let furthestBlock = null;\n    let idx = p.openElements.stackTop;\n    for(; idx >= 0; idx--){\n        const element = p.openElements.items[idx];\n        if (element === formattingElementEntry.element) {\n            break;\n        }\n        if (p._isSpecialElement(element, p.openElements.tagIDs[idx])) {\n            furthestBlock = element;\n        }\n    }\n    if (!furthestBlock) {\n        p.openElements.shortenToLength(Math.max(idx, 0));\n        p.activeFormattingElements.removeEntry(formattingElementEntry);\n    }\n    return furthestBlock;\n}\n//Step 13 of the algorithm\nfunction aaInnerLoop(p, furthestBlock, formattingElement) {\n    let lastElement = furthestBlock;\n    let nextElement = p.openElements.getCommonAncestor(furthestBlock);\n    for(let i = 0, element = nextElement; element !== formattingElement; i++, element = nextElement){\n        //NOTE: store the next element for the next loop iteration (it may be deleted from the stack by step 9.5)\n        nextElement = p.openElements.getCommonAncestor(element);\n        const elementEntry = p.activeFormattingElements.getElementEntry(element);\n        const counterOverflow = elementEntry && i >= AA_INNER_LOOP_ITER;\n        const shouldRemoveFromOpenElements = !elementEntry || counterOverflow;\n        if (shouldRemoveFromOpenElements) {\n            if (counterOverflow) {\n                p.activeFormattingElements.removeEntry(elementEntry);\n            }\n            p.openElements.remove(element);\n        } else {\n            element = aaRecreateElementFromEntry(p, elementEntry);\n            if (lastElement === furthestBlock) {\n                p.activeFormattingElements.bookmark = elementEntry;\n            }\n            p.treeAdapter.detachNode(lastElement);\n            p.treeAdapter.appendChild(element, lastElement);\n            lastElement = element;\n        }\n    }\n    return lastElement;\n}\n//Step 13.7 of the algorithm\nfunction aaRecreateElementFromEntry(p, elementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(elementEntry.element);\n    const newElement = p.treeAdapter.createElement(elementEntry.token.tagName, ns, elementEntry.token.attrs);\n    p.openElements.replace(elementEntry.element, newElement);\n    elementEntry.element = newElement;\n    return newElement;\n}\n//Step 14 of the algorithm\nfunction aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement) {\n    const tn = p.treeAdapter.getTagName(commonAncestor);\n    const tid = (0,_common_html_js__WEBPACK_IMPORTED_MODULE_8__.getTagID)(tn);\n    if (p._isElementCausesFosterParenting(tid)) {\n        p._fosterParentElement(lastElement);\n    } else {\n        const ns = p.treeAdapter.getNamespaceURI(commonAncestor);\n        if (tid === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE && ns === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML) {\n            commonAncestor = p.treeAdapter.getTemplateContent(commonAncestor);\n        }\n        p.treeAdapter.appendChild(commonAncestor, lastElement);\n    }\n}\n//Steps 15-19 of the algorithm\nfunction aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry) {\n    const ns = p.treeAdapter.getNamespaceURI(formattingElementEntry.element);\n    const { token } = formattingElementEntry;\n    const newElement = p.treeAdapter.createElement(token.tagName, ns, token.attrs);\n    p._adoptNodes(furthestBlock, newElement);\n    p.treeAdapter.appendChild(furthestBlock, newElement);\n    p.activeFormattingElements.insertElementAfterBookmark(newElement, token);\n    p.activeFormattingElements.removeEntry(formattingElementEntry);\n    p.openElements.remove(formattingElementEntry.element);\n    p.openElements.insertAfter(furthestBlock, newElement, token.tagID);\n}\n//Algorithm entry point\nfunction callAdoptionAgency(p, token) {\n    for(let i = 0; i < AA_OUTER_LOOP_ITER; i++){\n        const formattingElementEntry = aaObtainFormattingElementEntry(p, token);\n        if (!formattingElementEntry) {\n            break;\n        }\n        const furthestBlock = aaObtainFurthestBlock(p, formattingElementEntry);\n        if (!furthestBlock) {\n            break;\n        }\n        p.activeFormattingElements.bookmark = formattingElementEntry;\n        const lastElement = aaInnerLoop(p, furthestBlock, formattingElementEntry.element);\n        const commonAncestor = p.openElements.getCommonAncestor(formattingElementEntry.element);\n        p.treeAdapter.detachNode(lastElement);\n        if (commonAncestor) aaInsertLastNodeInCommonAncestor(p, commonAncestor, lastElement);\n        aaReplaceFormattingElement(p, furthestBlock, formattingElementEntry);\n    }\n}\n//Generic token handlers\n//------------------------------------------------------------------\nfunction appendComment(p, token) {\n    p._appendCommentNode(token, p.openElements.currentTmplContentOrNode);\n}\nfunction appendCommentToRootHtmlElement(p, token) {\n    p._appendCommentNode(token, p.openElements.items[0]);\n}\nfunction appendCommentToDocument(p, token) {\n    p._appendCommentNode(token, p.document);\n}\nfunction stopParsing(p, token) {\n    p.stopped = true;\n    // NOTE: Set end locations for elements that remain on the open element stack.\n    if (token.location) {\n        // NOTE: If we are not in a fragment, `html` and `body` will stay on the stack.\n        // This is a problem, as we might overwrite their end position here.\n        const target = p.fragmentContext ? 0 : 2;\n        for(let i = p.openElements.stackTop; i >= target; i--){\n            p._setEndLocation(p.openElements.items[i], token);\n        }\n        // Handle `html` and `body`\n        if (!p.fragmentContext && p.openElements.stackTop >= 0) {\n            const htmlElement = p.openElements.items[0];\n            const htmlLocation = p.treeAdapter.getNodeSourceCodeLocation(htmlElement);\n            if (htmlLocation && !htmlLocation.endTag) {\n                p._setEndLocation(htmlElement, token);\n                if (p.openElements.stackTop >= 1) {\n                    const bodyElement = p.openElements.items[1];\n                    const bodyLocation = p.treeAdapter.getNodeSourceCodeLocation(bodyElement);\n                    if (bodyLocation && !bodyLocation.endTag) {\n                        p._setEndLocation(bodyElement, token);\n                    }\n                }\n            }\n        }\n    }\n}\n// The \"initial\" insertion mode\n//------------------------------------------------------------------\nfunction doctypeInInitialMode(p, token) {\n    p._setDocumentType(token);\n    const mode = token.forceQuirks ? _common_html_js__WEBPACK_IMPORTED_MODULE_8__.DOCUMENT_MODE.QUIRKS : _common_doctype_js__WEBPACK_IMPORTED_MODULE_4__.getDocumentMode(token);\n    if (!_common_doctype_js__WEBPACK_IMPORTED_MODULE_4__.isConforming(token)) {\n        p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.nonConformingDoctype);\n    }\n    p.treeAdapter.setDocumentMode(p.document, mode);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n}\nfunction tokenInInitialMode(p, token) {\n    p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.missingDoctype, true);\n    p.treeAdapter.setDocumentMode(p.document, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.DOCUMENT_MODE.QUIRKS);\n    p.insertionMode = InsertionMode.BEFORE_HTML;\n    p._processToken(token);\n}\n// The \"before html\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHtml(p, token) {\n    if (token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML) {\n        p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n        p.insertionMode = InsertionMode.BEFORE_HEAD;\n    } else {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction endTagBeforeHtml(p, token) {\n    const tn = token.tagID;\n    if (tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEAD || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BR) {\n        tokenBeforeHtml(p, token);\n    }\n}\nfunction tokenBeforeHtml(p, token) {\n    p._insertFakeRootElement();\n    p.insertionMode = InsertionMode.BEFORE_HEAD;\n    p._processToken(token);\n}\n// The \"before head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagBeforeHead(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                startTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEAD:\n            {\n                p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                p.headElement = p.openElements.current;\n                p.insertionMode = InsertionMode.IN_HEAD;\n                break;\n            }\n        default:\n            {\n                tokenBeforeHead(p, token);\n            }\n    }\n}\nfunction endTagBeforeHead(p, token) {\n    const tn = token.tagID;\n    if (tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEAD || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BR) {\n        tokenBeforeHead(p, token);\n    } else {\n        p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenBeforeHead(p, token) {\n    p._insertFakeElement(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.HEAD, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEAD);\n    p.headElement = p.openElements.current;\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"in head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHead(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                startTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BASE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BASEFONT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BGSOUND:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LINK:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.META:\n            {\n                p._appendElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                token.ackSelfClosing = true;\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TITLE:\n            {\n                p._switchToTextParsing(token, _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.RCDATA);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOSCRIPT:\n            {\n                if (p.options.scriptingEnabled) {\n                    p._switchToTextParsing(token, _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.RAWTEXT);\n                } else {\n                    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                    p.insertionMode = InsertionMode.IN_HEAD_NO_SCRIPT;\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOFRAMES:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.STYLE:\n            {\n                p._switchToTextParsing(token, _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.RAWTEXT);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SCRIPT:\n            {\n                p._switchToTextParsing(token, _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.SCRIPT_DATA);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n            {\n                p._insertTemplate(token);\n                p.activeFormattingElements.insertMarker();\n                p.framesetOk = false;\n                p.insertionMode = InsertionMode.IN_TEMPLATE;\n                p.tmplInsertionModeStack.unshift(InsertionMode.IN_TEMPLATE);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEAD:\n            {\n                p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.misplacedStartTagForHeadElement);\n                break;\n            }\n        default:\n            {\n                tokenInHead(p, token);\n            }\n    }\n}\nfunction endTagInHead(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEAD:\n            {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.AFTER_HEAD;\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BR:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                tokenInHead(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n            {\n                templateEndTagInHead(p, token);\n                break;\n            }\n        default:\n            {\n                p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.endTagWithoutMatchingOpenElement);\n            }\n    }\n}\nfunction templateEndTagInHead(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.generateImpliedEndTagsThoroughly();\n        if (p.openElements.currentTagId !== _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE) {\n            p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.closingOfElementWithOpenChildElements);\n        }\n        p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n    } else {\n        p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.endTagWithoutMatchingOpenElement);\n    }\n}\nfunction tokenInHead(p, token) {\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.AFTER_HEAD;\n    p._processToken(token);\n}\n// The \"in head no script\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInHeadNoScript(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                startTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BASEFONT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BGSOUND:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEAD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LINK:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.META:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOFRAMES:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.STYLE:\n            {\n                startTagInHead(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOSCRIPT:\n            {\n                p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.nestedNoscriptInHead);\n                break;\n            }\n        default:\n            {\n                tokenInHeadNoScript(p, token);\n            }\n    }\n}\nfunction endTagInHeadNoScript(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOSCRIPT:\n            {\n                p.openElements.pop();\n                p.insertionMode = InsertionMode.IN_HEAD;\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BR:\n            {\n                tokenInHeadNoScript(p, token);\n                break;\n            }\n        default:\n            {\n                p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.endTagWithoutMatchingOpenElement);\n            }\n    }\n}\nfunction tokenInHeadNoScript(p, token) {\n    const errCode = token.type === _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.EOF ? _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.openElementsLeftAfterEof : _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.disallowedContentInNoscriptInHead;\n    p._err(token, errCode);\n    p.openElements.pop();\n    p.insertionMode = InsertionMode.IN_HEAD;\n    p._processToken(token);\n}\n// The \"after head\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterHead(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                startTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY:\n            {\n                p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                p.framesetOk = false;\n                p.insertionMode = InsertionMode.IN_BODY;\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FRAMESET:\n            {\n                p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                p.insertionMode = InsertionMode.IN_FRAMESET;\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BASE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BASEFONT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BGSOUND:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LINK:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.META:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOFRAMES:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SCRIPT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.STYLE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TITLE:\n            {\n                p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.abandonedHeadElementChild);\n                p.openElements.push(p.headElement, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEAD);\n                startTagInHead(p, token);\n                p.openElements.remove(p.headElement);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEAD:\n            {\n                p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.misplacedStartTagForHeadElement);\n                break;\n            }\n        default:\n            {\n                tokenAfterHead(p, token);\n            }\n    }\n}\nfunction endTagAfterHead(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BR:\n            {\n                tokenAfterHead(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n            {\n                templateEndTagInHead(p, token);\n                break;\n            }\n        default:\n            {\n                p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.endTagWithoutMatchingOpenElement);\n            }\n    }\n}\nfunction tokenAfterHead(p, token) {\n    p._insertFakeElement(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.BODY, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY);\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in body\" insertion mode\n//------------------------------------------------------------------\nfunction modeInBody(p, token) {\n    switch(token.type){\n        case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.CHARACTER:\n            {\n                characterInBody(p, token);\n                break;\n            }\n        case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.WHITESPACE_CHARACTER:\n            {\n                whitespaceCharacterInBody(p, token);\n                break;\n            }\n        case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.COMMENT:\n            {\n                appendComment(p, token);\n                break;\n            }\n        case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.START_TAG:\n            {\n                startTagInBody(p, token);\n                break;\n            }\n        case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.END_TAG:\n            {\n                endTagInBody(p, token);\n                break;\n            }\n        case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.EOF:\n            {\n                eofInBody(p, token);\n                break;\n            }\n        default:\n    }\n}\nfunction whitespaceCharacterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n}\nfunction characterInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction htmlStartTagInBody(p, token) {\n    if (p.openElements.tmplCount === 0) {\n        p.treeAdapter.adoptAttributes(p.openElements.items[0], token.attrs);\n    }\n}\nfunction bodyStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (bodyElement && p.openElements.tmplCount === 0) {\n        p.framesetOk = false;\n        p.treeAdapter.adoptAttributes(bodyElement, token.attrs);\n    }\n}\nfunction framesetStartTagInBody(p, token) {\n    const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n    if (p.framesetOk && bodyElement) {\n        p.treeAdapter.detachNode(bodyElement);\n        p.openElements.popAllUpToHtmlElement();\n        p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n        p.insertionMode = InsertionMode.IN_FRAMESET;\n    }\n}\nfunction addressStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n}\nfunction numberedHeaderStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P)) {\n        p._closePElement();\n    }\n    if (p.openElements.currentTagId !== undefined && _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NUMBERED_HEADERS.has(p.openElements.currentTagId)) {\n        p.openElements.pop();\n    }\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n}\nfunction preStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of pre blocks are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.framesetOk = false;\n}\nfunction formStartTagInBody(p, token) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    if (!p.formElement || inTemplate) {\n        if (p.openElements.hasInButtonScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P)) {\n            p._closePElement();\n        }\n        p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n        if (!inTemplate) {\n            p.formElement = p.openElements.current;\n        }\n    }\n}\nfunction listItemStartTagInBody(p, token) {\n    p.framesetOk = false;\n    const tn = token.tagID;\n    for(let i = p.openElements.stackTop; i >= 0; i--){\n        const elementId = p.openElements.tagIDs[i];\n        if (tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LI && elementId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LI || (tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DD || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DT) && (elementId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DD || elementId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DT)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(elementId);\n            p.openElements.popUntilTagNamePopped(elementId);\n            break;\n        }\n        if (elementId !== _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.ADDRESS && elementId !== _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DIV && elementId !== _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P && p._isSpecialElement(p.openElements.items[i], elementId)) {\n            break;\n        }\n    }\n    if (p.openElements.hasInButtonScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n}\nfunction plaintextStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.tokenizer.state = _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.PLAINTEXT;\n}\nfunction buttonStartTagInBody(p, token) {\n    if (p.openElements.hasInScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BUTTON)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BUTTON);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.framesetOk = false;\n}\nfunction aStartTagInBody(p, token) {\n    const activeElementEntry = p.activeFormattingElements.getElementEntryInScopeWithTagName(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.A);\n    if (activeElementEntry) {\n        callAdoptionAgency(p, token);\n        p.openElements.remove(activeElementEntry.element);\n        p.activeFormattingElements.removeEntry(activeElementEntry);\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction bStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction nobrStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    if (p.openElements.hasInScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOBR)) {\n        callAdoptionAgency(p, token);\n        p._reconstructActiveFormattingElements();\n    }\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.activeFormattingElements.pushElement(p.openElements.current, token);\n}\nfunction appletStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.activeFormattingElements.insertMarker();\n    p.framesetOk = false;\n}\nfunction tableStartTagInBody(p, token) {\n    if (p.treeAdapter.getDocumentMode(p.document) !== _common_html_js__WEBPACK_IMPORTED_MODULE_8__.DOCUMENT_MODE.QUIRKS && p.openElements.hasInButtonScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.IN_TABLE;\n}\nfunction areaStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction isHiddenInput(token) {\n    const inputType = (0,_common_token_js__WEBPACK_IMPORTED_MODULE_9__.getTokenAttr)(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.ATTRS.TYPE);\n    return inputType != null && inputType.toLowerCase() === HIDDEN_INPUT_TYPE;\n}\nfunction inputStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._appendElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    if (!isHiddenInput(token)) {\n        p.framesetOk = false;\n    }\n    token.ackSelfClosing = true;\n}\nfunction paramStartTagInBody(p, token) {\n    p._appendElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    token.ackSelfClosing = true;\n}\nfunction hrStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._appendElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.framesetOk = false;\n    token.ackSelfClosing = true;\n}\nfunction imageStartTagInBody(p, token) {\n    token.tagName = _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.IMG;\n    token.tagID = _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.IMG;\n    areaStartTagInBody(p, token);\n}\nfunction textareaStartTagInBody(p, token) {\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    //NOTE: If the next token is a U+000A LINE FEED (LF) character token, then ignore that token and move\n    //on to the next one. (Newlines at the start of textarea elements are ignored as an authoring convenience.)\n    p.skipNextNewLine = true;\n    p.tokenizer.state = _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.RCDATA;\n    p.originalInsertionMode = p.insertionMode;\n    p.framesetOk = false;\n    p.insertionMode = InsertionMode.TEXT;\n}\nfunction xmpStartTagInBody(p, token) {\n    if (p.openElements.hasInButtonScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P)) {\n        p._closePElement();\n    }\n    p._reconstructActiveFormattingElements();\n    p.framesetOk = false;\n    p._switchToTextParsing(token, _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.RAWTEXT);\n}\nfunction iframeStartTagInBody(p, token) {\n    p.framesetOk = false;\n    p._switchToTextParsing(token, _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.RAWTEXT);\n}\n//NOTE: here we assume that we always act as a user agent with enabled plugins/frames, so we parse\n//<noembed>/<noframes> as rawtext.\nfunction rawTextStartTagInBody(p, token) {\n    p._switchToTextParsing(token, _tokenizer_index_js__WEBPACK_IMPORTED_MODULE_0__.TokenizerMode.RAWTEXT);\n}\nfunction selectStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.framesetOk = false;\n    p.insertionMode = p.insertionMode === InsertionMode.IN_TABLE || p.insertionMode === InsertionMode.IN_CAPTION || p.insertionMode === InsertionMode.IN_TABLE_BODY || p.insertionMode === InsertionMode.IN_ROW || p.insertionMode === InsertionMode.IN_CELL ? InsertionMode.IN_SELECT_IN_TABLE : InsertionMode.IN_SELECT;\n}\nfunction optgroupStartTagInBody(p, token) {\n    if (p.openElements.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTION) {\n        p.openElements.pop();\n    }\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n}\nfunction rbStartTagInBody(p, token) {\n    if (p.openElements.hasInScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.RUBY)) {\n        p.openElements.generateImpliedEndTags();\n    }\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n}\nfunction rtStartTagInBody(p, token) {\n    if (p.openElements.hasInScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.RUBY)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.RTC);\n    }\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n}\nfunction mathStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_5__.adjustTokenMathMLAttrs(token);\n    _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_5__.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.MATHML);\n    } else {\n        p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.MATHML);\n    }\n    token.ackSelfClosing = true;\n}\nfunction svgStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_5__.adjustTokenSVGAttrs(token);\n    _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_5__.adjustTokenXMLAttrs(token);\n    if (token.selfClosing) {\n        p._appendElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.SVG);\n    } else {\n        p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.SVG);\n    }\n    token.ackSelfClosing = true;\n}\nfunction genericStartTagInBody(p, token) {\n    p._reconstructActiveFormattingElements();\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n}\nfunction startTagInBody(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.I:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.S:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.B:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.U:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.EM:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BIG:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CODE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FONT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SMALL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.STRIKE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.STRONG:\n            {\n                bStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.A:\n            {\n                aStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H1:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H2:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H3:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H4:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H5:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H6:\n            {\n                numberedHeaderStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.UL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DIV:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DIR:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NAV:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.MAIN:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.MENU:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.ASIDE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CENTER:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FIGURE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FOOTER:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEADER:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HGROUP:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DIALOG:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DETAILS:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.ADDRESS:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.ARTICLE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SEARCH:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SECTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SUMMARY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FIELDSET:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BLOCKQUOTE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FIGCAPTION:\n            {\n                addressStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LI:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DT:\n            {\n                listItemStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BR:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.IMG:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.WBR:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.AREA:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.EMBED:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.KEYGEN:\n            {\n                areaStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HR:\n            {\n                hrStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.RB:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.RTC:\n            {\n                rbStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.RT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.RP:\n            {\n                rtStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.PRE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LISTING:\n            {\n                preStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.XMP:\n            {\n                xmpStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SVG:\n            {\n                svgStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                htmlStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BASE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LINK:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.META:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.STYLE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TITLE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SCRIPT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BGSOUND:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BASEFONT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n            {\n                startTagInHead(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY:\n            {\n                bodyStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FORM:\n            {\n                formStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOBR:\n            {\n                nobrStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.MATH:\n            {\n                mathStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE:\n            {\n                tableStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.INPUT:\n            {\n                inputStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.PARAM:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TRACK:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SOURCE:\n            {\n                paramStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.IMAGE:\n            {\n                imageStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BUTTON:\n            {\n                buttonStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.APPLET:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OBJECT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.MARQUEE:\n            {\n                appletStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.IFRAME:\n            {\n                iframeStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SELECT:\n            {\n                selectStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTGROUP:\n            {\n                optgroupStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOEMBED:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOFRAMES:\n            {\n                rawTextStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FRAMESET:\n            {\n                framesetStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEXTAREA:\n            {\n                textareaStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOSCRIPT:\n            {\n                if (p.options.scriptingEnabled) {\n                    rawTextStartTagInBody(p, token);\n                } else {\n                    genericStartTagInBody(p, token);\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.PLAINTEXT:\n            {\n                plaintextStartTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEAD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FRAME:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n            {\n                break;\n            }\n        default:\n            {\n                genericStartTagInBody(p, token);\n            }\n    }\n}\nfunction bodyEndTagInBody(p, token) {\n    if (p.openElements.hasInScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        //NOTE: <body> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo) {\n            const bodyElement = p.openElements.tryPeekProperlyNestedBodyElement();\n            if (bodyElement) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    }\n}\nfunction htmlEndTagInBody(p, token) {\n    if (p.openElements.hasInScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY)) {\n        p.insertionMode = InsertionMode.AFTER_BODY;\n        endTagAfterBody(p, token);\n    }\n}\nfunction addressEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction formEndTagInBody(p) {\n    const inTemplate = p.openElements.tmplCount > 0;\n    const { formElement } = p;\n    if (!inTemplate) {\n        p.formElement = null;\n    }\n    if ((formElement || inTemplate) && p.openElements.hasInScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FORM)) {\n        p.openElements.generateImpliedEndTags();\n        if (inTemplate) {\n            p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FORM);\n        } else if (formElement) {\n            p.openElements.remove(formElement);\n        }\n    }\n}\nfunction pEndTagInBody(p) {\n    if (!p.openElements.hasInButtonScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P)) {\n        p._insertFakeElement(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.P, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P);\n    }\n    p._closePElement();\n}\nfunction liEndTagInBody(p) {\n    if (p.openElements.hasInListItemScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LI)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LI);\n        p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LI);\n    }\n}\nfunction ddEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTagsWithExclusion(tn);\n        p.openElements.popUntilTagNamePopped(tn);\n    }\n}\nfunction numberedHeaderEndTagInBody(p) {\n    if (p.openElements.hasNumberedHeaderInScope()) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilNumberedHeaderPopped();\n    }\n}\nfunction appletEndTagInBody(p, token) {\n    const tn = token.tagID;\n    if (p.openElements.hasInScope(tn)) {\n        p.openElements.generateImpliedEndTags();\n        p.openElements.popUntilTagNamePopped(tn);\n        p.activeFormattingElements.clearToLastMarker();\n    }\n}\nfunction brEndTagInBody(p) {\n    p._reconstructActiveFormattingElements();\n    p._insertFakeElement(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.BR, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BR);\n    p.openElements.pop();\n    p.framesetOk = false;\n}\nfunction genericEndTagInBody(p, token) {\n    const tn = token.tagName;\n    const tid = token.tagID;\n    for(let i = p.openElements.stackTop; i > 0; i--){\n        const element = p.openElements.items[i];\n        const elementId = p.openElements.tagIDs[i];\n        // Compare the tag name here, as the tag might not be a known tag with an ID.\n        if (tid === elementId && (tid !== _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.UNKNOWN || p.treeAdapter.getTagName(element) === tn)) {\n            p.openElements.generateImpliedEndTagsWithExclusion(tid);\n            if (p.openElements.stackTop >= i) p.openElements.shortenToLength(i);\n            break;\n        }\n        if (p._isSpecialElement(element, elementId)) {\n            break;\n        }\n    }\n}\nfunction endTagInBody(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.A:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.B:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.I:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.S:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.U:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.EM:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BIG:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CODE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FONT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOBR:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SMALL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.STRIKE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.STRONG:\n            {\n                callAdoptionAgency(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P:\n            {\n                pEndTagInBody(p);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.UL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DIR:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DIV:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NAV:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.PRE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.MAIN:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.MENU:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.ASIDE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BUTTON:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CENTER:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FIGURE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FOOTER:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HEADER:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HGROUP:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DIALOG:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.ADDRESS:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.ARTICLE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DETAILS:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SEARCH:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SECTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SUMMARY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LISTING:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FIELDSET:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BLOCKQUOTE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FIGCAPTION:\n            {\n                addressEndTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LI:\n            {\n                liEndTagInBody(p);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.DT:\n            {\n                ddEndTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H1:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H2:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H3:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H4:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H5:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.H6:\n            {\n                numberedHeaderEndTagInBody(p);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BR:\n            {\n                brEndTagInBody(p);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY:\n            {\n                bodyEndTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                htmlEndTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FORM:\n            {\n                formEndTagInBody(p);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.APPLET:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OBJECT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.MARQUEE:\n            {\n                appletEndTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n            {\n                templateEndTagInHead(p, token);\n                break;\n            }\n        default:\n            {\n                genericEndTagInBody(p, token);\n            }\n    }\n}\nfunction eofInBody(p, token) {\n    if (p.tmplInsertionModeStack.length > 0) {\n        eofInTemplate(p, token);\n    } else {\n        stopParsing(p, token);\n    }\n}\n// The \"text\" insertion mode\n//------------------------------------------------------------------\nfunction endTagInText(p, token) {\n    var _a;\n    if (token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SCRIPT) {\n        (_a = p.scriptHandler) === null || _a === void 0 ? void 0 : _a.call(p, p.openElements.current);\n    }\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n}\nfunction eofInText(p, token) {\n    p._err(token, _common_error_codes_js__WEBPACK_IMPORTED_MODULE_6__.ERR.eofInElementThatCanContainOnlyText);\n    p.openElements.pop();\n    p.insertionMode = p.originalInsertionMode;\n    p.onEof(token);\n}\n// The \"in table\" insertion mode\n//------------------------------------------------------------------\nfunction characterInTable(p, token) {\n    if (p.openElements.currentTagId !== undefined && TABLE_STRUCTURE_TAGS.has(p.openElements.currentTagId)) {\n        p.pendingCharacterTokens.length = 0;\n        p.hasNonWhitespacePendingCharacterToken = false;\n        p.originalInsertionMode = p.insertionMode;\n        p.insertionMode = InsertionMode.IN_TABLE_TEXT;\n        switch(token.type){\n            case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.CHARACTER:\n                {\n                    characterInTableText(p, token);\n                    break;\n                }\n            case _common_token_js__WEBPACK_IMPORTED_MODULE_9__.TokenType.WHITESPACE_CHARACTER:\n                {\n                    whitespaceCharacterInTableText(p, token);\n                    break;\n                }\n        }\n    } else {\n        tokenInTable(p, token);\n    }\n}\nfunction captionStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p.activeFormattingElements.insertMarker();\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.insertionMode = InsertionMode.IN_CAPTION;\n}\nfunction colgroupStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n}\nfunction colStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.COLGROUP, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP);\n    p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n    startTagInColumnGroup(p, token);\n}\nfunction tbodyStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n}\nfunction tdStartTagInTable(p, token) {\n    p.openElements.clearBackToTableContext();\n    p._insertFakeElement(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.TBODY, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY);\n    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n    startTagInTableBody(p, token);\n}\nfunction tableStartTagInTable(p, token) {\n    if (p.openElements.hasInTableScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE)) {\n        p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    }\n}\nfunction inputStartTagInTable(p, token) {\n    if (isHiddenInput(token)) {\n        p._appendElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n    } else {\n        tokenInTable(p, token);\n    }\n    token.ackSelfClosing = true;\n}\nfunction formStartTagInTable(p, token) {\n    if (!p.formElement && p.openElements.tmplCount === 0) {\n        p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n        p.formElement = p.openElements.current;\n        p.openElements.pop();\n    }\n}\nfunction startTagInTable(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR:\n            {\n                tdStartTagInTable(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.STYLE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SCRIPT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n            {\n                startTagInHead(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n            {\n                colStartTagInTable(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FORM:\n            {\n                formStartTagInTable(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE:\n            {\n                tableStartTagInTable(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD:\n            {\n                tbodyStartTagInTable(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.INPUT:\n            {\n                inputStartTagInTable(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION:\n            {\n                captionStartTagInTable(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n            {\n                colgroupStartTagInTable(p, token);\n                break;\n            }\n        default:\n            {\n                tokenInTable(p, token);\n            }\n    }\n}\nfunction endTagInTable(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE:\n            {\n                if (p.openElements.hasInTableScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE)) {\n                    p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE);\n                    p._resetInsertionMode();\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n            {\n                templateEndTagInHead(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR:\n            {\n                break;\n            }\n        default:\n            {\n                tokenInTable(p, token);\n            }\n    }\n}\nfunction tokenInTable(p, token) {\n    const savedFosterParentingState = p.fosterParentingEnabled;\n    p.fosterParentingEnabled = true;\n    // Process token in `In Body` mode\n    modeInBody(p, token);\n    p.fosterParentingEnabled = savedFosterParentingState;\n}\n// The \"in table text\" insertion mode\n//------------------------------------------------------------------\nfunction whitespaceCharacterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n}\nfunction characterInTableText(p, token) {\n    p.pendingCharacterTokens.push(token);\n    p.hasNonWhitespacePendingCharacterToken = true;\n}\nfunction tokenInTableText(p, token) {\n    let i = 0;\n    if (p.hasNonWhitespacePendingCharacterToken) {\n        for(; i < p.pendingCharacterTokens.length; i++){\n            tokenInTable(p, p.pendingCharacterTokens[i]);\n        }\n    } else {\n        for(; i < p.pendingCharacterTokens.length; i++){\n            p._insertCharacters(p.pendingCharacterTokens[i]);\n        }\n    }\n    p.insertionMode = p.originalInsertionMode;\n    p._processToken(token);\n}\n// The \"in caption\" insertion mode\n//------------------------------------------------------------------\nconst TABLE_VOID_ELEMENTS = new Set([\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR\n]);\nfunction startTagInCaption(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION)) {\n            p.openElements.generateImpliedEndTags();\n            p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION);\n            p.activeFormattingElements.clearToLastMarker();\n            p.insertionMode = InsertionMode.IN_TABLE;\n            startTagInTable(p, token);\n        }\n    } else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCaption(p, token) {\n    const tn = token.tagID;\n    switch(tn){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE:\n            {\n                if (p.openElements.hasInTableScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION)) {\n                    p.openElements.generateImpliedEndTags();\n                    p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION);\n                    p.activeFormattingElements.clearToLastMarker();\n                    p.insertionMode = InsertionMode.IN_TABLE;\n                    if (tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE) {\n                        endTagInTable(p, token);\n                    }\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR:\n            {\n                break;\n            }\n        default:\n            {\n                endTagInBody(p, token);\n            }\n    }\n}\n// The \"in column group\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInColumnGroup(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                startTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n            {\n                p._appendElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                token.ackSelfClosing = true;\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n            {\n                startTagInHead(p, token);\n                break;\n            }\n        default:\n            {\n                tokenInColumnGroup(p, token);\n            }\n    }\n}\nfunction endTagInColumnGroup(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n            {\n                if (p.openElements.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP) {\n                    p.openElements.pop();\n                    p.insertionMode = InsertionMode.IN_TABLE;\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n            {\n                templateEndTagInHead(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n            {\n                break;\n            }\n        default:\n            {\n                tokenInColumnGroup(p, token);\n            }\n    }\n}\nfunction tokenInColumnGroup(p, token) {\n    if (p.openElements.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP) {\n        p.openElements.pop();\n        p.insertionMode = InsertionMode.IN_TABLE;\n        p._processToken(token);\n    }\n}\n// The \"in table body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTableBody(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR:\n            {\n                p.openElements.clearBackToTableBodyContext();\n                p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                p.insertionMode = InsertionMode.IN_ROW;\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD:\n            {\n                p.openElements.clearBackToTableBodyContext();\n                p._insertFakeElement(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_NAMES.TR, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR);\n                p.insertionMode = InsertionMode.IN_ROW;\n                startTagInRow(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD:\n            {\n                if (p.openElements.hasTableBodyContextInTableScope()) {\n                    p.openElements.clearBackToTableBodyContext();\n                    p.openElements.pop();\n                    p.insertionMode = InsertionMode.IN_TABLE;\n                    startTagInTable(p, token);\n                }\n                break;\n            }\n        default:\n            {\n                startTagInTable(p, token);\n            }\n    }\n}\nfunction endTagInTableBody(p, token) {\n    const tn = token.tagID;\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD:\n            {\n                if (p.openElements.hasInTableScope(tn)) {\n                    p.openElements.clearBackToTableBodyContext();\n                    p.openElements.pop();\n                    p.insertionMode = InsertionMode.IN_TABLE;\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE:\n            {\n                if (p.openElements.hasTableBodyContextInTableScope()) {\n                    p.openElements.clearBackToTableBodyContext();\n                    p.openElements.pop();\n                    p.insertionMode = InsertionMode.IN_TABLE;\n                    endTagInTable(p, token);\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR:\n            {\n                break;\n            }\n        default:\n            {\n                endTagInTable(p, token);\n            }\n    }\n}\n// The \"in row\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInRow(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD:\n            {\n                p.openElements.clearBackToTableRowContext();\n                p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                p.insertionMode = InsertionMode.IN_CELL;\n                p.activeFormattingElements.insertMarker();\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR:\n            {\n                if (p.openElements.hasInTableScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR)) {\n                    p.openElements.clearBackToTableRowContext();\n                    p.openElements.pop();\n                    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    startTagInTableBody(p, token);\n                }\n                break;\n            }\n        default:\n            {\n                startTagInTable(p, token);\n            }\n    }\n}\nfunction endTagInRow(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR:\n            {\n                if (p.openElements.hasInTableScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR)) {\n                    p.openElements.clearBackToTableRowContext();\n                    p.openElements.pop();\n                    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE:\n            {\n                if (p.openElements.hasInTableScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR)) {\n                    p.openElements.clearBackToTableRowContext();\n                    p.openElements.pop();\n                    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    endTagInTableBody(p, token);\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD:\n            {\n                if (p.openElements.hasInTableScope(token.tagID) || p.openElements.hasInTableScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR)) {\n                    p.openElements.clearBackToTableRowContext();\n                    p.openElements.pop();\n                    p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                    endTagInTableBody(p, token);\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH:\n            {\n                break;\n            }\n        default:\n            {\n                endTagInTable(p, token);\n            }\n    }\n}\n// The \"in cell\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInCell(p, token) {\n    const tn = token.tagID;\n    if (TABLE_VOID_ELEMENTS.has(tn)) {\n        if (p.openElements.hasInTableScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD) || p.openElements.hasInTableScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH)) {\n            p._closeTableCell();\n            startTagInRow(p, token);\n        }\n    } else {\n        startTagInBody(p, token);\n    }\n}\nfunction endTagInCell(p, token) {\n    const tn = token.tagID;\n    switch(tn){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH:\n            {\n                if (p.openElements.hasInTableScope(tn)) {\n                    p.openElements.generateImpliedEndTags();\n                    p.openElements.popUntilTagNamePopped(tn);\n                    p.activeFormattingElements.clearToLastMarker();\n                    p.insertionMode = InsertionMode.IN_ROW;\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR:\n            {\n                if (p.openElements.hasInTableScope(tn)) {\n                    p._closeTableCell();\n                    endTagInRow(p, token);\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                break;\n            }\n        default:\n            {\n                endTagInBody(p, token);\n            }\n    }\n}\n// The \"in select\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelect(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                startTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTION:\n            {\n                if (p.openElements.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTION) {\n                    p.openElements.pop();\n                }\n                p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTGROUP:\n            {\n                if (p.openElements.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTION) {\n                    p.openElements.pop();\n                }\n                if (p.openElements.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTGROUP) {\n                    p.openElements.pop();\n                }\n                p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HR:\n            {\n                if (p.openElements.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTION) {\n                    p.openElements.pop();\n                }\n                if (p.openElements.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTGROUP) {\n                    p.openElements.pop();\n                }\n                p._appendElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                token.ackSelfClosing = true;\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.INPUT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.KEYGEN:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEXTAREA:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SELECT:\n            {\n                if (p.openElements.hasInSelectScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SELECT)) {\n                    p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SELECT);\n                    p._resetInsertionMode();\n                    if (token.tagID !== _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SELECT) {\n                        p._processStartTag(token);\n                    }\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SCRIPT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n            {\n                startTagInHead(p, token);\n                break;\n            }\n        default:\n    }\n}\nfunction endTagInSelect(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTGROUP:\n            {\n                if (p.openElements.stackTop > 0 && p.openElements.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTION && p.openElements.tagIDs[p.openElements.stackTop - 1] === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTGROUP) {\n                    p.openElements.pop();\n                }\n                if (p.openElements.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTGROUP) {\n                    p.openElements.pop();\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTION:\n            {\n                if (p.openElements.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.OPTION) {\n                    p.openElements.pop();\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SELECT:\n            {\n                if (p.openElements.hasInSelectScope(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SELECT)) {\n                    p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SELECT);\n                    p._resetInsertionMode();\n                }\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n            {\n                templateEndTagInHead(p, token);\n                break;\n            }\n        default:\n    }\n}\n// The \"in select in table\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH) {\n        p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SELECT);\n        p._resetInsertionMode();\n        p._processStartTag(token);\n    } else {\n        startTagInSelect(p, token);\n    }\n}\nfunction endTagInSelectInTable(p, token) {\n    const tn = token.tagID;\n    if (tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TABLE || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD || tn === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH) {\n        if (p.openElements.hasInTableScope(tn)) {\n            p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SELECT);\n            p._resetInsertionMode();\n            p.onEndTag(token);\n        }\n    } else {\n        endTagInSelect(p, token);\n    }\n}\n// The \"in template\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInTemplate(p, token) {\n    switch(token.tagID){\n        // First, handle tags that can start without a mode change\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BASE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BASEFONT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BGSOUND:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.LINK:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.META:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOFRAMES:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.SCRIPT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.STYLE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TITLE:\n            {\n                startTagInHead(p, token);\n                break;\n            }\n        // Re-process the token in the appropriate mode\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.CAPTION:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COLGROUP:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TBODY:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TFOOT:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.THEAD:\n            {\n                p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE;\n                p.insertionMode = InsertionMode.IN_TABLE;\n                startTagInTable(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.COL:\n            {\n                p.tmplInsertionModeStack[0] = InsertionMode.IN_COLUMN_GROUP;\n                p.insertionMode = InsertionMode.IN_COLUMN_GROUP;\n                startTagInColumnGroup(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TR:\n            {\n                p.tmplInsertionModeStack[0] = InsertionMode.IN_TABLE_BODY;\n                p.insertionMode = InsertionMode.IN_TABLE_BODY;\n                startTagInTableBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TD:\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TH:\n            {\n                p.tmplInsertionModeStack[0] = InsertionMode.IN_ROW;\n                p.insertionMode = InsertionMode.IN_ROW;\n                startTagInRow(p, token);\n                break;\n            }\n        default:\n            {\n                p.tmplInsertionModeStack[0] = InsertionMode.IN_BODY;\n                p.insertionMode = InsertionMode.IN_BODY;\n                startTagInBody(p, token);\n            }\n    }\n}\nfunction endTagInTemplate(p, token) {\n    if (token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE) {\n        templateEndTagInHead(p, token);\n    }\n}\nfunction eofInTemplate(p, token) {\n    if (p.openElements.tmplCount > 0) {\n        p.openElements.popUntilTagNamePopped(_common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.TEMPLATE);\n        p.activeFormattingElements.clearToLastMarker();\n        p.tmplInsertionModeStack.shift();\n        p._resetInsertionMode();\n        p.onEof(token);\n    } else {\n        stopParsing(p, token);\n    }\n}\n// The \"after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterBody(p, token) {\n    if (token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML) {\n        startTagInBody(p, token);\n    } else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction endTagAfterBody(p, token) {\n    var _a;\n    if (token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML) {\n        if (!p.fragmentContext) {\n            p.insertionMode = InsertionMode.AFTER_AFTER_BODY;\n        }\n        //NOTE: <html> is never popped from the stack, so we need to updated\n        //the end location explicitly.\n        if (p.options.sourceCodeLocationInfo && p.openElements.tagIDs[0] === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML) {\n            p._setEndLocation(p.openElements.items[0], token);\n            // Update the body element, if it doesn't have an end tag\n            const bodyElement = p.openElements.items[1];\n            if (bodyElement && !((_a = p.treeAdapter.getNodeSourceCodeLocation(bodyElement)) === null || _a === void 0 ? void 0 : _a.endTag)) {\n                p._setEndLocation(bodyElement, token);\n            }\n        }\n    } else {\n        tokenAfterBody(p, token);\n    }\n}\nfunction tokenAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"in frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagInFrameset(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                startTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FRAMESET:\n            {\n                p._insertElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FRAME:\n            {\n                p._appendElement(token, _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML);\n                token.ackSelfClosing = true;\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOFRAMES:\n            {\n                startTagInHead(p, token);\n                break;\n            }\n        default:\n    }\n}\nfunction endTagInFrameset(p, token) {\n    if (token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FRAMESET && !p.openElements.isRootHtmlElementCurrent()) {\n        p.openElements.pop();\n        if (!p.fragmentContext && p.openElements.currentTagId !== _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.FRAMESET) {\n            p.insertionMode = InsertionMode.AFTER_FRAMESET;\n        }\n    }\n}\n// The \"after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterFrameset(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                startTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOFRAMES:\n            {\n                startTagInHead(p, token);\n                break;\n            }\n        default:\n    }\n}\nfunction endTagAfterFrameset(p, token) {\n    if (token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML) {\n        p.insertionMode = InsertionMode.AFTER_AFTER_FRAMESET;\n    }\n}\n// The \"after after body\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterBody(p, token) {\n    if (token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML) {\n        startTagInBody(p, token);\n    } else {\n        tokenAfterAfterBody(p, token);\n    }\n}\nfunction tokenAfterAfterBody(p, token) {\n    p.insertionMode = InsertionMode.IN_BODY;\n    modeInBody(p, token);\n}\n// The \"after after frameset\" insertion mode\n//------------------------------------------------------------------\nfunction startTagAfterAfterFrameset(p, token) {\n    switch(token.tagID){\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.HTML:\n            {\n                startTagInBody(p, token);\n                break;\n            }\n        case _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.NOFRAMES:\n            {\n                startTagInHead(p, token);\n                break;\n            }\n        default:\n    }\n}\n// The rules for parsing tokens in foreign content\n//------------------------------------------------------------------\nfunction nullCharacterInForeignContent(p, token) {\n    token.chars = _common_unicode_js__WEBPACK_IMPORTED_MODULE_7__.REPLACEMENT_CHARACTER;\n    p._insertCharacters(token);\n}\nfunction characterInForeignContent(p, token) {\n    p._insertCharacters(token);\n    p.framesetOk = false;\n}\nfunction popUntilHtmlOrIntegrationPoint(p) {\n    while(p.treeAdapter.getNamespaceURI(p.openElements.current) !== _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML && p.openElements.currentTagId !== undefined && !p._isIntegrationPoint(p.openElements.currentTagId, p.openElements.current)){\n        p.openElements.pop();\n    }\n}\nfunction startTagInForeignContent(p, token) {\n    if (_common_foreign_content_js__WEBPACK_IMPORTED_MODULE_5__.causesExit(token)) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._startTagOutsideForeignContent(token);\n    } else {\n        const current = p._getAdjustedCurrentElement();\n        const currentNs = p.treeAdapter.getNamespaceURI(current);\n        if (currentNs === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.MATHML) {\n            _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_5__.adjustTokenMathMLAttrs(token);\n        } else if (currentNs === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.SVG) {\n            _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_5__.adjustTokenSVGTagName(token);\n            _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_5__.adjustTokenSVGAttrs(token);\n        }\n        _common_foreign_content_js__WEBPACK_IMPORTED_MODULE_5__.adjustTokenXMLAttrs(token);\n        if (token.selfClosing) {\n            p._appendElement(token, currentNs);\n        } else {\n            p._insertElement(token, currentNs);\n        }\n        token.ackSelfClosing = true;\n    }\n}\nfunction endTagInForeignContent(p, token) {\n    if (token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.P || token.tagID === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.TAG_ID.BR) {\n        popUntilHtmlOrIntegrationPoint(p);\n        p._endTagOutsideForeignContent(token);\n        return;\n    }\n    for(let i = p.openElements.stackTop; i > 0; i--){\n        const element = p.openElements.items[i];\n        if (p.treeAdapter.getNamespaceURI(element) === _common_html_js__WEBPACK_IMPORTED_MODULE_8__.NS.HTML) {\n            p._endTagOutsideForeignContent(token);\n            break;\n        }\n        const tagName = p.treeAdapter.getTagName(element);\n        if (tagName.toLowerCase() === token.tagName) {\n            //NOTE: update the token tag name for `_setEndLocation`.\n            token.tagName = tagName;\n            p.openElements.shortenToLength(i);\n            break;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/parser/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/parser/open-element-stack.js":
/*!***************************************************************!*\
  !*** ./node_modules/parse5/dist/parser/open-element-stack.js ***!
  \***************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OpenElementStack: () => (/* binding */ OpenElementStack)\n/* harmony export */ });\n/* harmony import */ var _common_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/html.js */ \"(rsc)/./node_modules/parse5/dist/common/html.js\");\n\n//Element utils\nconst IMPLICIT_END_TAG_REQUIRED = new Set([\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.DD,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.DT,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.LI,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.OPTGROUP,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.OPTION,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.P,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.RB,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.RP,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.RT,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.RTC\n]);\nconst IMPLICIT_END_TAG_REQUIRED_THOROUGHLY = new Set([\n    ...IMPLICIT_END_TAG_REQUIRED,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.CAPTION,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.COLGROUP,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TBODY,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TD,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TFOOT,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TH,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.THEAD,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TR\n]);\nconst SCOPING_ELEMENTS_HTML = new Set([\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.APPLET,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.CAPTION,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.HTML,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MARQUEE,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.OBJECT,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TABLE,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TD,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TEMPLATE,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TH\n]);\nconst SCOPING_ELEMENTS_HTML_LIST = new Set([\n    ...SCOPING_ELEMENTS_HTML,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.OL,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.UL\n]);\nconst SCOPING_ELEMENTS_HTML_BUTTON = new Set([\n    ...SCOPING_ELEMENTS_HTML,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.BUTTON\n]);\nconst SCOPING_ELEMENTS_MATHML = new Set([\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.ANNOTATION_XML,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MI,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MN,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MO,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MS,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.MTEXT\n]);\nconst SCOPING_ELEMENTS_SVG = new Set([\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.DESC,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.FOREIGN_OBJECT,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TITLE\n]);\nconst TABLE_ROW_CONTEXT = new Set([\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TR,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TEMPLATE,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.HTML\n]);\nconst TABLE_BODY_CONTEXT = new Set([\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TBODY,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TFOOT,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.THEAD,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TEMPLATE,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.HTML\n]);\nconst TABLE_CONTEXT = new Set([\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TABLE,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TEMPLATE,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.HTML\n]);\nconst TABLE_CELLS = new Set([\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TD,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TH\n]);\n//Stack of open elements\nclass OpenElementStack {\n    get currentTmplContentOrNode() {\n        return this._isInTemplate() ? this.treeAdapter.getTemplateContent(this.current) : this.current;\n    }\n    constructor(document, treeAdapter, handler){\n        this.treeAdapter = treeAdapter;\n        this.handler = handler;\n        this.items = [];\n        this.tagIDs = [];\n        this.stackTop = -1;\n        this.tmplCount = 0;\n        this.currentTagId = _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.UNKNOWN;\n        this.current = document;\n    }\n    //Index of element\n    _indexOf(element) {\n        return this.items.lastIndexOf(element, this.stackTop);\n    }\n    //Update current element\n    _isInTemplate() {\n        return this.currentTagId === _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TEMPLATE && this.treeAdapter.getNamespaceURI(this.current) === _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML;\n    }\n    _updateCurrentElement() {\n        this.current = this.items[this.stackTop];\n        this.currentTagId = this.tagIDs[this.stackTop];\n    }\n    //Mutations\n    push(element, tagID) {\n        this.stackTop++;\n        this.items[this.stackTop] = element;\n        this.current = element;\n        this.tagIDs[this.stackTop] = tagID;\n        this.currentTagId = tagID;\n        if (this._isInTemplate()) {\n            this.tmplCount++;\n        }\n        this.handler.onItemPush(element, tagID, true);\n    }\n    pop() {\n        const popped = this.current;\n        if (this.tmplCount > 0 && this._isInTemplate()) {\n            this.tmplCount--;\n        }\n        this.stackTop--;\n        this._updateCurrentElement();\n        this.handler.onItemPop(popped, true);\n    }\n    replace(oldElement, newElement) {\n        const idx = this._indexOf(oldElement);\n        this.items[idx] = newElement;\n        if (idx === this.stackTop) {\n            this.current = newElement;\n        }\n    }\n    insertAfter(referenceElement, newElement, newElementID) {\n        const insertionIdx = this._indexOf(referenceElement) + 1;\n        this.items.splice(insertionIdx, 0, newElement);\n        this.tagIDs.splice(insertionIdx, 0, newElementID);\n        this.stackTop++;\n        if (insertionIdx === this.stackTop) {\n            this._updateCurrentElement();\n        }\n        if (this.current && this.currentTagId !== undefined) {\n            this.handler.onItemPush(this.current, this.currentTagId, insertionIdx === this.stackTop);\n        }\n    }\n    popUntilTagNamePopped(tagName) {\n        let targetIdx = this.stackTop + 1;\n        do {\n            targetIdx = this.tagIDs.lastIndexOf(tagName, targetIdx - 1);\n        }while (targetIdx > 0 && this.treeAdapter.getNamespaceURI(this.items[targetIdx]) !== _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML);\n        this.shortenToLength(Math.max(targetIdx, 0));\n    }\n    shortenToLength(idx) {\n        while(this.stackTop >= idx){\n            const popped = this.current;\n            if (this.tmplCount > 0 && this._isInTemplate()) {\n                this.tmplCount -= 1;\n            }\n            this.stackTop--;\n            this._updateCurrentElement();\n            this.handler.onItemPop(popped, this.stackTop < idx);\n        }\n    }\n    popUntilElementPopped(element) {\n        const idx = this._indexOf(element);\n        this.shortenToLength(Math.max(idx, 0));\n    }\n    popUntilPopped(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(Math.max(idx, 0));\n    }\n    popUntilNumberedHeaderPopped() {\n        this.popUntilPopped(_common_html_js__WEBPACK_IMPORTED_MODULE_0__.NUMBERED_HEADERS, _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML);\n    }\n    popUntilTableCellPopped() {\n        this.popUntilPopped(TABLE_CELLS, _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML);\n    }\n    popAllUpToHtmlElement() {\n        //NOTE: here we assume that the root <html> element is always first in the open element stack, so\n        //we perform this fast stack clean up.\n        this.tmplCount = 0;\n        this.shortenToLength(1);\n    }\n    _indexOfTagNames(tagNames, namespace) {\n        for(let i = this.stackTop; i >= 0; i--){\n            if (tagNames.has(this.tagIDs[i]) && this.treeAdapter.getNamespaceURI(this.items[i]) === namespace) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    clearBackTo(tagNames, targetNS) {\n        const idx = this._indexOfTagNames(tagNames, targetNS);\n        this.shortenToLength(idx + 1);\n    }\n    clearBackToTableContext() {\n        this.clearBackTo(TABLE_CONTEXT, _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML);\n    }\n    clearBackToTableBodyContext() {\n        this.clearBackTo(TABLE_BODY_CONTEXT, _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML);\n    }\n    clearBackToTableRowContext() {\n        this.clearBackTo(TABLE_ROW_CONTEXT, _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML);\n    }\n    remove(element) {\n        const idx = this._indexOf(element);\n        if (idx >= 0) {\n            if (idx === this.stackTop) {\n                this.pop();\n            } else {\n                this.items.splice(idx, 1);\n                this.tagIDs.splice(idx, 1);\n                this.stackTop--;\n                this._updateCurrentElement();\n                this.handler.onItemPop(element, false);\n            }\n        }\n    }\n    //Search\n    tryPeekProperlyNestedBodyElement() {\n        //Properly nested <body> element (should be second element in stack).\n        return this.stackTop >= 1 && this.tagIDs[1] === _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.BODY ? this.items[1] : null;\n    }\n    contains(element) {\n        return this._indexOf(element) > -1;\n    }\n    getCommonAncestor(element) {\n        const elementIdx = this._indexOf(element) - 1;\n        return elementIdx >= 0 ? this.items[elementIdx] : null;\n    }\n    isRootHtmlElementCurrent() {\n        return this.stackTop === 0 && this.tagIDs[0] === _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.HTML;\n    }\n    //Element in scope\n    hasInDynamicScope(tagName, htmlScope) {\n        for(let i = this.stackTop; i >= 0; i--){\n            const tn = this.tagIDs[i];\n            switch(this.treeAdapter.getNamespaceURI(this.items[i])){\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML:\n                    {\n                        if (tn === tagName) return true;\n                        if (htmlScope.has(tn)) return false;\n                        break;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.SVG:\n                    {\n                        if (SCOPING_ELEMENTS_SVG.has(tn)) return false;\n                        break;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.MATHML:\n                    {\n                        if (SCOPING_ELEMENTS_MATHML.has(tn)) return false;\n                        break;\n                    }\n            }\n        }\n        return true;\n    }\n    hasInScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML);\n    }\n    hasInListItemScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_LIST);\n    }\n    hasInButtonScope(tagName) {\n        return this.hasInDynamicScope(tagName, SCOPING_ELEMENTS_HTML_BUTTON);\n    }\n    hasNumberedHeaderInScope() {\n        for(let i = this.stackTop; i >= 0; i--){\n            const tn = this.tagIDs[i];\n            switch(this.treeAdapter.getNamespaceURI(this.items[i])){\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML:\n                    {\n                        if (_common_html_js__WEBPACK_IMPORTED_MODULE_0__.NUMBERED_HEADERS.has(tn)) return true;\n                        if (SCOPING_ELEMENTS_HTML.has(tn)) return false;\n                        break;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.SVG:\n                    {\n                        if (SCOPING_ELEMENTS_SVG.has(tn)) return false;\n                        break;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.MATHML:\n                    {\n                        if (SCOPING_ELEMENTS_MATHML.has(tn)) return false;\n                        break;\n                    }\n            }\n        }\n        return true;\n    }\n    hasInTableScope(tagName) {\n        for(let i = this.stackTop; i >= 0; i--){\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML) {\n                continue;\n            }\n            switch(this.tagIDs[i]){\n                case tagName:\n                    {\n                        return true;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TABLE:\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.HTML:\n                    {\n                        return false;\n                    }\n            }\n        }\n        return true;\n    }\n    hasTableBodyContextInTableScope() {\n        for(let i = this.stackTop; i >= 0; i--){\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML) {\n                continue;\n            }\n            switch(this.tagIDs[i]){\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TBODY:\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.THEAD:\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TFOOT:\n                    {\n                        return true;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.TABLE:\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.HTML:\n                    {\n                        return false;\n                    }\n            }\n        }\n        return true;\n    }\n    hasInSelectScope(tagName) {\n        for(let i = this.stackTop; i >= 0; i--){\n            if (this.treeAdapter.getNamespaceURI(this.items[i]) !== _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML) {\n                continue;\n            }\n            switch(this.tagIDs[i]){\n                case tagName:\n                    {\n                        return true;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.OPTION:\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_ID.OPTGROUP:\n                    {\n                        break;\n                    }\n                default:\n                    {\n                        return false;\n                    }\n            }\n        }\n        return true;\n    }\n    //Implied end tags\n    generateImpliedEndTags() {\n        while(this.currentTagId !== undefined && IMPLICIT_END_TAG_REQUIRED.has(this.currentTagId)){\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsThoroughly() {\n        while(this.currentTagId !== undefined && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)){\n            this.pop();\n        }\n    }\n    generateImpliedEndTagsWithExclusion(exclusionId) {\n        while(this.currentTagId !== undefined && this.currentTagId !== exclusionId && IMPLICIT_END_TAG_REQUIRED_THOROUGHLY.has(this.currentTagId)){\n            this.pop();\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/parser/open-element-stack.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/serializer/index.js":
/*!******************************************************!*\
  !*** ./node_modules/parse5/dist/serializer/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   serialize: () => (/* binding */ serialize),\n/* harmony export */   serializeOuter: () => (/* binding */ serializeOuter)\n/* harmony export */ });\n/* harmony import */ var _common_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/html.js */ \"(rsc)/./node_modules/parse5/dist/common/html.js\");\n/* harmony import */ var entities_escape__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! entities/escape */ \"(rsc)/./node_modules/parse5/node_modules/entities/dist/esm/escape.js\");\n/* harmony import */ var _tree_adapters_default_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../tree-adapters/default.js */ \"(rsc)/./node_modules/parse5/dist/tree-adapters/default.js\");\n\n\n\n// Sets\nconst VOID_ELEMENTS = new Set([\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.AREA,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.BASE,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.BASEFONT,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.BGSOUND,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.BR,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.COL,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.EMBED,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.FRAME,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.HR,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.IMG,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.INPUT,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.KEYGEN,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.LINK,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.META,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.PARAM,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.SOURCE,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.TRACK,\n    _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.WBR\n]);\nfunction isVoidElement(node, options) {\n    return options.treeAdapter.isElementNode(node) && options.treeAdapter.getNamespaceURI(node) === _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML && VOID_ELEMENTS.has(options.treeAdapter.getTagName(node));\n}\nconst defaultOpts = {\n    treeAdapter: _tree_adapters_default_js__WEBPACK_IMPORTED_MODULE_2__.defaultTreeAdapter,\n    scriptingEnabled: true\n};\n/**\n * Serializes an AST node to an HTML string.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parse('<!DOCTYPE html><html><head></head><body>Hi there!</body></html>');\n *\n * // Serializes a document.\n * const html = parse5.serialize(document);\n *\n * // Serializes the <html> element content.\n * const str = parse5.serialize(document.childNodes[1]);\n *\n * console.log(str); //> '<head></head><body>Hi there!</body>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */ function serialize(node, options) {\n    const opts = {\n        ...defaultOpts,\n        ...options\n    };\n    if (isVoidElement(node, opts)) {\n        return \"\";\n    }\n    return serializeChildNodes(node, opts);\n}\n/**\n * Serializes an AST element node to an HTML string, including the element node.\n *\n * @example\n *\n * ```js\n * const parse5 = require('parse5');\n *\n * const document = parse5.parseFragment('<div>Hello, <b>world</b>!</div>');\n *\n * // Serializes the <div> element.\n * const str = parse5.serializeOuter(document.childNodes[0]);\n *\n * console.log(str); //> '<div>Hello, <b>world</b>!</div>'\n * ```\n *\n * @param node Node to serialize.\n * @param options Serialization options.\n */ function serializeOuter(node, options) {\n    const opts = {\n        ...defaultOpts,\n        ...options\n    };\n    return serializeNode(node, opts);\n}\nfunction serializeChildNodes(parentNode, options) {\n    let html = \"\";\n    // Get container of the child nodes\n    const container = options.treeAdapter.isElementNode(parentNode) && options.treeAdapter.getTagName(parentNode) === _common_html_js__WEBPACK_IMPORTED_MODULE_0__.TAG_NAMES.TEMPLATE && options.treeAdapter.getNamespaceURI(parentNode) === _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML ? options.treeAdapter.getTemplateContent(parentNode) : parentNode;\n    const childNodes = options.treeAdapter.getChildNodes(container);\n    if (childNodes) {\n        for (const currentNode of childNodes){\n            html += serializeNode(currentNode, options);\n        }\n    }\n    return html;\n}\nfunction serializeNode(node, options) {\n    if (options.treeAdapter.isElementNode(node)) {\n        return serializeElement(node, options);\n    }\n    if (options.treeAdapter.isTextNode(node)) {\n        return serializeTextNode(node, options);\n    }\n    if (options.treeAdapter.isCommentNode(node)) {\n        return serializeCommentNode(node, options);\n    }\n    if (options.treeAdapter.isDocumentTypeNode(node)) {\n        return serializeDocumentTypeNode(node, options);\n    }\n    // Return an empty string for unknown nodes\n    return \"\";\n}\nfunction serializeElement(node, options) {\n    const tn = options.treeAdapter.getTagName(node);\n    return `<${tn}${serializeAttributes(node, options)}>${isVoidElement(node, options) ? \"\" : `${serializeChildNodes(node, options)}</${tn}>`}`;\n}\nfunction serializeAttributes(node, { treeAdapter }) {\n    let html = \"\";\n    for (const attr of treeAdapter.getAttrList(node)){\n        html += \" \";\n        if (attr.namespace) {\n            switch(attr.namespace){\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XML:\n                    {\n                        html += `xml:${attr.name}`;\n                        break;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XMLNS:\n                    {\n                        if (attr.name !== \"xmlns\") {\n                            html += \"xmlns:\";\n                        }\n                        html += attr.name;\n                        break;\n                    }\n                case _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.XLINK:\n                    {\n                        html += `xlink:${attr.name}`;\n                        break;\n                    }\n                default:\n                    {\n                        html += `${attr.prefix}:${attr.name}`;\n                    }\n            }\n        } else {\n            html += attr.name;\n        }\n        html += `=\"${(0,entities_escape__WEBPACK_IMPORTED_MODULE_1__.escapeAttribute)(attr.value)}\"`;\n    }\n    return html;\n}\nfunction serializeTextNode(node, options) {\n    const { treeAdapter } = options;\n    const content = treeAdapter.getTextNodeContent(node);\n    const parent = treeAdapter.getParentNode(node);\n    const parentTn = parent && treeAdapter.isElementNode(parent) && treeAdapter.getTagName(parent);\n    return parentTn && treeAdapter.getNamespaceURI(parent) === _common_html_js__WEBPACK_IMPORTED_MODULE_0__.NS.HTML && (0,_common_html_js__WEBPACK_IMPORTED_MODULE_0__.hasUnescapedText)(parentTn, options.scriptingEnabled) ? content : (0,entities_escape__WEBPACK_IMPORTED_MODULE_1__.escapeText)(content);\n}\nfunction serializeCommentNode(node, { treeAdapter }) {\n    return `<!--${treeAdapter.getCommentNodeContent(node)}-->`;\n}\nfunction serializeDocumentTypeNode(node, { treeAdapter }) {\n    return `<!DOCTYPE ${treeAdapter.getDocumentTypeNodeName(node)}>`;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/serializer/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/tokenizer/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/parse5/dist/tokenizer/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Tokenizer: () => (/* binding */ Tokenizer),\n/* harmony export */   TokenizerMode: () => (/* binding */ TokenizerMode)\n/* harmony export */ });\n/* harmony import */ var _preprocessor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./preprocessor.js */ \"(rsc)/./node_modules/parse5/dist/tokenizer/preprocessor.js\");\n/* harmony import */ var _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/unicode.js */ \"(rsc)/./node_modules/parse5/dist/common/unicode.js\");\n/* harmony import */ var _common_token_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/token.js */ \"(rsc)/./node_modules/parse5/dist/common/token.js\");\n/* harmony import */ var entities_decode__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! entities/decode */ \"(rsc)/./node_modules/parse5/node_modules/entities/dist/esm/decode.js\");\n/* harmony import */ var _common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/error-codes.js */ \"(rsc)/./node_modules/parse5/dist/common/error-codes.js\");\n/* harmony import */ var _common_html_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/html.js */ \"(rsc)/./node_modules/parse5/dist/common/html.js\");\n\n\n\n\n\n\n//States\nvar State;\n(function(State) {\n    State[State[\"DATA\"] = 0] = \"DATA\";\n    State[State[\"RCDATA\"] = 1] = \"RCDATA\";\n    State[State[\"RAWTEXT\"] = 2] = \"RAWTEXT\";\n    State[State[\"SCRIPT_DATA\"] = 3] = \"SCRIPT_DATA\";\n    State[State[\"PLAINTEXT\"] = 4] = \"PLAINTEXT\";\n    State[State[\"TAG_OPEN\"] = 5] = \"TAG_OPEN\";\n    State[State[\"END_TAG_OPEN\"] = 6] = \"END_TAG_OPEN\";\n    State[State[\"TAG_NAME\"] = 7] = \"TAG_NAME\";\n    State[State[\"RCDATA_LESS_THAN_SIGN\"] = 8] = \"RCDATA_LESS_THAN_SIGN\";\n    State[State[\"RCDATA_END_TAG_OPEN\"] = 9] = \"RCDATA_END_TAG_OPEN\";\n    State[State[\"RCDATA_END_TAG_NAME\"] = 10] = \"RCDATA_END_TAG_NAME\";\n    State[State[\"RAWTEXT_LESS_THAN_SIGN\"] = 11] = \"RAWTEXT_LESS_THAN_SIGN\";\n    State[State[\"RAWTEXT_END_TAG_OPEN\"] = 12] = \"RAWTEXT_END_TAG_OPEN\";\n    State[State[\"RAWTEXT_END_TAG_NAME\"] = 13] = \"RAWTEXT_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_LESS_THAN_SIGN\"] = 14] = \"SCRIPT_DATA_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_END_TAG_OPEN\"] = 15] = \"SCRIPT_DATA_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_END_TAG_NAME\"] = 16] = \"SCRIPT_DATA_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START\"] = 17] = \"SCRIPT_DATA_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_ESCAPE_START_DASH\"] = 18] = \"SCRIPT_DATA_ESCAPE_START_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED\"] = 19] = \"SCRIPT_DATA_ESCAPED\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH\"] = 20] = \"SCRIPT_DATA_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_DASH_DASH\"] = 21] = \"SCRIPT_DATA_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\"] = 22] = \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\"] = 23] = \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\";\n    State[State[\"SCRIPT_DATA_ESCAPED_END_TAG_NAME\"] = 24] = \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_START\"] = 25] = \"SCRIPT_DATA_DOUBLE_ESCAPE_START\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED\"] = 26] = \"SCRIPT_DATA_DOUBLE_ESCAPED\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\"] = 27] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\"] = 28] = \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\"] = 29] = \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\";\n    State[State[\"SCRIPT_DATA_DOUBLE_ESCAPE_END\"] = 30] = \"SCRIPT_DATA_DOUBLE_ESCAPE_END\";\n    State[State[\"BEFORE_ATTRIBUTE_NAME\"] = 31] = \"BEFORE_ATTRIBUTE_NAME\";\n    State[State[\"ATTRIBUTE_NAME\"] = 32] = \"ATTRIBUTE_NAME\";\n    State[State[\"AFTER_ATTRIBUTE_NAME\"] = 33] = \"AFTER_ATTRIBUTE_NAME\";\n    State[State[\"BEFORE_ATTRIBUTE_VALUE\"] = 34] = \"BEFORE_ATTRIBUTE_VALUE\";\n    State[State[\"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"] = 35] = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_SINGLE_QUOTED\"] = 36] = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\";\n    State[State[\"ATTRIBUTE_VALUE_UNQUOTED\"] = 37] = \"ATTRIBUTE_VALUE_UNQUOTED\";\n    State[State[\"AFTER_ATTRIBUTE_VALUE_QUOTED\"] = 38] = \"AFTER_ATTRIBUTE_VALUE_QUOTED\";\n    State[State[\"SELF_CLOSING_START_TAG\"] = 39] = \"SELF_CLOSING_START_TAG\";\n    State[State[\"BOGUS_COMMENT\"] = 40] = \"BOGUS_COMMENT\";\n    State[State[\"MARKUP_DECLARATION_OPEN\"] = 41] = \"MARKUP_DECLARATION_OPEN\";\n    State[State[\"COMMENT_START\"] = 42] = \"COMMENT_START\";\n    State[State[\"COMMENT_START_DASH\"] = 43] = \"COMMENT_START_DASH\";\n    State[State[\"COMMENT\"] = 44] = \"COMMENT\";\n    State[State[\"COMMENT_LESS_THAN_SIGN\"] = 45] = \"COMMENT_LESS_THAN_SIGN\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG\"] = 46] = \"COMMENT_LESS_THAN_SIGN_BANG\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH\"] = 47] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH\";\n    State[State[\"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"] = 48] = \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\";\n    State[State[\"COMMENT_END_DASH\"] = 49] = \"COMMENT_END_DASH\";\n    State[State[\"COMMENT_END\"] = 50] = \"COMMENT_END\";\n    State[State[\"COMMENT_END_BANG\"] = 51] = \"COMMENT_END_BANG\";\n    State[State[\"DOCTYPE\"] = 52] = \"DOCTYPE\";\n    State[State[\"BEFORE_DOCTYPE_NAME\"] = 53] = \"BEFORE_DOCTYPE_NAME\";\n    State[State[\"DOCTYPE_NAME\"] = 54] = \"DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_NAME\"] = 55] = \"AFTER_DOCTYPE_NAME\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_KEYWORD\"] = 56] = \"AFTER_DOCTYPE_PUBLIC_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\"] = 57] = \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\"] = 58] = \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\"] = 59] = \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\"] = 60] = \"AFTER_DOCTYPE_PUBLIC_IDENTIFIER\";\n    State[State[\"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\"] = 61] = \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_KEYWORD\"] = 62] = \"AFTER_DOCTYPE_SYSTEM_KEYWORD\";\n    State[State[\"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\"] = 63] = \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\"] = 64] = \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\";\n    State[State[\"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\"] = 65] = \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\";\n    State[State[\"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\"] = 66] = \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\";\n    State[State[\"BOGUS_DOCTYPE\"] = 67] = \"BOGUS_DOCTYPE\";\n    State[State[\"CDATA_SECTION\"] = 68] = \"CDATA_SECTION\";\n    State[State[\"CDATA_SECTION_BRACKET\"] = 69] = \"CDATA_SECTION_BRACKET\";\n    State[State[\"CDATA_SECTION_END\"] = 70] = \"CDATA_SECTION_END\";\n    State[State[\"CHARACTER_REFERENCE\"] = 71] = \"CHARACTER_REFERENCE\";\n    State[State[\"AMBIGUOUS_AMPERSAND\"] = 72] = \"AMBIGUOUS_AMPERSAND\";\n})(State || (State = {}));\n//Tokenizer initial states for different modes\nconst TokenizerMode = {\n    DATA: State.DATA,\n    RCDATA: State.RCDATA,\n    RAWTEXT: State.RAWTEXT,\n    SCRIPT_DATA: State.SCRIPT_DATA,\n    PLAINTEXT: State.PLAINTEXT,\n    CDATA_SECTION: State.CDATA_SECTION\n};\n//Utils\n//OPTIMIZATION: these utility functions should not be moved out of this module. V8 Crankshaft will not inline\n//this functions if they will be situated in another module due to context switch.\n//Always perform inlining check before modifying this functions ('node --trace-inlining').\nfunction isAsciiDigit(cp) {\n    return cp >= _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.DIGIT_0 && cp <= _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.DIGIT_9;\n}\nfunction isAsciiUpper(cp) {\n    return cp >= _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LATIN_CAPITAL_A && cp <= _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LATIN_CAPITAL_Z;\n}\nfunction isAsciiLower(cp) {\n    return cp >= _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LATIN_SMALL_A && cp <= _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LATIN_SMALL_Z;\n}\nfunction isAsciiLetter(cp) {\n    return isAsciiLower(cp) || isAsciiUpper(cp);\n}\nfunction isAsciiAlphaNumeric(cp) {\n    return isAsciiLetter(cp) || isAsciiDigit(cp);\n}\nfunction toAsciiLower(cp) {\n    return cp + 32;\n}\nfunction isWhitespace(cp) {\n    return cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE || cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED || cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION || cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED;\n}\nfunction isScriptDataDoubleEscapeSequenceEnd(cp) {\n    return isWhitespace(cp) || cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS || cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN;\n}\nfunction getErrorForNumericCharacterReference(code) {\n    if (code === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL) {\n        return _common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.nullCharacterReference;\n    } else if (code > 1114111) {\n        return _common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.characterReferenceOutsideUnicodeRange;\n    } else if ((0,_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.isSurrogate)(code)) {\n        return _common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.surrogateCharacterReference;\n    } else if ((0,_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.isUndefinedCodePoint)(code)) {\n        return _common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.noncharacterCharacterReference;\n    } else if ((0,_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.isControlCodePoint)(code) || code === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.CARRIAGE_RETURN) {\n        return _common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.controlCharacterReference;\n    }\n    return null;\n}\n//Tokenizer\nclass Tokenizer {\n    constructor(options, handler){\n        this.options = options;\n        this.handler = handler;\n        this.paused = false;\n        /** Ensures that the parsing loop isn't run multiple times at once. */ this.inLoop = false;\n        /**\n         * Indicates that the current adjusted node exists, is not an element in the HTML namespace,\n         * and that it is not an integration point for either MathML or HTML.\n         *\n         * @see {@link https://html.spec.whatwg.org/multipage/parsing.html#tree-construction}\n         */ this.inForeignNode = false;\n        this.lastStartTagName = \"\";\n        this.active = false;\n        this.state = State.DATA;\n        this.returnState = State.DATA;\n        this.entityStartPos = 0;\n        this.consumedAfterSnapshot = -1;\n        this.currentCharacterToken = null;\n        this.currentToken = null;\n        this.currentAttr = {\n            name: \"\",\n            value: \"\"\n        };\n        this.preprocessor = new _preprocessor_js__WEBPACK_IMPORTED_MODULE_0__.Preprocessor(handler);\n        this.currentLocation = this.getCurrentLocation(-1);\n        this.entityDecoder = new entities_decode__WEBPACK_IMPORTED_MODULE_3__.EntityDecoder(entities_decode__WEBPACK_IMPORTED_MODULE_3__.htmlDecodeTree, (cp, consumed)=>{\n            // Note: Set `pos` _before_ flushing, as flushing might drop\n            // the current chunk and invalidate `entityStartPos`.\n            this.preprocessor.pos = this.entityStartPos + consumed - 1;\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        }, handler.onParseError ? {\n            missingSemicolonAfterCharacterReference: ()=>{\n                this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingSemicolonAfterCharacterReference, 1);\n            },\n            absenceOfDigitsInNumericCharacterReference: (consumed)=>{\n                this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.absenceOfDigitsInNumericCharacterReference, this.entityStartPos - this.preprocessor.pos + consumed);\n            },\n            validateNumericCharacterReference: (code)=>{\n                const error = getErrorForNumericCharacterReference(code);\n                if (error) this._err(error, 1);\n            }\n        } : undefined);\n    }\n    //Errors\n    _err(code, cpOffset = 0) {\n        var _a, _b;\n        (_b = (_a = this.handler).onParseError) === null || _b === void 0 ? void 0 : _b.call(_a, this.preprocessor.getError(code, cpOffset));\n    }\n    // NOTE: `offset` may never run across line boundaries.\n    getCurrentLocation(offset) {\n        if (!this.options.sourceCodeLocationInfo) {\n            return null;\n        }\n        return {\n            startLine: this.preprocessor.line,\n            startCol: this.preprocessor.col - offset,\n            startOffset: this.preprocessor.offset - offset,\n            endLine: -1,\n            endCol: -1,\n            endOffset: -1\n        };\n    }\n    _runParsingLoop() {\n        if (this.inLoop) return;\n        this.inLoop = true;\n        while(this.active && !this.paused){\n            this.consumedAfterSnapshot = 0;\n            const cp = this._consume();\n            if (!this._ensureHibernation()) {\n                this._callState(cp);\n            }\n        }\n        this.inLoop = false;\n    }\n    //API\n    pause() {\n        this.paused = true;\n    }\n    resume(writeCallback) {\n        if (!this.paused) {\n            throw new Error(\"Parser was already resumed\");\n        }\n        this.paused = false;\n        // Necessary for synchronous resume.\n        if (this.inLoop) return;\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    write(chunk, isLastChunk, writeCallback) {\n        this.active = true;\n        this.preprocessor.write(chunk, isLastChunk);\n        this._runParsingLoop();\n        if (!this.paused) {\n            writeCallback === null || writeCallback === void 0 ? void 0 : writeCallback();\n        }\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.active = true;\n        this.preprocessor.insertHtmlAtCurrentPos(chunk);\n        this._runParsingLoop();\n    }\n    //Hibernation\n    _ensureHibernation() {\n        if (this.preprocessor.endOfChunkHit) {\n            this.preprocessor.retreat(this.consumedAfterSnapshot);\n            this.consumedAfterSnapshot = 0;\n            this.active = false;\n            return true;\n        }\n        return false;\n    }\n    //Consumption\n    _consume() {\n        this.consumedAfterSnapshot++;\n        return this.preprocessor.advance();\n    }\n    _advanceBy(count) {\n        this.consumedAfterSnapshot += count;\n        for(let i = 0; i < count; i++){\n            this.preprocessor.advance();\n        }\n    }\n    _consumeSequenceIfMatch(pattern, caseSensitive) {\n        if (this.preprocessor.startsWith(pattern, caseSensitive)) {\n            // We will already have consumed one character before calling this method.\n            this._advanceBy(pattern.length - 1);\n            return true;\n        }\n        return false;\n    }\n    //Token creation\n    _createStartTagToken() {\n        this.currentToken = {\n            type: _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.START_TAG,\n            tagName: \"\",\n            tagID: _common_html_js__WEBPACK_IMPORTED_MODULE_5__.TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(1)\n        };\n    }\n    _createEndTagToken() {\n        this.currentToken = {\n            type: _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.END_TAG,\n            tagName: \"\",\n            tagID: _common_html_js__WEBPACK_IMPORTED_MODULE_5__.TAG_ID.UNKNOWN,\n            selfClosing: false,\n            ackSelfClosing: false,\n            attrs: [],\n            location: this.getCurrentLocation(2)\n        };\n    }\n    _createCommentToken(offset) {\n        this.currentToken = {\n            type: _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.COMMENT,\n            data: \"\",\n            location: this.getCurrentLocation(offset)\n        };\n    }\n    _createDoctypeToken(initialName) {\n        this.currentToken = {\n            type: _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.DOCTYPE,\n            name: initialName,\n            forceQuirks: false,\n            publicId: null,\n            systemId: null,\n            location: this.currentLocation\n        };\n    }\n    _createCharacterToken(type, chars) {\n        this.currentCharacterToken = {\n            type,\n            chars,\n            location: this.currentLocation\n        };\n    }\n    //Tag attributes\n    _createAttr(attrNameFirstCh) {\n        this.currentAttr = {\n            name: attrNameFirstCh,\n            value: \"\"\n        };\n        this.currentLocation = this.getCurrentLocation(0);\n    }\n    _leaveAttrName() {\n        var _a;\n        var _b;\n        const token = this.currentToken;\n        if ((0,_common_token_js__WEBPACK_IMPORTED_MODULE_2__.getTokenAttr)(token, this.currentAttr.name) === null) {\n            token.attrs.push(this.currentAttr);\n            if (token.location && this.currentLocation) {\n                const attrLocations = (_a = (_b = token.location).attrs) !== null && _a !== void 0 ? _a : _b.attrs = Object.create(null);\n                attrLocations[this.currentAttr.name] = this.currentLocation;\n                // Set end location\n                this._leaveAttrValue();\n            }\n        } else {\n            this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.duplicateAttribute);\n        }\n    }\n    _leaveAttrValue() {\n        if (this.currentLocation) {\n            this.currentLocation.endLine = this.preprocessor.line;\n            this.currentLocation.endCol = this.preprocessor.col;\n            this.currentLocation.endOffset = this.preprocessor.offset;\n        }\n    }\n    //Token emission\n    prepareToken(ct) {\n        this._emitCurrentCharacterToken(ct.location);\n        this.currentToken = null;\n        if (ct.location) {\n            ct.location.endLine = this.preprocessor.line;\n            ct.location.endCol = this.preprocessor.col + 1;\n            ct.location.endOffset = this.preprocessor.offset + 1;\n        }\n        this.currentLocation = this.getCurrentLocation(-1);\n    }\n    emitCurrentTagToken() {\n        const ct = this.currentToken;\n        this.prepareToken(ct);\n        ct.tagID = (0,_common_html_js__WEBPACK_IMPORTED_MODULE_5__.getTagID)(ct.tagName);\n        if (ct.type === _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.START_TAG) {\n            this.lastStartTagName = ct.tagName;\n            this.handler.onStartTag(ct);\n        } else {\n            if (ct.attrs.length > 0) {\n                this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.endTagWithAttributes);\n            }\n            if (ct.selfClosing) {\n                this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.endTagWithTrailingSolidus);\n            }\n            this.handler.onEndTag(ct);\n        }\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentComment(ct) {\n        this.prepareToken(ct);\n        this.handler.onComment(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    emitCurrentDoctype(ct) {\n        this.prepareToken(ct);\n        this.handler.onDoctype(ct);\n        this.preprocessor.dropParsedChunk();\n    }\n    _emitCurrentCharacterToken(nextLocation) {\n        if (this.currentCharacterToken) {\n            //NOTE: if we have a pending character token, make it's end location equal to the\n            //current token's start location.\n            if (nextLocation && this.currentCharacterToken.location) {\n                this.currentCharacterToken.location.endLine = nextLocation.startLine;\n                this.currentCharacterToken.location.endCol = nextLocation.startCol;\n                this.currentCharacterToken.location.endOffset = nextLocation.startOffset;\n            }\n            switch(this.currentCharacterToken.type){\n                case _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.CHARACTER:\n                    {\n                        this.handler.onCharacter(this.currentCharacterToken);\n                        break;\n                    }\n                case _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.NULL_CHARACTER:\n                    {\n                        this.handler.onNullCharacter(this.currentCharacterToken);\n                        break;\n                    }\n                case _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.WHITESPACE_CHARACTER:\n                    {\n                        this.handler.onWhitespaceCharacter(this.currentCharacterToken);\n                        break;\n                    }\n            }\n            this.currentCharacterToken = null;\n        }\n    }\n    _emitEOFToken() {\n        const location = this.getCurrentLocation(0);\n        if (location) {\n            location.endLine = location.startLine;\n            location.endCol = location.startCol;\n            location.endOffset = location.startOffset;\n        }\n        this._emitCurrentCharacterToken(location);\n        this.handler.onEof({\n            type: _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.EOF,\n            location\n        });\n        this.active = false;\n    }\n    //Characters emission\n    //OPTIMIZATION: The specification uses only one type of character token (one token per character).\n    //This causes a huge memory overhead and a lot of unnecessary parser loops. parse5 uses 3 groups of characters.\n    //If we have a sequence of characters that belong to the same group, the parser can process it\n    //as a single solid character token.\n    //So, there are 3 types of character tokens in parse5:\n    //1)TokenType.NULL_CHARACTER - \\u0000-character sequences (e.g. '\\u0000\\u0000\\u0000')\n    //2)TokenType.WHITESPACE_CHARACTER - any whitespace/new-line character sequences (e.g. '\\n  \\r\\t   \\f')\n    //3)TokenType.CHARACTER - any character sequence which don't belong to groups 1 and 2 (e.g. 'abcdef1234@@#$%^')\n    _appendCharToCurrentCharacterToken(type, ch) {\n        if (this.currentCharacterToken) {\n            if (this.currentCharacterToken.type === type) {\n                this.currentCharacterToken.chars += ch;\n                return;\n            } else {\n                this.currentLocation = this.getCurrentLocation(0);\n                this._emitCurrentCharacterToken(this.currentLocation);\n                this.preprocessor.dropParsedChunk();\n            }\n        }\n        this._createCharacterToken(type, ch);\n    }\n    _emitCodePoint(cp) {\n        const type = isWhitespace(cp) ? _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.WHITESPACE_CHARACTER : cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL ? _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.NULL_CHARACTER : _common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.CHARACTER;\n        this._appendCharToCurrentCharacterToken(type, String.fromCodePoint(cp));\n    }\n    //NOTE: used when we emit characters explicitly.\n    //This is always for non-whitespace and non-null characters, which allows us to avoid additional checks.\n    _emitChars(ch) {\n        this._appendCharToCurrentCharacterToken(_common_token_js__WEBPACK_IMPORTED_MODULE_2__.TokenType.CHARACTER, ch);\n    }\n    // Character reference helpers\n    _startCharacterReference() {\n        this.returnState = this.state;\n        this.state = State.CHARACTER_REFERENCE;\n        this.entityStartPos = this.preprocessor.pos;\n        this.entityDecoder.startEntity(this._isCharacterReferenceInAttribute() ? entities_decode__WEBPACK_IMPORTED_MODULE_3__.DecodingMode.Attribute : entities_decode__WEBPACK_IMPORTED_MODULE_3__.DecodingMode.Legacy);\n    }\n    _isCharacterReferenceInAttribute() {\n        return this.returnState === State.ATTRIBUTE_VALUE_DOUBLE_QUOTED || this.returnState === State.ATTRIBUTE_VALUE_SINGLE_QUOTED || this.returnState === State.ATTRIBUTE_VALUE_UNQUOTED;\n    }\n    _flushCodePointConsumedAsCharacterReference(cp) {\n        if (this._isCharacterReferenceInAttribute()) {\n            this.currentAttr.value += String.fromCodePoint(cp);\n        } else {\n            this._emitCodePoint(cp);\n        }\n    }\n    // Calling states this way turns out to be much faster than any other approach.\n    _callState(cp) {\n        switch(this.state){\n            case State.DATA:\n                {\n                    this._stateData(cp);\n                    break;\n                }\n            case State.RCDATA:\n                {\n                    this._stateRcdata(cp);\n                    break;\n                }\n            case State.RAWTEXT:\n                {\n                    this._stateRawtext(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA:\n                {\n                    this._stateScriptData(cp);\n                    break;\n                }\n            case State.PLAINTEXT:\n                {\n                    this._statePlaintext(cp);\n                    break;\n                }\n            case State.TAG_OPEN:\n                {\n                    this._stateTagOpen(cp);\n                    break;\n                }\n            case State.END_TAG_OPEN:\n                {\n                    this._stateEndTagOpen(cp);\n                    break;\n                }\n            case State.TAG_NAME:\n                {\n                    this._stateTagName(cp);\n                    break;\n                }\n            case State.RCDATA_LESS_THAN_SIGN:\n                {\n                    this._stateRcdataLessThanSign(cp);\n                    break;\n                }\n            case State.RCDATA_END_TAG_OPEN:\n                {\n                    this._stateRcdataEndTagOpen(cp);\n                    break;\n                }\n            case State.RCDATA_END_TAG_NAME:\n                {\n                    this._stateRcdataEndTagName(cp);\n                    break;\n                }\n            case State.RAWTEXT_LESS_THAN_SIGN:\n                {\n                    this._stateRawtextLessThanSign(cp);\n                    break;\n                }\n            case State.RAWTEXT_END_TAG_OPEN:\n                {\n                    this._stateRawtextEndTagOpen(cp);\n                    break;\n                }\n            case State.RAWTEXT_END_TAG_NAME:\n                {\n                    this._stateRawtextEndTagName(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_LESS_THAN_SIGN:\n                {\n                    this._stateScriptDataLessThanSign(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_END_TAG_OPEN:\n                {\n                    this._stateScriptDataEndTagOpen(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_END_TAG_NAME:\n                {\n                    this._stateScriptDataEndTagName(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_ESCAPE_START:\n                {\n                    this._stateScriptDataEscapeStart(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_ESCAPE_START_DASH:\n                {\n                    this._stateScriptDataEscapeStartDash(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_ESCAPED:\n                {\n                    this._stateScriptDataEscaped(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_ESCAPED_DASH:\n                {\n                    this._stateScriptDataEscapedDash(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_ESCAPED_DASH_DASH:\n                {\n                    this._stateScriptDataEscapedDashDash(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN:\n                {\n                    this._stateScriptDataEscapedLessThanSign(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN:\n                {\n                    this._stateScriptDataEscapedEndTagOpen(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_ESCAPED_END_TAG_NAME:\n                {\n                    this._stateScriptDataEscapedEndTagName(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_START:\n                {\n                    this._stateScriptDataDoubleEscapeStart(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED:\n                {\n                    this._stateScriptDataDoubleEscaped(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH:\n                {\n                    this._stateScriptDataDoubleEscapedDash(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH:\n                {\n                    this._stateScriptDataDoubleEscapedDashDash(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN:\n                {\n                    this._stateScriptDataDoubleEscapedLessThanSign(cp);\n                    break;\n                }\n            case State.SCRIPT_DATA_DOUBLE_ESCAPE_END:\n                {\n                    this._stateScriptDataDoubleEscapeEnd(cp);\n                    break;\n                }\n            case State.BEFORE_ATTRIBUTE_NAME:\n                {\n                    this._stateBeforeAttributeName(cp);\n                    break;\n                }\n            case State.ATTRIBUTE_NAME:\n                {\n                    this._stateAttributeName(cp);\n                    break;\n                }\n            case State.AFTER_ATTRIBUTE_NAME:\n                {\n                    this._stateAfterAttributeName(cp);\n                    break;\n                }\n            case State.BEFORE_ATTRIBUTE_VALUE:\n                {\n                    this._stateBeforeAttributeValue(cp);\n                    break;\n                }\n            case State.ATTRIBUTE_VALUE_DOUBLE_QUOTED:\n                {\n                    this._stateAttributeValueDoubleQuoted(cp);\n                    break;\n                }\n            case State.ATTRIBUTE_VALUE_SINGLE_QUOTED:\n                {\n                    this._stateAttributeValueSingleQuoted(cp);\n                    break;\n                }\n            case State.ATTRIBUTE_VALUE_UNQUOTED:\n                {\n                    this._stateAttributeValueUnquoted(cp);\n                    break;\n                }\n            case State.AFTER_ATTRIBUTE_VALUE_QUOTED:\n                {\n                    this._stateAfterAttributeValueQuoted(cp);\n                    break;\n                }\n            case State.SELF_CLOSING_START_TAG:\n                {\n                    this._stateSelfClosingStartTag(cp);\n                    break;\n                }\n            case State.BOGUS_COMMENT:\n                {\n                    this._stateBogusComment(cp);\n                    break;\n                }\n            case State.MARKUP_DECLARATION_OPEN:\n                {\n                    this._stateMarkupDeclarationOpen(cp);\n                    break;\n                }\n            case State.COMMENT_START:\n                {\n                    this._stateCommentStart(cp);\n                    break;\n                }\n            case State.COMMENT_START_DASH:\n                {\n                    this._stateCommentStartDash(cp);\n                    break;\n                }\n            case State.COMMENT:\n                {\n                    this._stateComment(cp);\n                    break;\n                }\n            case State.COMMENT_LESS_THAN_SIGN:\n                {\n                    this._stateCommentLessThanSign(cp);\n                    break;\n                }\n            case State.COMMENT_LESS_THAN_SIGN_BANG:\n                {\n                    this._stateCommentLessThanSignBang(cp);\n                    break;\n                }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH:\n                {\n                    this._stateCommentLessThanSignBangDash(cp);\n                    break;\n                }\n            case State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH:\n                {\n                    this._stateCommentLessThanSignBangDashDash(cp);\n                    break;\n                }\n            case State.COMMENT_END_DASH:\n                {\n                    this._stateCommentEndDash(cp);\n                    break;\n                }\n            case State.COMMENT_END:\n                {\n                    this._stateCommentEnd(cp);\n                    break;\n                }\n            case State.COMMENT_END_BANG:\n                {\n                    this._stateCommentEndBang(cp);\n                    break;\n                }\n            case State.DOCTYPE:\n                {\n                    this._stateDoctype(cp);\n                    break;\n                }\n            case State.BEFORE_DOCTYPE_NAME:\n                {\n                    this._stateBeforeDoctypeName(cp);\n                    break;\n                }\n            case State.DOCTYPE_NAME:\n                {\n                    this._stateDoctypeName(cp);\n                    break;\n                }\n            case State.AFTER_DOCTYPE_NAME:\n                {\n                    this._stateAfterDoctypeName(cp);\n                    break;\n                }\n            case State.AFTER_DOCTYPE_PUBLIC_KEYWORD:\n                {\n                    this._stateAfterDoctypePublicKeyword(cp);\n                    break;\n                }\n            case State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER:\n                {\n                    this._stateBeforeDoctypePublicIdentifier(cp);\n                    break;\n                }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED:\n                {\n                    this._stateDoctypePublicIdentifierDoubleQuoted(cp);\n                    break;\n                }\n            case State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED:\n                {\n                    this._stateDoctypePublicIdentifierSingleQuoted(cp);\n                    break;\n                }\n            case State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER:\n                {\n                    this._stateAfterDoctypePublicIdentifier(cp);\n                    break;\n                }\n            case State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS:\n                {\n                    this._stateBetweenDoctypePublicAndSystemIdentifiers(cp);\n                    break;\n                }\n            case State.AFTER_DOCTYPE_SYSTEM_KEYWORD:\n                {\n                    this._stateAfterDoctypeSystemKeyword(cp);\n                    break;\n                }\n            case State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER:\n                {\n                    this._stateBeforeDoctypeSystemIdentifier(cp);\n                    break;\n                }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED:\n                {\n                    this._stateDoctypeSystemIdentifierDoubleQuoted(cp);\n                    break;\n                }\n            case State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED:\n                {\n                    this._stateDoctypeSystemIdentifierSingleQuoted(cp);\n                    break;\n                }\n            case State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER:\n                {\n                    this._stateAfterDoctypeSystemIdentifier(cp);\n                    break;\n                }\n            case State.BOGUS_DOCTYPE:\n                {\n                    this._stateBogusDoctype(cp);\n                    break;\n                }\n            case State.CDATA_SECTION:\n                {\n                    this._stateCdataSection(cp);\n                    break;\n                }\n            case State.CDATA_SECTION_BRACKET:\n                {\n                    this._stateCdataSectionBracket(cp);\n                    break;\n                }\n            case State.CDATA_SECTION_END:\n                {\n                    this._stateCdataSectionEnd(cp);\n                    break;\n                }\n            case State.CHARACTER_REFERENCE:\n                {\n                    this._stateCharacterReference();\n                    break;\n                }\n            case State.AMBIGUOUS_AMPERSAND:\n                {\n                    this._stateAmbiguousAmpersand(cp);\n                    break;\n                }\n            default:\n                {\n                    throw new Error(\"Unknown state\");\n                }\n        }\n    }\n    // State machine\n    // Data state\n    //------------------------------------------------------------------\n    _stateData(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    this.state = State.TAG_OPEN;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.AMPERSAND:\n                {\n                    this._startCharacterReference();\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this._emitCodePoint(cp);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    //  RCDATA state\n    //------------------------------------------------------------------\n    _stateRcdata(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.AMPERSAND:\n                {\n                    this._startCharacterReference();\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    this.state = State.RCDATA_LESS_THAN_SIGN;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this._emitChars(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    // RAWTEXT state\n    //------------------------------------------------------------------\n    _stateRawtext(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    this.state = State.RAWTEXT_LESS_THAN_SIGN;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this._emitChars(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    // Script data state\n    //------------------------------------------------------------------\n    _stateScriptData(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    this.state = State.SCRIPT_DATA_LESS_THAN_SIGN;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this._emitChars(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    // PLAINTEXT state\n    //------------------------------------------------------------------\n    _statePlaintext(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this._emitChars(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    // Tag open state\n    //------------------------------------------------------------------\n    _stateTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createStartTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        } else switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EXCLAMATION_MARK:\n                {\n                    this.state = State.MARKUP_DECLARATION_OPEN;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS:\n                {\n                    this.state = State.END_TAG_OPEN;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUESTION_MARK:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedQuestionMarkInsteadOfTagName);\n                    this._createCommentToken(1);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofBeforeTagName);\n                    this._emitChars(\"<\");\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.invalidFirstCharacterOfTagName);\n                    this._emitChars(\"<\");\n                    this.state = State.DATA;\n                    this._stateData(cp);\n                }\n        }\n    }\n    // End tag open state\n    //------------------------------------------------------------------\n    _stateEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this._createEndTagToken();\n            this.state = State.TAG_NAME;\n            this._stateTagName(cp);\n        } else switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingEndTagName);\n                    this.state = State.DATA;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofBeforeTagName);\n                    this._emitChars(\"</\");\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.invalidFirstCharacterOfTagName);\n                    this._createCommentToken(2);\n                    this.state = State.BOGUS_COMMENT;\n                    this._stateBogusComment(cp);\n                }\n        }\n    }\n    // Tag name state\n    //------------------------------------------------------------------\n    _stateTagName(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    this.state = State.BEFORE_ATTRIBUTE_NAME;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS:\n                {\n                    this.state = State.SELF_CLOSING_START_TAG;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.state = State.DATA;\n                    this.emitCurrentTagToken();\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    token.tagName += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInTag);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    token.tagName += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n                }\n        }\n    }\n    // RCDATA less-than sign state\n    //------------------------------------------------------------------\n    _stateRcdataLessThanSign(cp) {\n        if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS) {\n            this.state = State.RCDATA_END_TAG_OPEN;\n        } else {\n            this._emitChars(\"<\");\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RCDATA end tag open state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RCDATA_END_TAG_NAME;\n            this._stateRcdataEndTagName(cp);\n        } else {\n            this._emitChars(\"</\");\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    handleSpecialEndTag(_cp) {\n        if (!this.preprocessor.startsWith(this.lastStartTagName, false)) {\n            return !this._ensureHibernation();\n        }\n        this._createEndTagToken();\n        const token = this.currentToken;\n        token.tagName = this.lastStartTagName;\n        const cp = this.preprocessor.peek(this.lastStartTagName.length);\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    this._advanceBy(this.lastStartTagName.length);\n                    this.state = State.BEFORE_ATTRIBUTE_NAME;\n                    return false;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS:\n                {\n                    this._advanceBy(this.lastStartTagName.length);\n                    this.state = State.SELF_CLOSING_START_TAG;\n                    return false;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._advanceBy(this.lastStartTagName.length);\n                    this.emitCurrentTagToken();\n                    this.state = State.DATA;\n                    return false;\n                }\n            default:\n                {\n                    return !this._ensureHibernation();\n                }\n        }\n    }\n    // RCDATA end tag name state\n    //------------------------------------------------------------------\n    _stateRcdataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars(\"</\");\n            this.state = State.RCDATA;\n            this._stateRcdata(cp);\n        }\n    }\n    // RAWTEXT less-than sign state\n    //------------------------------------------------------------------\n    _stateRawtextLessThanSign(cp) {\n        if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS) {\n            this.state = State.RAWTEXT_END_TAG_OPEN;\n        } else {\n            this._emitChars(\"<\");\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag open state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.RAWTEXT_END_TAG_NAME;\n            this._stateRawtextEndTagName(cp);\n        } else {\n            this._emitChars(\"</\");\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // RAWTEXT end tag name state\n    //------------------------------------------------------------------\n    _stateRawtextEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars(\"</\");\n            this.state = State.RAWTEXT;\n            this._stateRawtext(cp);\n        }\n    }\n    // Script data less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataLessThanSign(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS:\n                {\n                    this.state = State.SCRIPT_DATA_END_TAG_OPEN;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EXCLAMATION_MARK:\n                {\n                    this.state = State.SCRIPT_DATA_ESCAPE_START;\n                    this._emitChars(\"<!\");\n                    break;\n                }\n            default:\n                {\n                    this._emitChars(\"<\");\n                    this.state = State.SCRIPT_DATA;\n                    this._stateScriptData(cp);\n                }\n        }\n    }\n    // Script data end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_END_TAG_NAME;\n            this._stateScriptDataEndTagName(cp);\n        } else {\n            this._emitChars(\"</\");\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars(\"</\");\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStart(cp) {\n        if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPE_START_DASH;\n            this._emitChars(\"-\");\n        } else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escape start dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapeStartDash(cp) {\n        if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n            this._emitChars(\"-\");\n        } else {\n            this.state = State.SCRIPT_DATA;\n            this._stateScriptData(cp);\n        }\n    }\n    // Script data escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataEscaped(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    this.state = State.SCRIPT_DATA_ESCAPED_DASH;\n                    this._emitChars(\"-\");\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this._emitChars(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInScriptHtmlCommentLikeText);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    // Script data escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDash(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    this.state = State.SCRIPT_DATA_ESCAPED_DASH_DASH;\n                    this._emitChars(\"-\");\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this.state = State.SCRIPT_DATA_ESCAPED;\n                    this._emitChars(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInScriptHtmlCommentLikeText);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this.state = State.SCRIPT_DATA_ESCAPED;\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    // Script data escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedDashDash(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    this._emitChars(\"-\");\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    this.state = State.SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.state = State.SCRIPT_DATA;\n                    this._emitChars(\">\");\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this.state = State.SCRIPT_DATA_ESCAPED;\n                    this._emitChars(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInScriptHtmlCommentLikeText);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this.state = State.SCRIPT_DATA_ESCAPED;\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    // Script data escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedLessThanSign(cp) {\n        if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_OPEN;\n        } else if (isAsciiLetter(cp)) {\n            this._emitChars(\"<\");\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_START;\n            this._stateScriptDataDoubleEscapeStart(cp);\n        } else {\n            this._emitChars(\"<\");\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag open state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagOpen(cp) {\n        if (isAsciiLetter(cp)) {\n            this.state = State.SCRIPT_DATA_ESCAPED_END_TAG_NAME;\n            this._stateScriptDataEscapedEndTagName(cp);\n        } else {\n            this._emitChars(\"</\");\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data escaped end tag name state\n    //------------------------------------------------------------------\n    _stateScriptDataEscapedEndTagName(cp) {\n        if (this.handleSpecialEndTag(cp)) {\n            this._emitChars(\"</\");\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escape start state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeStart(cp) {\n        if (this.preprocessor.startsWith(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.SCRIPT, false) && isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for(let i = 0; i < _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.SCRIPT.length; i++){\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n        } else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_ESCAPED;\n            this._stateScriptDataEscaped(cp);\n        }\n    }\n    // Script data double escaped state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscaped(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH;\n                    this._emitChars(\"-\");\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                    this._emitChars(\"<\");\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this._emitChars(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInScriptHtmlCommentLikeText);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    // Script data double escaped dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDash(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH;\n                    this._emitChars(\"-\");\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                    this._emitChars(\"<\");\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                    this._emitChars(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInScriptHtmlCommentLikeText);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    // Script data double escaped dash dash state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedDashDash(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    this._emitChars(\"-\");\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN;\n                    this._emitChars(\"<\");\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.state = State.SCRIPT_DATA;\n                    this._emitChars(\">\");\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                    this._emitChars(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInScriptHtmlCommentLikeText);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    // Script data double escaped less-than sign state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapedLessThanSign(cp) {\n        if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPE_END;\n            this._emitChars(\"/\");\n        } else {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Script data double escape end state\n    //------------------------------------------------------------------\n    _stateScriptDataDoubleEscapeEnd(cp) {\n        if (this.preprocessor.startsWith(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.SCRIPT, false) && isScriptDataDoubleEscapeSequenceEnd(this.preprocessor.peek(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.SCRIPT.length))) {\n            this._emitCodePoint(cp);\n            for(let i = 0; i < _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.SCRIPT.length; i++){\n                this._emitCodePoint(this._consume());\n            }\n            this.state = State.SCRIPT_DATA_ESCAPED;\n        } else if (!this._ensureHibernation()) {\n            this.state = State.SCRIPT_DATA_DOUBLE_ESCAPED;\n            this._stateScriptDataDoubleEscaped(cp);\n        }\n    }\n    // Before attribute name state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeName(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this.state = State.AFTER_ATTRIBUTE_NAME;\n                    this._stateAfterAttributeName(cp);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EQUALS_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedEqualsSignBeforeAttributeName);\n                    this._createAttr(\"=\");\n                    this.state = State.ATTRIBUTE_NAME;\n                    break;\n                }\n            default:\n                {\n                    this._createAttr(\"\");\n                    this.state = State.ATTRIBUTE_NAME;\n                    this._stateAttributeName(cp);\n                }\n        }\n    }\n    // Attribute name state\n    //------------------------------------------------------------------\n    _stateAttributeName(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._leaveAttrName();\n                    this.state = State.AFTER_ATTRIBUTE_NAME;\n                    this._stateAfterAttributeName(cp);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EQUALS_SIGN:\n                {\n                    this._leaveAttrName();\n                    this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedCharacterInAttributeName);\n                    this.currentAttr.name += String.fromCodePoint(cp);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this.currentAttr.name += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            default:\n                {\n                    this.currentAttr.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n                }\n        }\n    }\n    // After attribute name state\n    //------------------------------------------------------------------\n    _stateAfterAttributeName(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS:\n                {\n                    this.state = State.SELF_CLOSING_START_TAG;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EQUALS_SIGN:\n                {\n                    this.state = State.BEFORE_ATTRIBUTE_VALUE;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.state = State.DATA;\n                    this.emitCurrentTagToken();\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInTag);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._createAttr(\"\");\n                    this.state = State.ATTRIBUTE_NAME;\n                    this._stateAttributeName(cp);\n                }\n        }\n    }\n    // Before attribute value state\n    //------------------------------------------------------------------\n    _stateBeforeAttributeValue(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n                {\n                    this.state = State.ATTRIBUTE_VALUE_DOUBLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n                {\n                    this.state = State.ATTRIBUTE_VALUE_SINGLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingAttributeValue);\n                    this.state = State.DATA;\n                    this.emitCurrentTagToken();\n                    break;\n                }\n            default:\n                {\n                    this.state = State.ATTRIBUTE_VALUE_UNQUOTED;\n                    this._stateAttributeValueUnquoted(cp);\n                }\n        }\n    }\n    // Attribute value (double-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueDoubleQuoted(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n                {\n                    this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.AMPERSAND:\n                {\n                    this._startCharacterReference();\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this.currentAttr.value += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInTag);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this.currentAttr.value += String.fromCodePoint(cp);\n                }\n        }\n    }\n    // Attribute value (single-quoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueSingleQuoted(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n                {\n                    this.state = State.AFTER_ATTRIBUTE_VALUE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.AMPERSAND:\n                {\n                    this._startCharacterReference();\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this.currentAttr.value += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInTag);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this.currentAttr.value += String.fromCodePoint(cp);\n                }\n        }\n    }\n    // Attribute value (unquoted) state\n    //------------------------------------------------------------------\n    _stateAttributeValueUnquoted(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    this._leaveAttrValue();\n                    this.state = State.BEFORE_ATTRIBUTE_NAME;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.AMPERSAND:\n                {\n                    this._startCharacterReference();\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._leaveAttrValue();\n                    this.state = State.DATA;\n                    this.emitCurrentTagToken();\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this.currentAttr.value += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EQUALS_SIGN:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GRAVE_ACCENT:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedCharacterInUnquotedAttributeValue);\n                    this.currentAttr.value += String.fromCodePoint(cp);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInTag);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this.currentAttr.value += String.fromCodePoint(cp);\n                }\n        }\n    }\n    // After attribute value (quoted) state\n    //------------------------------------------------------------------\n    _stateAfterAttributeValueQuoted(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    this._leaveAttrValue();\n                    this.state = State.BEFORE_ATTRIBUTE_NAME;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SOLIDUS:\n                {\n                    this._leaveAttrValue();\n                    this.state = State.SELF_CLOSING_START_TAG;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._leaveAttrValue();\n                    this.state = State.DATA;\n                    this.emitCurrentTagToken();\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInTag);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingWhitespaceBetweenAttributes);\n                    this.state = State.BEFORE_ATTRIBUTE_NAME;\n                    this._stateBeforeAttributeName(cp);\n                }\n        }\n    }\n    // Self-closing start tag state\n    //------------------------------------------------------------------\n    _stateSelfClosingStartTag(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    const token = this.currentToken;\n                    token.selfClosing = true;\n                    this.state = State.DATA;\n                    this.emitCurrentTagToken();\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInTag);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedSolidusInTag);\n                    this.state = State.BEFORE_ATTRIBUTE_NAME;\n                    this._stateBeforeAttributeName(cp);\n                }\n        }\n    }\n    // Bogus comment state\n    //------------------------------------------------------------------\n    _stateBogusComment(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.state = State.DATA;\n                    this.emitCurrentComment(token);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this.emitCurrentComment(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    token.data += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            default:\n                {\n                    token.data += String.fromCodePoint(cp);\n                }\n        }\n    }\n    // Markup declaration open state\n    //------------------------------------------------------------------\n    _stateMarkupDeclarationOpen(cp) {\n        if (this._consumeSequenceIfMatch(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.DASH_DASH, true)) {\n            this._createCommentToken(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.DASH_DASH.length + 1);\n            this.state = State.COMMENT_START;\n        } else if (this._consumeSequenceIfMatch(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.DOCTYPE, false)) {\n            // NOTE: Doctypes tokens are created without fixed offsets. We keep track of the moment a doctype *might* start here.\n            this.currentLocation = this.getCurrentLocation(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.DOCTYPE.length + 1);\n            this.state = State.DOCTYPE;\n        } else if (this._consumeSequenceIfMatch(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.CDATA_START, true)) {\n            if (this.inForeignNode) {\n                this.state = State.CDATA_SECTION;\n            } else {\n                this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.cdataInHtmlContent);\n                this._createCommentToken(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.CDATA_START.length + 1);\n                this.currentToken.data = \"[CDATA[\";\n                this.state = State.BOGUS_COMMENT;\n            }\n        } else if (!this._ensureHibernation()) {\n            this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.incorrectlyOpenedComment);\n            this._createCommentToken(2);\n            this.state = State.BOGUS_COMMENT;\n            this._stateBogusComment(cp);\n        }\n    }\n    // Comment start state\n    //------------------------------------------------------------------\n    _stateCommentStart(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    this.state = State.COMMENT_START_DASH;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.abruptClosingOfEmptyComment);\n                    this.state = State.DATA;\n                    const token = this.currentToken;\n                    this.emitCurrentComment(token);\n                    break;\n                }\n            default:\n                {\n                    this.state = State.COMMENT;\n                    this._stateComment(cp);\n                }\n        }\n    }\n    // Comment start dash state\n    //------------------------------------------------------------------\n    _stateCommentStartDash(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    this.state = State.COMMENT_END;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.abruptClosingOfEmptyComment);\n                    this.state = State.DATA;\n                    this.emitCurrentComment(token);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInComment);\n                    this.emitCurrentComment(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    token.data += \"-\";\n                    this.state = State.COMMENT;\n                    this._stateComment(cp);\n                }\n        }\n    }\n    // Comment state\n    //------------------------------------------------------------------\n    _stateComment(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    this.state = State.COMMENT_END_DASH;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    token.data += \"<\";\n                    this.state = State.COMMENT_LESS_THAN_SIGN;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    token.data += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInComment);\n                    this.emitCurrentComment(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    token.data += String.fromCodePoint(cp);\n                }\n        }\n    }\n    // Comment less-than sign state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSign(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EXCLAMATION_MARK:\n                {\n                    token.data += \"!\";\n                    this.state = State.COMMENT_LESS_THAN_SIGN_BANG;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LESS_THAN_SIGN:\n                {\n                    token.data += \"<\";\n                    break;\n                }\n            default:\n                {\n                    this.state = State.COMMENT;\n                    this._stateComment(cp);\n                }\n        }\n    }\n    // Comment less-than sign bang state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBang(cp) {\n        if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH;\n        } else {\n            this.state = State.COMMENT;\n            this._stateComment(cp);\n        }\n    }\n    // Comment less-than sign bang dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDash(cp) {\n        if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS) {\n            this.state = State.COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH;\n        } else {\n            this.state = State.COMMENT_END_DASH;\n            this._stateCommentEndDash(cp);\n        }\n    }\n    // Comment less-than sign bang dash dash state\n    //------------------------------------------------------------------\n    _stateCommentLessThanSignBangDashDash(cp) {\n        if (cp !== _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN && cp !== _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF) {\n            this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.nestedComment);\n        }\n        this.state = State.COMMENT_END;\n        this._stateCommentEnd(cp);\n    }\n    // Comment end dash state\n    //------------------------------------------------------------------\n    _stateCommentEndDash(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    this.state = State.COMMENT_END;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInComment);\n                    this.emitCurrentComment(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    token.data += \"-\";\n                    this.state = State.COMMENT;\n                    this._stateComment(cp);\n                }\n        }\n    }\n    // Comment end state\n    //------------------------------------------------------------------\n    _stateCommentEnd(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.state = State.DATA;\n                    this.emitCurrentComment(token);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EXCLAMATION_MARK:\n                {\n                    this.state = State.COMMENT_END_BANG;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    token.data += \"-\";\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInComment);\n                    this.emitCurrentComment(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    token.data += \"--\";\n                    this.state = State.COMMENT;\n                    this._stateComment(cp);\n                }\n        }\n    }\n    // Comment end bang state\n    //------------------------------------------------------------------\n    _stateCommentEndBang(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.HYPHEN_MINUS:\n                {\n                    token.data += \"--!\";\n                    this.state = State.COMMENT_END_DASH;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.incorrectlyClosedComment);\n                    this.state = State.DATA;\n                    this.emitCurrentComment(token);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInComment);\n                    this.emitCurrentComment(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    token.data += \"--!\";\n                    this.state = State.COMMENT;\n                    this._stateComment(cp);\n                }\n        }\n    }\n    // DOCTYPE state\n    //------------------------------------------------------------------\n    _stateDoctype(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    this.state = State.BEFORE_DOCTYPE_NAME;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.state = State.BEFORE_DOCTYPE_NAME;\n                    this._stateBeforeDoctypeName(cp);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingWhitespaceBeforeDoctypeName);\n                    this.state = State.BEFORE_DOCTYPE_NAME;\n                    this._stateBeforeDoctypeName(cp);\n                }\n        }\n    }\n    // Before DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeName(cp) {\n        if (isAsciiUpper(cp)) {\n            this._createDoctypeToken(String.fromCharCode(toAsciiLower(cp)));\n            this.state = State.DOCTYPE_NAME;\n        } else switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    this._createDoctypeToken(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER);\n                    this.state = State.DOCTYPE_NAME;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingDoctypeName);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    this._createDoctypeToken(null);\n                    const token = this.currentToken;\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._createDoctypeToken(String.fromCodePoint(cp));\n                    this.state = State.DOCTYPE_NAME;\n                }\n        }\n    }\n    // DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateDoctypeName(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    this.state = State.AFTER_DOCTYPE_NAME;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.state = State.DATA;\n                    this.emitCurrentDoctype(token);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    token.name += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    token.name += String.fromCodePoint(isAsciiUpper(cp) ? toAsciiLower(cp) : cp);\n                }\n        }\n    }\n    // After DOCTYPE name state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeName(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.state = State.DATA;\n                    this.emitCurrentDoctype(token);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    if (this._consumeSequenceIfMatch(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.PUBLIC, false)) {\n                        this.state = State.AFTER_DOCTYPE_PUBLIC_KEYWORD;\n                    } else if (this._consumeSequenceIfMatch(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.SEQUENCES.SYSTEM, false)) {\n                        this.state = State.AFTER_DOCTYPE_SYSTEM_KEYWORD;\n                    } else if (!this._ensureHibernation()) {\n                        this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.invalidCharacterSequenceAfterDoctypeName);\n                        token.forceQuirks = true;\n                        this.state = State.BOGUS_DOCTYPE;\n                        this._stateBogusDoctype(cp);\n                    }\n                }\n        }\n    }\n    // After DOCTYPE public keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicKeyword(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    this.state = State.BEFORE_DOCTYPE_PUBLIC_IDENTIFIER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                    token.publicId = \"\";\n                    this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingWhitespaceAfterDoctypePublicKeyword);\n                    token.publicId = \"\";\n                    this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingDoctypePublicIdentifier);\n                    token.forceQuirks = true;\n                    this.state = State.DATA;\n                    this.emitCurrentDoctype(token);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n        }\n    }\n    // Before DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n                {\n                    token.publicId = \"\";\n                    this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n                {\n                    token.publicId = \"\";\n                    this.state = State.DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingDoctypePublicIdentifier);\n                    token.forceQuirks = true;\n                    this.state = State.DATA;\n                    this.emitCurrentDoctype(token);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingQuoteBeforeDoctypePublicIdentifier);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n        }\n    }\n    // DOCTYPE public identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n                {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    token.publicId += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.abruptDoctypePublicIdentifier);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    token.publicId += String.fromCodePoint(cp);\n                }\n        }\n    }\n    // DOCTYPE public identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypePublicIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n                {\n                    this.state = State.AFTER_DOCTYPE_PUBLIC_IDENTIFIER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    token.publicId += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.abruptDoctypePublicIdentifier);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    token.publicId += String.fromCodePoint(cp);\n                }\n        }\n    }\n    // After DOCTYPE public identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypePublicIdentifier(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    this.state = State.BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.state = State.DATA;\n                    this.emitCurrentDoctype(token);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                    token.systemId = \"\";\n                    this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingWhitespaceBetweenDoctypePublicAndSystemIdentifiers);\n                    token.systemId = \"\";\n                    this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n        }\n    }\n    // Between DOCTYPE public and system identifiers state\n    //------------------------------------------------------------------\n    _stateBetweenDoctypePublicAndSystemIdentifiers(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n                {\n                    token.systemId = \"\";\n                    this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n                {\n                    token.systemId = \"\";\n                    this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n        }\n    }\n    // After DOCTYPE system keyword state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemKeyword(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    this.state = State.BEFORE_DOCTYPE_SYSTEM_IDENTIFIER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                    token.systemId = \"\";\n                    this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingWhitespaceAfterDoctypeSystemKeyword);\n                    token.systemId = \"\";\n                    this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingDoctypeSystemIdentifier);\n                    token.forceQuirks = true;\n                    this.state = State.DATA;\n                    this.emitCurrentDoctype(token);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n        }\n    }\n    // Before DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateBeforeDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n                {\n                    token.systemId = \"\";\n                    this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n                {\n                    token.systemId = \"\";\n                    this.state = State.DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingDoctypeSystemIdentifier);\n                    token.forceQuirks = true;\n                    this.state = State.DATA;\n                    this.emitCurrentDoctype(token);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.missingQuoteBeforeDoctypeSystemIdentifier);\n                    token.forceQuirks = true;\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n        }\n    }\n    // DOCTYPE system identifier (double-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierDoubleQuoted(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.QUOTATION_MARK:\n                {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    token.systemId += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.abruptDoctypeSystemIdentifier);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    token.systemId += String.fromCodePoint(cp);\n                }\n        }\n    }\n    // DOCTYPE system identifier (single-quoted) state\n    //------------------------------------------------------------------\n    _stateDoctypeSystemIdentifierSingleQuoted(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.APOSTROPHE:\n                {\n                    this.state = State.AFTER_DOCTYPE_SYSTEM_IDENTIFIER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    token.systemId += _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.REPLACEMENT_CHARACTER;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.abruptDoctypeSystemIdentifier);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    token.systemId += String.fromCodePoint(cp);\n                }\n        }\n    }\n    // After DOCTYPE system identifier state\n    //------------------------------------------------------------------\n    _stateAfterDoctypeSystemIdentifier(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SPACE:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.LINE_FEED:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.TABULATION:\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.FORM_FEED:\n                {\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInDoctype);\n                    token.forceQuirks = true;\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedCharacterAfterDoctypeSystemIdentifier);\n                    this.state = State.BOGUS_DOCTYPE;\n                    this._stateBogusDoctype(cp);\n                }\n        }\n    }\n    // Bogus DOCTYPE state\n    //------------------------------------------------------------------\n    _stateBogusDoctype(cp) {\n        const token = this.currentToken;\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.emitCurrentDoctype(token);\n                    this.state = State.DATA;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.NULL:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unexpectedNullCharacter);\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this.emitCurrentDoctype(token);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n        }\n    }\n    // CDATA section state\n    //------------------------------------------------------------------\n    _stateCdataSection(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.RIGHT_SQUARE_BRACKET:\n                {\n                    this.state = State.CDATA_SECTION_BRACKET;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.EOF:\n                {\n                    this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.eofInCdata);\n                    this._emitEOFToken();\n                    break;\n                }\n            default:\n                {\n                    this._emitCodePoint(cp);\n                }\n        }\n    }\n    // CDATA section bracket state\n    //------------------------------------------------------------------\n    _stateCdataSectionBracket(cp) {\n        if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.RIGHT_SQUARE_BRACKET) {\n            this.state = State.CDATA_SECTION_END;\n        } else {\n            this._emitChars(\"]\");\n            this.state = State.CDATA_SECTION;\n            this._stateCdataSection(cp);\n        }\n    }\n    // CDATA section end state\n    //------------------------------------------------------------------\n    _stateCdataSectionEnd(cp) {\n        switch(cp){\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.GREATER_THAN_SIGN:\n                {\n                    this.state = State.DATA;\n                    break;\n                }\n            case _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.RIGHT_SQUARE_BRACKET:\n                {\n                    this._emitChars(\"]\");\n                    break;\n                }\n            default:\n                {\n                    this._emitChars(\"]]\");\n                    this.state = State.CDATA_SECTION;\n                    this._stateCdataSection(cp);\n                }\n        }\n    }\n    // Character reference state\n    //------------------------------------------------------------------\n    _stateCharacterReference() {\n        let length = this.entityDecoder.write(this.preprocessor.html, this.preprocessor.pos);\n        if (length < 0) {\n            if (this.preprocessor.lastChunkWritten) {\n                length = this.entityDecoder.end();\n            } else {\n                // Wait for the rest of the entity.\n                this.active = false;\n                // Mark the entire buffer as read.\n                this.preprocessor.pos = this.preprocessor.html.length - 1;\n                this.consumedAfterSnapshot = 0;\n                this.preprocessor.endOfChunkHit = true;\n                return;\n            }\n        }\n        if (length === 0) {\n            // This was not a valid entity. Go back to the beginning, and\n            // figure out what to do.\n            this.preprocessor.pos = this.entityStartPos;\n            this._flushCodePointConsumedAsCharacterReference(_common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.AMPERSAND);\n            this.state = !this._isCharacterReferenceInAttribute() && isAsciiAlphaNumeric(this.preprocessor.peek(1)) ? State.AMBIGUOUS_AMPERSAND : this.returnState;\n        } else {\n            // We successfully parsed an entity. Switch to the return state.\n            this.state = this.returnState;\n        }\n    }\n    // Ambiguos ampersand state\n    //------------------------------------------------------------------\n    _stateAmbiguousAmpersand(cp) {\n        if (isAsciiAlphaNumeric(cp)) {\n            this._flushCodePointConsumedAsCharacterReference(cp);\n        } else {\n            if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_1__.CODE_POINTS.SEMICOLON) {\n                this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_4__.ERR.unknownNamedCharacterReference);\n            }\n            this.state = this.returnState;\n            this._callState(cp);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/tokenizer/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/tokenizer/preprocessor.js":
/*!************************************************************!*\
  !*** ./node_modules/parse5/dist/tokenizer/preprocessor.js ***!
  \************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Preprocessor: () => (/* binding */ Preprocessor)\n/* harmony export */ });\n/* harmony import */ var _common_unicode_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/unicode.js */ \"(rsc)/./node_modules/parse5/dist/common/unicode.js\");\n/* harmony import */ var _common_error_codes_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/error-codes.js */ \"(rsc)/./node_modules/parse5/dist/common/error-codes.js\");\n\n\n//Const\nconst DEFAULT_BUFFER_WATERLINE = 1 << 16;\n//Preprocessor\n//NOTE: HTML input preprocessing\n//(see: http://www.whatwg.org/specs/web-apps/current-work/multipage/parsing.html#preprocessing-the-input-stream)\nclass Preprocessor {\n    constructor(handler){\n        this.handler = handler;\n        this.html = \"\";\n        this.pos = -1;\n        // NOTE: Initial `lastGapPos` is -2, to ensure `col` on initialisation is 0\n        this.lastGapPos = -2;\n        this.gapStack = [];\n        this.skipNextNewLine = false;\n        this.lastChunkWritten = false;\n        this.endOfChunkHit = false;\n        this.bufferWaterline = DEFAULT_BUFFER_WATERLINE;\n        this.isEol = false;\n        this.lineStartPos = 0;\n        this.droppedBufferSize = 0;\n        this.line = 1;\n        //NOTE: avoid reporting errors twice on advance/retreat\n        this.lastErrOffset = -1;\n    }\n    /** The column on the current line. If we just saw a gap (eg. a surrogate pair), return the index before. */ get col() {\n        return this.pos - this.lineStartPos + Number(this.lastGapPos !== this.pos);\n    }\n    get offset() {\n        return this.droppedBufferSize + this.pos;\n    }\n    getError(code, cpOffset) {\n        const { line, col, offset } = this;\n        const startCol = col + cpOffset;\n        const startOffset = offset + cpOffset;\n        return {\n            code,\n            startLine: line,\n            endLine: line,\n            startCol,\n            endCol: startCol,\n            startOffset,\n            endOffset: startOffset\n        };\n    }\n    _err(code) {\n        if (this.handler.onParseError && this.lastErrOffset !== this.offset) {\n            this.lastErrOffset = this.offset;\n            this.handler.onParseError(this.getError(code, 0));\n        }\n    }\n    _addGap() {\n        this.gapStack.push(this.lastGapPos);\n        this.lastGapPos = this.pos;\n    }\n    _processSurrogate(cp) {\n        //NOTE: try to peek a surrogate pair\n        if (this.pos !== this.html.length - 1) {\n            const nextCp = this.html.charCodeAt(this.pos + 1);\n            if ((0,_common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.isSurrogatePair)(nextCp)) {\n                //NOTE: we have a surrogate pair. Peek pair character and recalculate code point.\n                this.pos++;\n                //NOTE: add a gap that should be avoided during retreat\n                this._addGap();\n                return (0,_common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.getSurrogatePairCodePoint)(cp, nextCp);\n            }\n        } else if (!this.lastChunkWritten) {\n            this.endOfChunkHit = true;\n            return _common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.CODE_POINTS.EOF;\n        }\n        //NOTE: isolated surrogate\n        this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR.surrogateInInputStream);\n        return cp;\n    }\n    willDropParsedChunk() {\n        return this.pos > this.bufferWaterline;\n    }\n    dropParsedChunk() {\n        if (this.willDropParsedChunk()) {\n            this.html = this.html.substring(this.pos);\n            this.lineStartPos -= this.pos;\n            this.droppedBufferSize += this.pos;\n            this.pos = 0;\n            this.lastGapPos = -2;\n            this.gapStack.length = 0;\n        }\n    }\n    write(chunk, isLastChunk) {\n        if (this.html.length > 0) {\n            this.html += chunk;\n        } else {\n            this.html = chunk;\n        }\n        this.endOfChunkHit = false;\n        this.lastChunkWritten = isLastChunk;\n    }\n    insertHtmlAtCurrentPos(chunk) {\n        this.html = this.html.substring(0, this.pos + 1) + chunk + this.html.substring(this.pos + 1);\n        this.endOfChunkHit = false;\n    }\n    startsWith(pattern, caseSensitive) {\n        // Check if our buffer has enough characters\n        if (this.pos + pattern.length > this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return false;\n        }\n        if (caseSensitive) {\n            return this.html.startsWith(pattern, this.pos);\n        }\n        for(let i = 0; i < pattern.length; i++){\n            const cp = this.html.charCodeAt(this.pos + i) | 0x20;\n            if (cp !== pattern.charCodeAt(i)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    peek(offset) {\n        const pos = this.pos + offset;\n        if (pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return _common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.CODE_POINTS.EOF;\n        }\n        const code = this.html.charCodeAt(pos);\n        return code === _common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.CODE_POINTS.CARRIAGE_RETURN ? _common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.CODE_POINTS.LINE_FEED : code;\n    }\n    advance() {\n        this.pos++;\n        //NOTE: LF should be in the last column of the line\n        if (this.isEol) {\n            this.isEol = false;\n            this.line++;\n            this.lineStartPos = this.pos;\n        }\n        if (this.pos >= this.html.length) {\n            this.endOfChunkHit = !this.lastChunkWritten;\n            return _common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.CODE_POINTS.EOF;\n        }\n        let cp = this.html.charCodeAt(this.pos);\n        //NOTE: all U+000D CARRIAGE RETURN (CR) characters must be converted to U+000A LINE FEED (LF) characters\n        if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.CODE_POINTS.CARRIAGE_RETURN) {\n            this.isEol = true;\n            this.skipNextNewLine = true;\n            return _common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.CODE_POINTS.LINE_FEED;\n        }\n        //NOTE: any U+000A LINE FEED (LF) characters that immediately follow a U+000D CARRIAGE RETURN (CR) character\n        //must be ignored.\n        if (cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.CODE_POINTS.LINE_FEED) {\n            this.isEol = true;\n            if (this.skipNextNewLine) {\n                // `line` will be bumped again in the recursive call.\n                this.line--;\n                this.skipNextNewLine = false;\n                this._addGap();\n                return this.advance();\n            }\n        }\n        this.skipNextNewLine = false;\n        if ((0,_common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.isSurrogate)(cp)) {\n            cp = this._processSurrogate(cp);\n        }\n        //OPTIMIZATION: first check if code point is in the common allowed\n        //range (ASCII alphanumeric, whitespaces, big chunk of BMP)\n        //before going into detailed performance cost validation.\n        const isCommonValidRange = this.handler.onParseError === null || cp > 0x1f && cp < 0x7f || cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.CODE_POINTS.LINE_FEED || cp === _common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.CODE_POINTS.CARRIAGE_RETURN || cp > 0x9f && cp < 64976;\n        if (!isCommonValidRange) {\n            this._checkForProblematicCharacters(cp);\n        }\n        return cp;\n    }\n    _checkForProblematicCharacters(cp) {\n        if ((0,_common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.isControlCodePoint)(cp)) {\n            this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR.controlCharacterInInputStream);\n        } else if ((0,_common_unicode_js__WEBPACK_IMPORTED_MODULE_0__.isUndefinedCodePoint)(cp)) {\n            this._err(_common_error_codes_js__WEBPACK_IMPORTED_MODULE_1__.ERR.noncharacterInInputStream);\n        }\n    }\n    retreat(count) {\n        this.pos -= count;\n        while(this.pos < this.lastGapPos){\n            this.lastGapPos = this.gapStack.pop();\n            this.pos--;\n        }\n        this.isEol = false;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/tokenizer/preprocessor.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/dist/tree-adapters/default.js":
/*!***********************************************************!*\
  !*** ./node_modules/parse5/dist/tree-adapters/default.js ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   defaultTreeAdapter: () => (/* binding */ defaultTreeAdapter)\n/* harmony export */ });\n/* harmony import */ var _common_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/html.js */ \"(rsc)/./node_modules/parse5/dist/common/html.js\");\n\nconst defaultTreeAdapter = {\n    //Node construction\n    createDocument () {\n        return {\n            nodeName: \"#document\",\n            mode: _common_html_js__WEBPACK_IMPORTED_MODULE_0__.DOCUMENT_MODE.NO_QUIRKS,\n            childNodes: []\n        };\n    },\n    createDocumentFragment () {\n        return {\n            nodeName: \"#document-fragment\",\n            childNodes: []\n        };\n    },\n    createElement (tagName, namespaceURI, attrs) {\n        return {\n            nodeName: tagName,\n            tagName,\n            attrs,\n            namespaceURI,\n            childNodes: [],\n            parentNode: null\n        };\n    },\n    createCommentNode (data) {\n        return {\n            nodeName: \"#comment\",\n            data,\n            parentNode: null\n        };\n    },\n    createTextNode (value) {\n        return {\n            nodeName: \"#text\",\n            value,\n            parentNode: null\n        };\n    },\n    //Tree mutation\n    appendChild (parentNode, newNode) {\n        parentNode.childNodes.push(newNode);\n        newNode.parentNode = parentNode;\n    },\n    insertBefore (parentNode, newNode, referenceNode) {\n        const insertionIdx = parentNode.childNodes.indexOf(referenceNode);\n        parentNode.childNodes.splice(insertionIdx, 0, newNode);\n        newNode.parentNode = parentNode;\n    },\n    setTemplateContent (templateElement, contentElement) {\n        templateElement.content = contentElement;\n    },\n    getTemplateContent (templateElement) {\n        return templateElement.content;\n    },\n    setDocumentType (document, name, publicId, systemId) {\n        const doctypeNode = document.childNodes.find((node)=>node.nodeName === \"#documentType\");\n        if (doctypeNode) {\n            doctypeNode.name = name;\n            doctypeNode.publicId = publicId;\n            doctypeNode.systemId = systemId;\n        } else {\n            const node = {\n                nodeName: \"#documentType\",\n                name,\n                publicId,\n                systemId,\n                parentNode: null\n            };\n            defaultTreeAdapter.appendChild(document, node);\n        }\n    },\n    setDocumentMode (document, mode) {\n        document.mode = mode;\n    },\n    getDocumentMode (document) {\n        return document.mode;\n    },\n    detachNode (node) {\n        if (node.parentNode) {\n            const idx = node.parentNode.childNodes.indexOf(node);\n            node.parentNode.childNodes.splice(idx, 1);\n            node.parentNode = null;\n        }\n    },\n    insertText (parentNode, text) {\n        if (parentNode.childNodes.length > 0) {\n            const prevNode = parentNode.childNodes[parentNode.childNodes.length - 1];\n            if (defaultTreeAdapter.isTextNode(prevNode)) {\n                prevNode.value += text;\n                return;\n            }\n        }\n        defaultTreeAdapter.appendChild(parentNode, defaultTreeAdapter.createTextNode(text));\n    },\n    insertTextBefore (parentNode, text, referenceNode) {\n        const prevNode = parentNode.childNodes[parentNode.childNodes.indexOf(referenceNode) - 1];\n        if (prevNode && defaultTreeAdapter.isTextNode(prevNode)) {\n            prevNode.value += text;\n        } else {\n            defaultTreeAdapter.insertBefore(parentNode, defaultTreeAdapter.createTextNode(text), referenceNode);\n        }\n    },\n    adoptAttributes (recipient, attrs) {\n        const recipientAttrsMap = new Set(recipient.attrs.map((attr)=>attr.name));\n        for(let j = 0; j < attrs.length; j++){\n            if (!recipientAttrsMap.has(attrs[j].name)) {\n                recipient.attrs.push(attrs[j]);\n            }\n        }\n    },\n    //Tree traversing\n    getFirstChild (node) {\n        return node.childNodes[0];\n    },\n    getChildNodes (node) {\n        return node.childNodes;\n    },\n    getParentNode (node) {\n        return node.parentNode;\n    },\n    getAttrList (element) {\n        return element.attrs;\n    },\n    //Node data\n    getTagName (element) {\n        return element.tagName;\n    },\n    getNamespaceURI (element) {\n        return element.namespaceURI;\n    },\n    getTextNodeContent (textNode) {\n        return textNode.value;\n    },\n    getCommentNodeContent (commentNode) {\n        return commentNode.data;\n    },\n    getDocumentTypeNodeName (doctypeNode) {\n        return doctypeNode.name;\n    },\n    getDocumentTypeNodePublicId (doctypeNode) {\n        return doctypeNode.publicId;\n    },\n    getDocumentTypeNodeSystemId (doctypeNode) {\n        return doctypeNode.systemId;\n    },\n    //Node types\n    isTextNode (node) {\n        return node.nodeName === \"#text\";\n    },\n    isCommentNode (node) {\n        return node.nodeName === \"#comment\";\n    },\n    isDocumentTypeNode (node) {\n        return node.nodeName === \"#documentType\";\n    },\n    isElementNode (node) {\n        return Object.prototype.hasOwnProperty.call(node, \"tagName\");\n    },\n    // Source code location\n    setNodeSourceCodeLocation (node, location) {\n        node.sourceCodeLocation = location;\n    },\n    getNodeSourceCodeLocation (node) {\n        return node.sourceCodeLocation;\n    },\n    updateNodeSourceCodeLocation (node, endLocation) {\n        node.sourceCodeLocation = {\n            ...node.sourceCodeLocation,\n            ...endLocation\n        };\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcGFyc2U1L2Rpc3QvdHJlZS1hZGFwdGVycy9kZWZhdWx0LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtEO0FBQzNDLE1BQU1DLHFCQUFxQjtJQUM5QixtQkFBbUI7SUFDbkJDO1FBQ0ksT0FBTztZQUNIQyxVQUFVO1lBQ1ZDLE1BQU1KLDBEQUFhQSxDQUFDSyxTQUFTO1lBQzdCQyxZQUFZLEVBQUU7UUFDbEI7SUFDSjtJQUNBQztRQUNJLE9BQU87WUFDSEosVUFBVTtZQUNWRyxZQUFZLEVBQUU7UUFDbEI7SUFDSjtJQUNBRSxlQUFjQyxPQUFPLEVBQUVDLFlBQVksRUFBRUMsS0FBSztRQUN0QyxPQUFPO1lBQ0hSLFVBQVVNO1lBQ1ZBO1lBQ0FFO1lBQ0FEO1lBQ0FKLFlBQVksRUFBRTtZQUNkTSxZQUFZO1FBQ2hCO0lBQ0o7SUFDQUMsbUJBQWtCQyxJQUFJO1FBQ2xCLE9BQU87WUFDSFgsVUFBVTtZQUNWVztZQUNBRixZQUFZO1FBQ2hCO0lBQ0o7SUFDQUcsZ0JBQWVDLEtBQUs7UUFDaEIsT0FBTztZQUNIYixVQUFVO1lBQ1ZhO1lBQ0FKLFlBQVk7UUFDaEI7SUFDSjtJQUNBLGVBQWU7SUFDZkssYUFBWUwsVUFBVSxFQUFFTSxPQUFPO1FBQzNCTixXQUFXTixVQUFVLENBQUNhLElBQUksQ0FBQ0Q7UUFDM0JBLFFBQVFOLFVBQVUsR0FBR0E7SUFDekI7SUFDQVEsY0FBYVIsVUFBVSxFQUFFTSxPQUFPLEVBQUVHLGFBQWE7UUFDM0MsTUFBTUMsZUFBZVYsV0FBV04sVUFBVSxDQUFDaUIsT0FBTyxDQUFDRjtRQUNuRFQsV0FBV04sVUFBVSxDQUFDa0IsTUFBTSxDQUFDRixjQUFjLEdBQUdKO1FBQzlDQSxRQUFRTixVQUFVLEdBQUdBO0lBQ3pCO0lBQ0FhLG9CQUFtQkMsZUFBZSxFQUFFQyxjQUFjO1FBQzlDRCxnQkFBZ0JFLE9BQU8sR0FBR0Q7SUFDOUI7SUFDQUUsb0JBQW1CSCxlQUFlO1FBQzlCLE9BQU9BLGdCQUFnQkUsT0FBTztJQUNsQztJQUNBRSxpQkFBZ0JDLFFBQVEsRUFBRUMsSUFBSSxFQUFFQyxRQUFRLEVBQUVDLFFBQVE7UUFDOUMsTUFBTUMsY0FBY0osU0FBU3pCLFVBQVUsQ0FBQzhCLElBQUksQ0FBQyxDQUFDQyxPQUFTQSxLQUFLbEMsUUFBUSxLQUFLO1FBQ3pFLElBQUlnQyxhQUFhO1lBQ2JBLFlBQVlILElBQUksR0FBR0E7WUFDbkJHLFlBQVlGLFFBQVEsR0FBR0E7WUFDdkJFLFlBQVlELFFBQVEsR0FBR0E7UUFDM0IsT0FDSztZQUNELE1BQU1HLE9BQU87Z0JBQ1RsQyxVQUFVO2dCQUNWNkI7Z0JBQ0FDO2dCQUNBQztnQkFDQXRCLFlBQVk7WUFDaEI7WUFDQVgsbUJBQW1CZ0IsV0FBVyxDQUFDYyxVQUFVTTtRQUM3QztJQUNKO0lBQ0FDLGlCQUFnQlAsUUFBUSxFQUFFM0IsSUFBSTtRQUMxQjJCLFNBQVMzQixJQUFJLEdBQUdBO0lBQ3BCO0lBQ0FtQyxpQkFBZ0JSLFFBQVE7UUFDcEIsT0FBT0EsU0FBUzNCLElBQUk7SUFDeEI7SUFDQW9DLFlBQVdILElBQUk7UUFDWCxJQUFJQSxLQUFLekIsVUFBVSxFQUFFO1lBQ2pCLE1BQU02QixNQUFNSixLQUFLekIsVUFBVSxDQUFDTixVQUFVLENBQUNpQixPQUFPLENBQUNjO1lBQy9DQSxLQUFLekIsVUFBVSxDQUFDTixVQUFVLENBQUNrQixNQUFNLENBQUNpQixLQUFLO1lBQ3ZDSixLQUFLekIsVUFBVSxHQUFHO1FBQ3RCO0lBQ0o7SUFDQThCLFlBQVc5QixVQUFVLEVBQUUrQixJQUFJO1FBQ3ZCLElBQUkvQixXQUFXTixVQUFVLENBQUNzQyxNQUFNLEdBQUcsR0FBRztZQUNsQyxNQUFNQyxXQUFXakMsV0FBV04sVUFBVSxDQUFDTSxXQUFXTixVQUFVLENBQUNzQyxNQUFNLEdBQUcsRUFBRTtZQUN4RSxJQUFJM0MsbUJBQW1CNkMsVUFBVSxDQUFDRCxXQUFXO2dCQUN6Q0EsU0FBUzdCLEtBQUssSUFBSTJCO2dCQUNsQjtZQUNKO1FBQ0o7UUFDQTFDLG1CQUFtQmdCLFdBQVcsQ0FBQ0wsWUFBWVgsbUJBQW1CYyxjQUFjLENBQUM0QjtJQUNqRjtJQUNBSSxrQkFBaUJuQyxVQUFVLEVBQUUrQixJQUFJLEVBQUV0QixhQUFhO1FBQzVDLE1BQU13QixXQUFXakMsV0FBV04sVUFBVSxDQUFDTSxXQUFXTixVQUFVLENBQUNpQixPQUFPLENBQUNGLGlCQUFpQixFQUFFO1FBQ3hGLElBQUl3QixZQUFZNUMsbUJBQW1CNkMsVUFBVSxDQUFDRCxXQUFXO1lBQ3JEQSxTQUFTN0IsS0FBSyxJQUFJMkI7UUFDdEIsT0FDSztZQUNEMUMsbUJBQW1CbUIsWUFBWSxDQUFDUixZQUFZWCxtQkFBbUJjLGNBQWMsQ0FBQzRCLE9BQU90QjtRQUN6RjtJQUNKO0lBQ0EyQixpQkFBZ0JDLFNBQVMsRUFBRXRDLEtBQUs7UUFDNUIsTUFBTXVDLG9CQUFvQixJQUFJQyxJQUFJRixVQUFVdEMsS0FBSyxDQUFDeUMsR0FBRyxDQUFDLENBQUNDLE9BQVNBLEtBQUtyQixJQUFJO1FBQ3pFLElBQUssSUFBSXNCLElBQUksR0FBR0EsSUFBSTNDLE1BQU1pQyxNQUFNLEVBQUVVLElBQUs7WUFDbkMsSUFBSSxDQUFDSixrQkFBa0JLLEdBQUcsQ0FBQzVDLEtBQUssQ0FBQzJDLEVBQUUsQ0FBQ3RCLElBQUksR0FBRztnQkFDdkNpQixVQUFVdEMsS0FBSyxDQUFDUSxJQUFJLENBQUNSLEtBQUssQ0FBQzJDLEVBQUU7WUFDakM7UUFDSjtJQUNKO0lBQ0EsaUJBQWlCO0lBQ2pCRSxlQUFjbkIsSUFBSTtRQUNkLE9BQU9BLEtBQUsvQixVQUFVLENBQUMsRUFBRTtJQUM3QjtJQUNBbUQsZUFBY3BCLElBQUk7UUFDZCxPQUFPQSxLQUFLL0IsVUFBVTtJQUMxQjtJQUNBb0QsZUFBY3JCLElBQUk7UUFDZCxPQUFPQSxLQUFLekIsVUFBVTtJQUMxQjtJQUNBK0MsYUFBWUMsT0FBTztRQUNmLE9BQU9BLFFBQVFqRCxLQUFLO0lBQ3hCO0lBQ0EsV0FBVztJQUNYa0QsWUFBV0QsT0FBTztRQUNkLE9BQU9BLFFBQVFuRCxPQUFPO0lBQzFCO0lBQ0FxRCxpQkFBZ0JGLE9BQU87UUFDbkIsT0FBT0EsUUFBUWxELFlBQVk7SUFDL0I7SUFDQXFELG9CQUFtQkMsUUFBUTtRQUN2QixPQUFPQSxTQUFTaEQsS0FBSztJQUN6QjtJQUNBaUQsdUJBQXNCQyxXQUFXO1FBQzdCLE9BQU9BLFlBQVlwRCxJQUFJO0lBQzNCO0lBQ0FxRCx5QkFBd0JoQyxXQUFXO1FBQy9CLE9BQU9BLFlBQVlILElBQUk7SUFDM0I7SUFDQW9DLDZCQUE0QmpDLFdBQVc7UUFDbkMsT0FBT0EsWUFBWUYsUUFBUTtJQUMvQjtJQUNBb0MsNkJBQTRCbEMsV0FBVztRQUNuQyxPQUFPQSxZQUFZRCxRQUFRO0lBQy9CO0lBQ0EsWUFBWTtJQUNaWSxZQUFXVCxJQUFJO1FBQ1gsT0FBT0EsS0FBS2xDLFFBQVEsS0FBSztJQUM3QjtJQUNBbUUsZUFBY2pDLElBQUk7UUFDZCxPQUFPQSxLQUFLbEMsUUFBUSxLQUFLO0lBQzdCO0lBQ0FvRSxvQkFBbUJsQyxJQUFJO1FBQ25CLE9BQU9BLEtBQUtsQyxRQUFRLEtBQUs7SUFDN0I7SUFDQXFFLGVBQWNuQyxJQUFJO1FBQ2QsT0FBT29DLE9BQU9DLFNBQVMsQ0FBQ0MsY0FBYyxDQUFDQyxJQUFJLENBQUN2QyxNQUFNO0lBQ3REO0lBQ0EsdUJBQXVCO0lBQ3ZCd0MsMkJBQTBCeEMsSUFBSSxFQUFFeUMsUUFBUTtRQUNwQ3pDLEtBQUswQyxrQkFBa0IsR0FBR0Q7SUFDOUI7SUFDQUUsMkJBQTBCM0MsSUFBSTtRQUMxQixPQUFPQSxLQUFLMEMsa0JBQWtCO0lBQ2xDO0lBQ0FFLDhCQUE2QjVDLElBQUksRUFBRTZDLFdBQVc7UUFDMUM3QyxLQUFLMEMsa0JBQWtCLEdBQUc7WUFBRSxHQUFHMUMsS0FBSzBDLGtCQUFrQjtZQUFFLEdBQUdHLFdBQVc7UUFBQztJQUMzRTtBQUNKLEVBQUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iZW50by1ncmlkLWdlbmVyYXRvci8uL25vZGVfbW9kdWxlcy9wYXJzZTUvZGlzdC90cmVlLWFkYXB0ZXJzL2RlZmF1bHQuanM/NGZiNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBET0NVTUVOVF9NT0RFIH0gZnJvbSAnLi4vY29tbW9uL2h0bWwuanMnO1xuZXhwb3J0IGNvbnN0IGRlZmF1bHRUcmVlQWRhcHRlciA9IHtcbiAgICAvL05vZGUgY29uc3RydWN0aW9uXG4gICAgY3JlYXRlRG9jdW1lbnQoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBub2RlTmFtZTogJyNkb2N1bWVudCcsXG4gICAgICAgICAgICBtb2RlOiBET0NVTUVOVF9NT0RFLk5PX1FVSVJLUyxcbiAgICAgICAgICAgIGNoaWxkTm9kZXM6IFtdLFxuICAgICAgICB9O1xuICAgIH0sXG4gICAgY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5vZGVOYW1lOiAnI2RvY3VtZW50LWZyYWdtZW50JyxcbiAgICAgICAgICAgIGNoaWxkTm9kZXM6IFtdLFxuICAgICAgICB9O1xuICAgIH0sXG4gICAgY3JlYXRlRWxlbWVudCh0YWdOYW1lLCBuYW1lc3BhY2VVUkksIGF0dHJzKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBub2RlTmFtZTogdGFnTmFtZSxcbiAgICAgICAgICAgIHRhZ05hbWUsXG4gICAgICAgICAgICBhdHRycyxcbiAgICAgICAgICAgIG5hbWVzcGFjZVVSSSxcbiAgICAgICAgICAgIGNoaWxkTm9kZXM6IFtdLFxuICAgICAgICAgICAgcGFyZW50Tm9kZTogbnVsbCxcbiAgICAgICAgfTtcbiAgICB9LFxuICAgIGNyZWF0ZUNvbW1lbnROb2RlKGRhdGEpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5vZGVOYW1lOiAnI2NvbW1lbnQnLFxuICAgICAgICAgICAgZGF0YSxcbiAgICAgICAgICAgIHBhcmVudE5vZGU6IG51bGwsXG4gICAgICAgIH07XG4gICAgfSxcbiAgICBjcmVhdGVUZXh0Tm9kZSh2YWx1ZSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbm9kZU5hbWU6ICcjdGV4dCcsXG4gICAgICAgICAgICB2YWx1ZSxcbiAgICAgICAgICAgIHBhcmVudE5vZGU6IG51bGwsXG4gICAgICAgIH07XG4gICAgfSxcbiAgICAvL1RyZWUgbXV0YXRpb25cbiAgICBhcHBlbmRDaGlsZChwYXJlbnROb2RlLCBuZXdOb2RlKSB7XG4gICAgICAgIHBhcmVudE5vZGUuY2hpbGROb2Rlcy5wdXNoKG5ld05vZGUpO1xuICAgICAgICBuZXdOb2RlLnBhcmVudE5vZGUgPSBwYXJlbnROb2RlO1xuICAgIH0sXG4gICAgaW5zZXJ0QmVmb3JlKHBhcmVudE5vZGUsIG5ld05vZGUsIHJlZmVyZW5jZU5vZGUpIHtcbiAgICAgICAgY29uc3QgaW5zZXJ0aW9uSWR4ID0gcGFyZW50Tm9kZS5jaGlsZE5vZGVzLmluZGV4T2YocmVmZXJlbmNlTm9kZSk7XG4gICAgICAgIHBhcmVudE5vZGUuY2hpbGROb2Rlcy5zcGxpY2UoaW5zZXJ0aW9uSWR4LCAwLCBuZXdOb2RlKTtcbiAgICAgICAgbmV3Tm9kZS5wYXJlbnROb2RlID0gcGFyZW50Tm9kZTtcbiAgICB9LFxuICAgIHNldFRlbXBsYXRlQ29udGVudCh0ZW1wbGF0ZUVsZW1lbnQsIGNvbnRlbnRFbGVtZW50KSB7XG4gICAgICAgIHRlbXBsYXRlRWxlbWVudC5jb250ZW50ID0gY29udGVudEVsZW1lbnQ7XG4gICAgfSxcbiAgICBnZXRUZW1wbGF0ZUNvbnRlbnQodGVtcGxhdGVFbGVtZW50KSB7XG4gICAgICAgIHJldHVybiB0ZW1wbGF0ZUVsZW1lbnQuY29udGVudDtcbiAgICB9LFxuICAgIHNldERvY3VtZW50VHlwZShkb2N1bWVudCwgbmFtZSwgcHVibGljSWQsIHN5c3RlbUlkKSB7XG4gICAgICAgIGNvbnN0IGRvY3R5cGVOb2RlID0gZG9jdW1lbnQuY2hpbGROb2Rlcy5maW5kKChub2RlKSA9PiBub2RlLm5vZGVOYW1lID09PSAnI2RvY3VtZW50VHlwZScpO1xuICAgICAgICBpZiAoZG9jdHlwZU5vZGUpIHtcbiAgICAgICAgICAgIGRvY3R5cGVOb2RlLm5hbWUgPSBuYW1lO1xuICAgICAgICAgICAgZG9jdHlwZU5vZGUucHVibGljSWQgPSBwdWJsaWNJZDtcbiAgICAgICAgICAgIGRvY3R5cGVOb2RlLnN5c3RlbUlkID0gc3lzdGVtSWQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBub2RlID0ge1xuICAgICAgICAgICAgICAgIG5vZGVOYW1lOiAnI2RvY3VtZW50VHlwZScsXG4gICAgICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgICAgICBwdWJsaWNJZCxcbiAgICAgICAgICAgICAgICBzeXN0ZW1JZCxcbiAgICAgICAgICAgICAgICBwYXJlbnROb2RlOiBudWxsLFxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGRlZmF1bHRUcmVlQWRhcHRlci5hcHBlbmRDaGlsZChkb2N1bWVudCwgbm9kZSk7XG4gICAgICAgIH1cbiAgICB9LFxuICAgIHNldERvY3VtZW50TW9kZShkb2N1bWVudCwgbW9kZSkge1xuICAgICAgICBkb2N1bWVudC5tb2RlID0gbW9kZTtcbiAgICB9LFxuICAgIGdldERvY3VtZW50TW9kZShkb2N1bWVudCkge1xuICAgICAgICByZXR1cm4gZG9jdW1lbnQubW9kZTtcbiAgICB9LFxuICAgIGRldGFjaE5vZGUobm9kZSkge1xuICAgICAgICBpZiAobm9kZS5wYXJlbnROb2RlKSB7XG4gICAgICAgICAgICBjb25zdCBpZHggPSBub2RlLnBhcmVudE5vZGUuY2hpbGROb2Rlcy5pbmRleE9mKG5vZGUpO1xuICAgICAgICAgICAgbm9kZS5wYXJlbnROb2RlLmNoaWxkTm9kZXMuc3BsaWNlKGlkeCwgMSk7XG4gICAgICAgICAgICBub2RlLnBhcmVudE5vZGUgPSBudWxsO1xuICAgICAgICB9XG4gICAgfSxcbiAgICBpbnNlcnRUZXh0KHBhcmVudE5vZGUsIHRleHQpIHtcbiAgICAgICAgaWYgKHBhcmVudE5vZGUuY2hpbGROb2Rlcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICBjb25zdCBwcmV2Tm9kZSA9IHBhcmVudE5vZGUuY2hpbGROb2Rlc1twYXJlbnROb2RlLmNoaWxkTm9kZXMubGVuZ3RoIC0gMV07XG4gICAgICAgICAgICBpZiAoZGVmYXVsdFRyZWVBZGFwdGVyLmlzVGV4dE5vZGUocHJldk5vZGUpKSB7XG4gICAgICAgICAgICAgICAgcHJldk5vZGUudmFsdWUgKz0gdGV4dDtcbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZGVmYXVsdFRyZWVBZGFwdGVyLmFwcGVuZENoaWxkKHBhcmVudE5vZGUsIGRlZmF1bHRUcmVlQWRhcHRlci5jcmVhdGVUZXh0Tm9kZSh0ZXh0KSk7XG4gICAgfSxcbiAgICBpbnNlcnRUZXh0QmVmb3JlKHBhcmVudE5vZGUsIHRleHQsIHJlZmVyZW5jZU5vZGUpIHtcbiAgICAgICAgY29uc3QgcHJldk5vZGUgPSBwYXJlbnROb2RlLmNoaWxkTm9kZXNbcGFyZW50Tm9kZS5jaGlsZE5vZGVzLmluZGV4T2YocmVmZXJlbmNlTm9kZSkgLSAxXTtcbiAgICAgICAgaWYgKHByZXZOb2RlICYmIGRlZmF1bHRUcmVlQWRhcHRlci5pc1RleHROb2RlKHByZXZOb2RlKSkge1xuICAgICAgICAgICAgcHJldk5vZGUudmFsdWUgKz0gdGV4dDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGRlZmF1bHRUcmVlQWRhcHRlci5pbnNlcnRCZWZvcmUocGFyZW50Tm9kZSwgZGVmYXVsdFRyZWVBZGFwdGVyLmNyZWF0ZVRleHROb2RlKHRleHQpLCByZWZlcmVuY2VOb2RlKTtcbiAgICAgICAgfVxuICAgIH0sXG4gICAgYWRvcHRBdHRyaWJ1dGVzKHJlY2lwaWVudCwgYXR0cnMpIHtcbiAgICAgICAgY29uc3QgcmVjaXBpZW50QXR0cnNNYXAgPSBuZXcgU2V0KHJlY2lwaWVudC5hdHRycy5tYXAoKGF0dHIpID0+IGF0dHIubmFtZSkpO1xuICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IGF0dHJzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgICBpZiAoIXJlY2lwaWVudEF0dHJzTWFwLmhhcyhhdHRyc1tqXS5uYW1lKSkge1xuICAgICAgICAgICAgICAgIHJlY2lwaWVudC5hdHRycy5wdXNoKGF0dHJzW2pdKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH0sXG4gICAgLy9UcmVlIHRyYXZlcnNpbmdcbiAgICBnZXRGaXJzdENoaWxkKG5vZGUpIHtcbiAgICAgICAgcmV0dXJuIG5vZGUuY2hpbGROb2Rlc1swXTtcbiAgICB9LFxuICAgIGdldENoaWxkTm9kZXMobm9kZSkge1xuICAgICAgICByZXR1cm4gbm9kZS5jaGlsZE5vZGVzO1xuICAgIH0sXG4gICAgZ2V0UGFyZW50Tm9kZShub2RlKSB7XG4gICAgICAgIHJldHVybiBub2RlLnBhcmVudE5vZGU7XG4gICAgfSxcbiAgICBnZXRBdHRyTGlzdChlbGVtZW50KSB7XG4gICAgICAgIHJldHVybiBlbGVtZW50LmF0dHJzO1xuICAgIH0sXG4gICAgLy9Ob2RlIGRhdGFcbiAgICBnZXRUYWdOYW1lKGVsZW1lbnQpIHtcbiAgICAgICAgcmV0dXJuIGVsZW1lbnQudGFnTmFtZTtcbiAgICB9LFxuICAgIGdldE5hbWVzcGFjZVVSSShlbGVtZW50KSB7XG4gICAgICAgIHJldHVybiBlbGVtZW50Lm5hbWVzcGFjZVVSSTtcbiAgICB9LFxuICAgIGdldFRleHROb2RlQ29udGVudCh0ZXh0Tm9kZSkge1xuICAgICAgICByZXR1cm4gdGV4dE5vZGUudmFsdWU7XG4gICAgfSxcbiAgICBnZXRDb21tZW50Tm9kZUNvbnRlbnQoY29tbWVudE5vZGUpIHtcbiAgICAgICAgcmV0dXJuIGNvbW1lbnROb2RlLmRhdGE7XG4gICAgfSxcbiAgICBnZXREb2N1bWVudFR5cGVOb2RlTmFtZShkb2N0eXBlTm9kZSkge1xuICAgICAgICByZXR1cm4gZG9jdHlwZU5vZGUubmFtZTtcbiAgICB9LFxuICAgIGdldERvY3VtZW50VHlwZU5vZGVQdWJsaWNJZChkb2N0eXBlTm9kZSkge1xuICAgICAgICByZXR1cm4gZG9jdHlwZU5vZGUucHVibGljSWQ7XG4gICAgfSxcbiAgICBnZXREb2N1bWVudFR5cGVOb2RlU3lzdGVtSWQoZG9jdHlwZU5vZGUpIHtcbiAgICAgICAgcmV0dXJuIGRvY3R5cGVOb2RlLnN5c3RlbUlkO1xuICAgIH0sXG4gICAgLy9Ob2RlIHR5cGVzXG4gICAgaXNUZXh0Tm9kZShub2RlKSB7XG4gICAgICAgIHJldHVybiBub2RlLm5vZGVOYW1lID09PSAnI3RleHQnO1xuICAgIH0sXG4gICAgaXNDb21tZW50Tm9kZShub2RlKSB7XG4gICAgICAgIHJldHVybiBub2RlLm5vZGVOYW1lID09PSAnI2NvbW1lbnQnO1xuICAgIH0sXG4gICAgaXNEb2N1bWVudFR5cGVOb2RlKG5vZGUpIHtcbiAgICAgICAgcmV0dXJuIG5vZGUubm9kZU5hbWUgPT09ICcjZG9jdW1lbnRUeXBlJztcbiAgICB9LFxuICAgIGlzRWxlbWVudE5vZGUobm9kZSkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG5vZGUsICd0YWdOYW1lJyk7XG4gICAgfSxcbiAgICAvLyBTb3VyY2UgY29kZSBsb2NhdGlvblxuICAgIHNldE5vZGVTb3VyY2VDb2RlTG9jYXRpb24obm9kZSwgbG9jYXRpb24pIHtcbiAgICAgICAgbm9kZS5zb3VyY2VDb2RlTG9jYXRpb24gPSBsb2NhdGlvbjtcbiAgICB9LFxuICAgIGdldE5vZGVTb3VyY2VDb2RlTG9jYXRpb24obm9kZSkge1xuICAgICAgICByZXR1cm4gbm9kZS5zb3VyY2VDb2RlTG9jYXRpb247XG4gICAgfSxcbiAgICB1cGRhdGVOb2RlU291cmNlQ29kZUxvY2F0aW9uKG5vZGUsIGVuZExvY2F0aW9uKSB7XG4gICAgICAgIG5vZGUuc291cmNlQ29kZUxvY2F0aW9uID0geyAuLi5ub2RlLnNvdXJjZUNvZGVMb2NhdGlvbiwgLi4uZW5kTG9jYXRpb24gfTtcbiAgICB9LFxufTtcbiJdLCJuYW1lcyI6WyJET0NVTUVOVF9NT0RFIiwiZGVmYXVsdFRyZWVBZGFwdGVyIiwiY3JlYXRlRG9jdW1lbnQiLCJub2RlTmFtZSIsIm1vZGUiLCJOT19RVUlSS1MiLCJjaGlsZE5vZGVzIiwiY3JlYXRlRG9jdW1lbnRGcmFnbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJ0YWdOYW1lIiwibmFtZXNwYWNlVVJJIiwiYXR0cnMiLCJwYXJlbnROb2RlIiwiY3JlYXRlQ29tbWVudE5vZGUiLCJkYXRhIiwiY3JlYXRlVGV4dE5vZGUiLCJ2YWx1ZSIsImFwcGVuZENoaWxkIiwibmV3Tm9kZSIsInB1c2giLCJpbnNlcnRCZWZvcmUiLCJyZWZlcmVuY2VOb2RlIiwiaW5zZXJ0aW9uSWR4IiwiaW5kZXhPZiIsInNwbGljZSIsInNldFRlbXBsYXRlQ29udGVudCIsInRlbXBsYXRlRWxlbWVudCIsImNvbnRlbnRFbGVtZW50IiwiY29udGVudCIsImdldFRlbXBsYXRlQ29udGVudCIsInNldERvY3VtZW50VHlwZSIsImRvY3VtZW50IiwibmFtZSIsInB1YmxpY0lkIiwic3lzdGVtSWQiLCJkb2N0eXBlTm9kZSIsImZpbmQiLCJub2RlIiwic2V0RG9jdW1lbnRNb2RlIiwiZ2V0RG9jdW1lbnRNb2RlIiwiZGV0YWNoTm9kZSIsImlkeCIsImluc2VydFRleHQiLCJ0ZXh0IiwibGVuZ3RoIiwicHJldk5vZGUiLCJpc1RleHROb2RlIiwiaW5zZXJ0VGV4dEJlZm9yZSIsImFkb3B0QXR0cmlidXRlcyIsInJlY2lwaWVudCIsInJlY2lwaWVudEF0dHJzTWFwIiwiU2V0IiwibWFwIiwiYXR0ciIsImoiLCJoYXMiLCJnZXRGaXJzdENoaWxkIiwiZ2V0Q2hpbGROb2RlcyIsImdldFBhcmVudE5vZGUiLCJnZXRBdHRyTGlzdCIsImVsZW1lbnQiLCJnZXRUYWdOYW1lIiwiZ2V0TmFtZXNwYWNlVVJJIiwiZ2V0VGV4dE5vZGVDb250ZW50IiwidGV4dE5vZGUiLCJnZXRDb21tZW50Tm9kZUNvbnRlbnQiLCJjb21tZW50Tm9kZSIsImdldERvY3VtZW50VHlwZU5vZGVOYW1lIiwiZ2V0RG9jdW1lbnRUeXBlTm9kZVB1YmxpY0lkIiwiZ2V0RG9jdW1lbnRUeXBlTm9kZVN5c3RlbUlkIiwiaXNDb21tZW50Tm9kZSIsImlzRG9jdW1lbnRUeXBlTm9kZSIsImlzRWxlbWVudE5vZGUiLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzZXROb2RlU291cmNlQ29kZUxvY2F0aW9uIiwibG9jYXRpb24iLCJzb3VyY2VDb2RlTG9jYXRpb24iLCJnZXROb2RlU291cmNlQ29kZUxvY2F0aW9uIiwidXBkYXRlTm9kZVNvdXJjZUNvZGVMb2NhdGlvbiIsImVuZExvY2F0aW9uIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/dist/tree-adapters/default.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/node_modules/entities/dist/esm/decode-codepoint.js":
/*!********************************************************************************!*\
  !*** ./node_modules/parse5/node_modules/entities/dist/esm/decode-codepoint.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeCodePoint: () => (/* binding */ decodeCodePoint),\n/* harmony export */   fromCodePoint: () => (/* binding */ fromCodePoint),\n/* harmony export */   replaceCodePoint: () => (/* binding */ replaceCodePoint)\n/* harmony export */ });\n// Adapted from https://github.com/mathiasbynens/he/blob/36afe179392226cf1b6ccdb16ebbb7a5a844d93a/src/he.js#L106-L134\nvar _a;\nconst decodeMap = new Map([\n    [\n        0,\n        65533\n    ],\n    // C1 Unicode control character reference replacements\n    [\n        128,\n        8364\n    ],\n    [\n        130,\n        8218\n    ],\n    [\n        131,\n        402\n    ],\n    [\n        132,\n        8222\n    ],\n    [\n        133,\n        8230\n    ],\n    [\n        134,\n        8224\n    ],\n    [\n        135,\n        8225\n    ],\n    [\n        136,\n        710\n    ],\n    [\n        137,\n        8240\n    ],\n    [\n        138,\n        352\n    ],\n    [\n        139,\n        8249\n    ],\n    [\n        140,\n        338\n    ],\n    [\n        142,\n        381\n    ],\n    [\n        145,\n        8216\n    ],\n    [\n        146,\n        8217\n    ],\n    [\n        147,\n        8220\n    ],\n    [\n        148,\n        8221\n    ],\n    [\n        149,\n        8226\n    ],\n    [\n        150,\n        8211\n    ],\n    [\n        151,\n        8212\n    ],\n    [\n        152,\n        732\n    ],\n    [\n        153,\n        8482\n    ],\n    [\n        154,\n        353\n    ],\n    [\n        155,\n        8250\n    ],\n    [\n        156,\n        339\n    ],\n    [\n        158,\n        382\n    ],\n    [\n        159,\n        376\n    ]\n]);\n/**\n * Polyfill for `String.fromCodePoint`. It is used to create a string from a Unicode code point.\n */ const fromCodePoint = // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, n/no-unsupported-features/es-builtins\n(_a = String.fromCodePoint) !== null && _a !== void 0 ? _a : function(codePoint) {\n    let output = \"\";\n    if (codePoint > 65535) {\n        codePoint -= 65536;\n        output += String.fromCharCode(codePoint >>> 10 & 1023 | 55296);\n        codePoint = 56320 | codePoint & 1023;\n    }\n    output += String.fromCharCode(codePoint);\n    return output;\n};\n/**\n * Replace the given code point with a replacement character if it is a\n * surrogate or is outside the valid range. Otherwise return the code\n * point unchanged.\n */ function replaceCodePoint(codePoint) {\n    var _a;\n    if (codePoint >= 55296 && codePoint <= 57343 || codePoint > 1114111) {\n        return 65533;\n    }\n    return (_a = decodeMap.get(codePoint)) !== null && _a !== void 0 ? _a : codePoint;\n}\n/**\n * Replace the code point if relevant, then convert it to a string.\n *\n * @deprecated Use `fromCodePoint(replaceCodePoint(codePoint))` instead.\n * @param codePoint The code point to decode.\n * @returns The decoded code point.\n */ function decodeCodePoint(codePoint) {\n    return fromCodePoint(replaceCodePoint(codePoint));\n} //# sourceMappingURL=decode-codepoint.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcGFyc2U1L25vZGVfbW9kdWxlcy9lbnRpdGllcy9kaXN0L2VzbS9kZWNvZGUtY29kZXBvaW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLHFIQUFxSDtBQUNySCxJQUFJQTtBQUNKLE1BQU1DLFlBQVksSUFBSUMsSUFBSTtJQUN0QjtRQUFDO1FBQUc7S0FBTTtJQUNWLHNEQUFzRDtJQUN0RDtRQUFDO1FBQUs7S0FBSztJQUNYO1FBQUM7UUFBSztLQUFLO0lBQ1g7UUFBQztRQUFLO0tBQUk7SUFDVjtRQUFDO1FBQUs7S0FBSztJQUNYO1FBQUM7UUFBSztLQUFLO0lBQ1g7UUFBQztRQUFLO0tBQUs7SUFDWDtRQUFDO1FBQUs7S0FBSztJQUNYO1FBQUM7UUFBSztLQUFJO0lBQ1Y7UUFBQztRQUFLO0tBQUs7SUFDWDtRQUFDO1FBQUs7S0FBSTtJQUNWO1FBQUM7UUFBSztLQUFLO0lBQ1g7UUFBQztRQUFLO0tBQUk7SUFDVjtRQUFDO1FBQUs7S0FBSTtJQUNWO1FBQUM7UUFBSztLQUFLO0lBQ1g7UUFBQztRQUFLO0tBQUs7SUFDWDtRQUFDO1FBQUs7S0FBSztJQUNYO1FBQUM7UUFBSztLQUFLO0lBQ1g7UUFBQztRQUFLO0tBQUs7SUFDWDtRQUFDO1FBQUs7S0FBSztJQUNYO1FBQUM7UUFBSztLQUFLO0lBQ1g7UUFBQztRQUFLO0tBQUk7SUFDVjtRQUFDO1FBQUs7S0FBSztJQUNYO1FBQUM7UUFBSztLQUFJO0lBQ1Y7UUFBQztRQUFLO0tBQUs7SUFDWDtRQUFDO1FBQUs7S0FBSTtJQUNWO1FBQUM7UUFBSztLQUFJO0lBQ1Y7UUFBQztRQUFLO0tBQUk7Q0FDYjtBQUNEOztDQUVDLEdBQ00sTUFBTUMsZ0JBRWIsOEdBRDhHO0FBQzdHSCxDQUFBQSxLQUFLSSxPQUFPRCxhQUFhLE1BQU0sUUFBUUgsT0FBTyxLQUFLLElBQUlBLEtBQUssU0FBVUssU0FBUztJQUM1RSxJQUFJQyxTQUFTO0lBQ2IsSUFBSUQsWUFBWSxPQUFPO1FBQ25CQSxhQUFhO1FBQ2JDLFVBQVVGLE9BQU9HLFlBQVksQ0FBQyxjQUFnQixLQUFNLE9BQVE7UUFDNURGLFlBQVksUUFBU0EsWUFBWTtJQUNyQztJQUNBQyxVQUFVRixPQUFPRyxZQUFZLENBQUNGO0lBQzlCLE9BQU9DO0FBQ1gsRUFBRTtBQUNGOzs7O0NBSUMsR0FDTSxTQUFTRSxpQkFBaUJILFNBQVM7SUFDdEMsSUFBSUw7SUFDSixJQUFJLGFBQWMsU0FBU0ssYUFBYSxTQUNwQ0EsWUFBWSxTQUFTO1FBQ3JCLE9BQU87SUFDWDtJQUNBLE9BQU8sQ0FBQ0wsS0FBS0MsVUFBVVEsR0FBRyxDQUFDSixVQUFTLE1BQU8sUUFBUUwsT0FBTyxLQUFLLElBQUlBLEtBQUtLO0FBQzVFO0FBQ0E7Ozs7OztDQU1DLEdBQ00sU0FBU0ssZ0JBQWdCTCxTQUFTO0lBQ3JDLE9BQU9GLGNBQWNLLGlCQUFpQkg7QUFDMUMsRUFDQSw0Q0FBNEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iZW50by1ncmlkLWdlbmVyYXRvci8uL25vZGVfbW9kdWxlcy9wYXJzZTUvbm9kZV9tb2R1bGVzL2VudGl0aWVzL2Rpc3QvZXNtL2RlY29kZS1jb2RlcG9pbnQuanM/NThiMyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBBZGFwdGVkIGZyb20gaHR0cHM6Ly9naXRodWIuY29tL21hdGhpYXNieW5lbnMvaGUvYmxvYi8zNmFmZTE3OTM5MjIyNmNmMWI2Y2NkYjE2ZWJiYjdhNWE4NDRkOTNhL3NyYy9oZS5qcyNMMTA2LUwxMzRcbnZhciBfYTtcbmNvbnN0IGRlY29kZU1hcCA9IG5ldyBNYXAoW1xuICAgIFswLCA2NTUzM10sXG4gICAgLy8gQzEgVW5pY29kZSBjb250cm9sIGNoYXJhY3RlciByZWZlcmVuY2UgcmVwbGFjZW1lbnRzXG4gICAgWzEyOCwgODM2NF0sXG4gICAgWzEzMCwgODIxOF0sXG4gICAgWzEzMSwgNDAyXSxcbiAgICBbMTMyLCA4MjIyXSxcbiAgICBbMTMzLCA4MjMwXSxcbiAgICBbMTM0LCA4MjI0XSxcbiAgICBbMTM1LCA4MjI1XSxcbiAgICBbMTM2LCA3MTBdLFxuICAgIFsxMzcsIDgyNDBdLFxuICAgIFsxMzgsIDM1Ml0sXG4gICAgWzEzOSwgODI0OV0sXG4gICAgWzE0MCwgMzM4XSxcbiAgICBbMTQyLCAzODFdLFxuICAgIFsxNDUsIDgyMTZdLFxuICAgIFsxNDYsIDgyMTddLFxuICAgIFsxNDcsIDgyMjBdLFxuICAgIFsxNDgsIDgyMjFdLFxuICAgIFsxNDksIDgyMjZdLFxuICAgIFsxNTAsIDgyMTFdLFxuICAgIFsxNTEsIDgyMTJdLFxuICAgIFsxNTIsIDczMl0sXG4gICAgWzE1MywgODQ4Ml0sXG4gICAgWzE1NCwgMzUzXSxcbiAgICBbMTU1LCA4MjUwXSxcbiAgICBbMTU2LCAzMzldLFxuICAgIFsxNTgsIDM4Ml0sXG4gICAgWzE1OSwgMzc2XSxcbl0pO1xuLyoqXG4gKiBQb2x5ZmlsbCBmb3IgYFN0cmluZy5mcm9tQ29kZVBvaW50YC4gSXQgaXMgdXNlZCB0byBjcmVhdGUgYSBzdHJpbmcgZnJvbSBhIFVuaWNvZGUgY29kZSBwb2ludC5cbiAqL1xuZXhwb3J0IGNvbnN0IGZyb21Db2RlUG9pbnQgPSBcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tdW5uZWNlc3NhcnktY29uZGl0aW9uLCBuL25vLXVuc3VwcG9ydGVkLWZlYXR1cmVzL2VzLWJ1aWx0aW5zXG4oX2EgPSBTdHJpbmcuZnJvbUNvZGVQb2ludCkgIT09IG51bGwgJiYgX2EgIT09IHZvaWQgMCA/IF9hIDogZnVuY3Rpb24gKGNvZGVQb2ludCkge1xuICAgIGxldCBvdXRwdXQgPSBcIlwiO1xuICAgIGlmIChjb2RlUG9pbnQgPiA2NTUzNSkge1xuICAgICAgICBjb2RlUG9pbnQgLT0gNjU1MzY7XG4gICAgICAgIG91dHB1dCArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKCgoY29kZVBvaW50ID4+PiAxMCkgJiAxMDIzKSB8IDU1Mjk2KTtcbiAgICAgICAgY29kZVBvaW50ID0gNTYzMjAgfCAoY29kZVBvaW50ICYgMTAyMyk7XG4gICAgfVxuICAgIG91dHB1dCArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKGNvZGVQb2ludCk7XG4gICAgcmV0dXJuIG91dHB1dDtcbn07XG4vKipcbiAqIFJlcGxhY2UgdGhlIGdpdmVuIGNvZGUgcG9pbnQgd2l0aCBhIHJlcGxhY2VtZW50IGNoYXJhY3RlciBpZiBpdCBpcyBhXG4gKiBzdXJyb2dhdGUgb3IgaXMgb3V0c2lkZSB0aGUgdmFsaWQgcmFuZ2UuIE90aGVyd2lzZSByZXR1cm4gdGhlIGNvZGVcbiAqIHBvaW50IHVuY2hhbmdlZC5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlcGxhY2VDb2RlUG9pbnQoY29kZVBvaW50KSB7XG4gICAgdmFyIF9hO1xuICAgIGlmICgoY29kZVBvaW50ID49IDU1Mjk2ICYmIGNvZGVQb2ludCA8PSA1NzM0MykgfHxcbiAgICAgICAgY29kZVBvaW50ID4gMTExNDExMSkge1xuICAgICAgICByZXR1cm4gNjU1MzM7XG4gICAgfVxuICAgIHJldHVybiAoX2EgPSBkZWNvZGVNYXAuZ2V0KGNvZGVQb2ludCkpICE9PSBudWxsICYmIF9hICE9PSB2b2lkIDAgPyBfYSA6IGNvZGVQb2ludDtcbn1cbi8qKlxuICogUmVwbGFjZSB0aGUgY29kZSBwb2ludCBpZiByZWxldmFudCwgdGhlbiBjb252ZXJ0IGl0IHRvIGEgc3RyaW5nLlxuICpcbiAqIEBkZXByZWNhdGVkIFVzZSBgZnJvbUNvZGVQb2ludChyZXBsYWNlQ29kZVBvaW50KGNvZGVQb2ludCkpYCBpbnN0ZWFkLlxuICogQHBhcmFtIGNvZGVQb2ludCBUaGUgY29kZSBwb2ludCB0byBkZWNvZGUuXG4gKiBAcmV0dXJucyBUaGUgZGVjb2RlZCBjb2RlIHBvaW50LlxuICovXG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQ29kZVBvaW50KGNvZGVQb2ludCkge1xuICAgIHJldHVybiBmcm9tQ29kZVBvaW50KHJlcGxhY2VDb2RlUG9pbnQoY29kZVBvaW50KSk7XG59XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWNvZGUtY29kZXBvaW50LmpzLm1hcCJdLCJuYW1lcyI6WyJfYSIsImRlY29kZU1hcCIsIk1hcCIsImZyb21Db2RlUG9pbnQiLCJTdHJpbmciLCJjb2RlUG9pbnQiLCJvdXRwdXQiLCJmcm9tQ2hhckNvZGUiLCJyZXBsYWNlQ29kZVBvaW50IiwiZ2V0IiwiZGVjb2RlQ29kZVBvaW50Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/node_modules/entities/dist/esm/decode-codepoint.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/node_modules/entities/dist/esm/decode.js":
/*!**********************************************************************!*\
  !*** ./node_modules/parse5/node_modules/entities/dist/esm/decode.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BinTrieFlags: () => (/* binding */ BinTrieFlags),\n/* harmony export */   DecodingMode: () => (/* binding */ DecodingMode),\n/* harmony export */   EntityDecoder: () => (/* binding */ EntityDecoder),\n/* harmony export */   decodeCodePoint: () => (/* reexport safe */ _decode_codepoint_js__WEBPACK_IMPORTED_MODULE_2__.decodeCodePoint),\n/* harmony export */   decodeHTML: () => (/* binding */ decodeHTML),\n/* harmony export */   decodeHTMLAttribute: () => (/* binding */ decodeHTMLAttribute),\n/* harmony export */   decodeHTMLStrict: () => (/* binding */ decodeHTMLStrict),\n/* harmony export */   decodeXML: () => (/* binding */ decodeXML),\n/* harmony export */   determineBranch: () => (/* binding */ determineBranch),\n/* harmony export */   fromCodePoint: () => (/* reexport safe */ _decode_codepoint_js__WEBPACK_IMPORTED_MODULE_2__.fromCodePoint),\n/* harmony export */   htmlDecodeTree: () => (/* reexport safe */ _generated_decode_data_html_js__WEBPACK_IMPORTED_MODULE_0__.htmlDecodeTree),\n/* harmony export */   replaceCodePoint: () => (/* reexport safe */ _decode_codepoint_js__WEBPACK_IMPORTED_MODULE_2__.replaceCodePoint),\n/* harmony export */   xmlDecodeTree: () => (/* reexport safe */ _generated_decode_data_xml_js__WEBPACK_IMPORTED_MODULE_1__.xmlDecodeTree)\n/* harmony export */ });\n/* harmony import */ var _generated_decode_data_html_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./generated/decode-data-html.js */ \"(rsc)/./node_modules/parse5/node_modules/entities/dist/esm/generated/decode-data-html.js\");\n/* harmony import */ var _generated_decode_data_xml_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./generated/decode-data-xml.js */ \"(rsc)/./node_modules/parse5/node_modules/entities/dist/esm/generated/decode-data-xml.js\");\n/* harmony import */ var _decode_codepoint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./decode-codepoint.js */ \"(rsc)/./node_modules/parse5/node_modules/entities/dist/esm/decode-codepoint.js\");\n\n\n\nvar CharCodes;\n(function(CharCodes) {\n    CharCodes[CharCodes[\"NUM\"] = 35] = \"NUM\";\n    CharCodes[CharCodes[\"SEMI\"] = 59] = \"SEMI\";\n    CharCodes[CharCodes[\"EQUALS\"] = 61] = \"EQUALS\";\n    CharCodes[CharCodes[\"ZERO\"] = 48] = \"ZERO\";\n    CharCodes[CharCodes[\"NINE\"] = 57] = \"NINE\";\n    CharCodes[CharCodes[\"LOWER_A\"] = 97] = \"LOWER_A\";\n    CharCodes[CharCodes[\"LOWER_F\"] = 102] = \"LOWER_F\";\n    CharCodes[CharCodes[\"LOWER_X\"] = 120] = \"LOWER_X\";\n    CharCodes[CharCodes[\"LOWER_Z\"] = 122] = \"LOWER_Z\";\n    CharCodes[CharCodes[\"UPPER_A\"] = 65] = \"UPPER_A\";\n    CharCodes[CharCodes[\"UPPER_F\"] = 70] = \"UPPER_F\";\n    CharCodes[CharCodes[\"UPPER_Z\"] = 90] = \"UPPER_Z\";\n})(CharCodes || (CharCodes = {}));\n/** Bit that needs to be set to convert an upper case ASCII character to lower case */ const TO_LOWER_BIT = 32;\nvar BinTrieFlags;\n(function(BinTrieFlags) {\n    BinTrieFlags[BinTrieFlags[\"VALUE_LENGTH\"] = 49152] = \"VALUE_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"BRANCH_LENGTH\"] = 16256] = \"BRANCH_LENGTH\";\n    BinTrieFlags[BinTrieFlags[\"JUMP_TABLE\"] = 127] = \"JUMP_TABLE\";\n})(BinTrieFlags || (BinTrieFlags = {}));\nfunction isNumber(code) {\n    return code >= CharCodes.ZERO && code <= CharCodes.NINE;\n}\nfunction isHexadecimalCharacter(code) {\n    return code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_F || code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_F;\n}\nfunction isAsciiAlphaNumeric(code) {\n    return code >= CharCodes.UPPER_A && code <= CharCodes.UPPER_Z || code >= CharCodes.LOWER_A && code <= CharCodes.LOWER_Z || isNumber(code);\n}\n/**\n * Checks if the given character is a valid end character for an entity in an attribute.\n *\n * Attribute values that aren't terminated properly aren't parsed, and shouldn't lead to a parser error.\n * See the example in https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n */ function isEntityInAttributeInvalidEnd(code) {\n    return code === CharCodes.EQUALS || isAsciiAlphaNumeric(code);\n}\nvar EntityDecoderState;\n(function(EntityDecoderState) {\n    EntityDecoderState[EntityDecoderState[\"EntityStart\"] = 0] = \"EntityStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericStart\"] = 1] = \"NumericStart\";\n    EntityDecoderState[EntityDecoderState[\"NumericDecimal\"] = 2] = \"NumericDecimal\";\n    EntityDecoderState[EntityDecoderState[\"NumericHex\"] = 3] = \"NumericHex\";\n    EntityDecoderState[EntityDecoderState[\"NamedEntity\"] = 4] = \"NamedEntity\";\n})(EntityDecoderState || (EntityDecoderState = {}));\nvar DecodingMode;\n(function(DecodingMode) {\n    /** Entities in text nodes that can end with any character. */ DecodingMode[DecodingMode[\"Legacy\"] = 0] = \"Legacy\";\n    /** Only allow entities terminated with a semicolon. */ DecodingMode[DecodingMode[\"Strict\"] = 1] = \"Strict\";\n    /** Entities in attributes have limitations on ending characters. */ DecodingMode[DecodingMode[\"Attribute\"] = 2] = \"Attribute\";\n})(DecodingMode || (DecodingMode = {}));\n/**\n * Token decoder with support of writing partial entities.\n */ class EntityDecoder {\n    constructor(/** The tree used to decode entities. */ decodeTree, /**\n     * The function that is called when a codepoint is decoded.\n     *\n     * For multi-byte named entities, this will be called multiple times,\n     * with the second codepoint, and the same `consumed` value.\n     *\n     * @param codepoint The decoded codepoint.\n     * @param consumed The number of bytes consumed by the decoder.\n     */ emitCodePoint, /** An object that is used to produce errors. */ errors){\n        this.decodeTree = decodeTree;\n        this.emitCodePoint = emitCodePoint;\n        this.errors = errors;\n        /** The current state of the decoder. */ this.state = EntityDecoderState.EntityStart;\n        /** Characters that were consumed while parsing an entity. */ this.consumed = 1;\n        /**\n         * The result of the entity.\n         *\n         * Either the result index of a numeric entity, or the codepoint of a\n         * numeric entity.\n         */ this.result = 0;\n        /** The current index in the decode tree. */ this.treeIndex = 0;\n        /** The number of characters that were consumed in excess. */ this.excess = 1;\n        /** The mode in which the decoder is operating. */ this.decodeMode = DecodingMode.Strict;\n    }\n    /** Resets the instance to make it reusable. */ startEntity(decodeMode) {\n        this.decodeMode = decodeMode;\n        this.state = EntityDecoderState.EntityStart;\n        this.result = 0;\n        this.treeIndex = 0;\n        this.excess = 1;\n        this.consumed = 1;\n    }\n    /**\n     * Write an entity to the decoder. This can be called multiple times with partial entities.\n     * If the entity is incomplete, the decoder will return -1.\n     *\n     * Mirrors the implementation of `getDecoder`, but with the ability to stop decoding if the\n     * entity is incomplete, and resume when the next string is written.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The offset at which the entity begins. Should be 0 if this is not the first call.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */ write(input, offset) {\n        switch(this.state){\n            case EntityDecoderState.EntityStart:\n                {\n                    if (input.charCodeAt(offset) === CharCodes.NUM) {\n                        this.state = EntityDecoderState.NumericStart;\n                        this.consumed += 1;\n                        return this.stateNumericStart(input, offset + 1);\n                    }\n                    this.state = EntityDecoderState.NamedEntity;\n                    return this.stateNamedEntity(input, offset);\n                }\n            case EntityDecoderState.NumericStart:\n                {\n                    return this.stateNumericStart(input, offset);\n                }\n            case EntityDecoderState.NumericDecimal:\n                {\n                    return this.stateNumericDecimal(input, offset);\n                }\n            case EntityDecoderState.NumericHex:\n                {\n                    return this.stateNumericHex(input, offset);\n                }\n            case EntityDecoderState.NamedEntity:\n                {\n                    return this.stateNamedEntity(input, offset);\n                }\n        }\n    }\n    /**\n     * Switches between the numeric decimal and hexadecimal states.\n     *\n     * Equivalent to the `Numeric character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */ stateNumericStart(input, offset) {\n        if (offset >= input.length) {\n            return -1;\n        }\n        if ((input.charCodeAt(offset) | TO_LOWER_BIT) === CharCodes.LOWER_X) {\n            this.state = EntityDecoderState.NumericHex;\n            this.consumed += 1;\n            return this.stateNumericHex(input, offset + 1);\n        }\n        this.state = EntityDecoderState.NumericDecimal;\n        return this.stateNumericDecimal(input, offset);\n    }\n    addToNumericResult(input, start, end, base) {\n        if (start !== end) {\n            const digitCount = end - start;\n            this.result = this.result * Math.pow(base, digitCount) + Number.parseInt(input.substr(start, digitCount), base);\n            this.consumed += digitCount;\n        }\n    }\n    /**\n     * Parses a hexadecimal numeric entity.\n     *\n     * Equivalent to the `Hexademical character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */ stateNumericHex(input, offset) {\n        const startIndex = offset;\n        while(offset < input.length){\n            const char = input.charCodeAt(offset);\n            if (isNumber(char) || isHexadecimalCharacter(char)) {\n                offset += 1;\n            } else {\n                this.addToNumericResult(input, startIndex, offset, 16);\n                return this.emitNumericEntity(char, 3);\n            }\n        }\n        this.addToNumericResult(input, startIndex, offset, 16);\n        return -1;\n    }\n    /**\n     * Parses a decimal numeric entity.\n     *\n     * Equivalent to the `Decimal character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */ stateNumericDecimal(input, offset) {\n        const startIndex = offset;\n        while(offset < input.length){\n            const char = input.charCodeAt(offset);\n            if (isNumber(char)) {\n                offset += 1;\n            } else {\n                this.addToNumericResult(input, startIndex, offset, 10);\n                return this.emitNumericEntity(char, 2);\n            }\n        }\n        this.addToNumericResult(input, startIndex, offset, 10);\n        return -1;\n    }\n    /**\n     * Validate and emit a numeric entity.\n     *\n     * Implements the logic from the `Hexademical character reference start\n     * state` and `Numeric character reference end state` in the HTML spec.\n     *\n     * @param lastCp The last code point of the entity. Used to see if the\n     *               entity was terminated with a semicolon.\n     * @param expectedLength The minimum number of characters that should be\n     *                       consumed. Used to validate that at least one digit\n     *                       was consumed.\n     * @returns The number of characters that were consumed.\n     */ emitNumericEntity(lastCp, expectedLength) {\n        var _a;\n        // Ensure we consumed at least one digit.\n        if (this.consumed <= expectedLength) {\n            (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n            return 0;\n        }\n        // Figure out if this is a legit end of the entity\n        if (lastCp === CharCodes.SEMI) {\n            this.consumed += 1;\n        } else if (this.decodeMode === DecodingMode.Strict) {\n            return 0;\n        }\n        this.emitCodePoint((0,_decode_codepoint_js__WEBPACK_IMPORTED_MODULE_2__.replaceCodePoint)(this.result), this.consumed);\n        if (this.errors) {\n            if (lastCp !== CharCodes.SEMI) {\n                this.errors.missingSemicolonAfterCharacterReference();\n            }\n            this.errors.validateNumericCharacterReference(this.result);\n        }\n        return this.consumed;\n    }\n    /**\n     * Parses a named entity.\n     *\n     * Equivalent to the `Named character reference state` in the HTML spec.\n     *\n     * @param input The string containing the entity (or a continuation of the entity).\n     * @param offset The current offset.\n     * @returns The number of characters that were consumed, or -1 if the entity is incomplete.\n     */ stateNamedEntity(input, offset) {\n        const { decodeTree } = this;\n        let current = decodeTree[this.treeIndex];\n        // The mask is the number of bytes of the value, including the current byte.\n        let valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n        for(; offset < input.length; offset++, this.excess++){\n            const char = input.charCodeAt(offset);\n            this.treeIndex = determineBranch(decodeTree, current, this.treeIndex + Math.max(1, valueLength), char);\n            if (this.treeIndex < 0) {\n                return this.result === 0 || // If we are parsing an attribute\n                this.decodeMode === DecodingMode.Attribute && // We shouldn't have consumed any characters after the entity,\n                (valueLength === 0 || // And there should be no invalid characters.\n                isEntityInAttributeInvalidEnd(char)) ? 0 : this.emitNotTerminatedNamedEntity();\n            }\n            current = decodeTree[this.treeIndex];\n            valueLength = (current & BinTrieFlags.VALUE_LENGTH) >> 14;\n            // If the branch is a value, store it and continue\n            if (valueLength !== 0) {\n                // If the entity is terminated by a semicolon, we are done.\n                if (char === CharCodes.SEMI) {\n                    return this.emitNamedEntityData(this.treeIndex, valueLength, this.consumed + this.excess);\n                }\n                // If we encounter a non-terminated (legacy) entity while parsing strictly, then ignore it.\n                if (this.decodeMode !== DecodingMode.Strict) {\n                    this.result = this.treeIndex;\n                    this.consumed += this.excess;\n                    this.excess = 0;\n                }\n            }\n        }\n        return -1;\n    }\n    /**\n     * Emit a named entity that was not terminated with a semicolon.\n     *\n     * @returns The number of characters consumed.\n     */ emitNotTerminatedNamedEntity() {\n        var _a;\n        const { result, decodeTree } = this;\n        const valueLength = (decodeTree[result] & BinTrieFlags.VALUE_LENGTH) >> 14;\n        this.emitNamedEntityData(result, valueLength, this.consumed);\n        (_a = this.errors) === null || _a === void 0 ? void 0 : _a.missingSemicolonAfterCharacterReference();\n        return this.consumed;\n    }\n    /**\n     * Emit a named entity.\n     *\n     * @param result The index of the entity in the decode tree.\n     * @param valueLength The number of bytes in the entity.\n     * @param consumed The number of characters consumed.\n     *\n     * @returns The number of characters consumed.\n     */ emitNamedEntityData(result, valueLength, consumed) {\n        const { decodeTree } = this;\n        this.emitCodePoint(valueLength === 1 ? decodeTree[result] & ~BinTrieFlags.VALUE_LENGTH : decodeTree[result + 1], consumed);\n        if (valueLength === 3) {\n            // For multi-byte values, we need to emit the second byte.\n            this.emitCodePoint(decodeTree[result + 2], consumed);\n        }\n        return consumed;\n    }\n    /**\n     * Signal to the parser that the end of the input was reached.\n     *\n     * Remaining data will be emitted and relevant errors will be produced.\n     *\n     * @returns The number of characters consumed.\n     */ end() {\n        var _a;\n        switch(this.state){\n            case EntityDecoderState.NamedEntity:\n                {\n                    // Emit a named entity if we have one.\n                    return this.result !== 0 && (this.decodeMode !== DecodingMode.Attribute || this.result === this.treeIndex) ? this.emitNotTerminatedNamedEntity() : 0;\n                }\n            // Otherwise, emit a numeric entity if we have one.\n            case EntityDecoderState.NumericDecimal:\n                {\n                    return this.emitNumericEntity(0, 2);\n                }\n            case EntityDecoderState.NumericHex:\n                {\n                    return this.emitNumericEntity(0, 3);\n                }\n            case EntityDecoderState.NumericStart:\n                {\n                    (_a = this.errors) === null || _a === void 0 ? void 0 : _a.absenceOfDigitsInNumericCharacterReference(this.consumed);\n                    return 0;\n                }\n            case EntityDecoderState.EntityStart:\n                {\n                    // Return 0 if we have no entity.\n                    return 0;\n                }\n        }\n    }\n}\n/**\n * Creates a function that decodes entities in a string.\n *\n * @param decodeTree The decode tree.\n * @returns A function that decodes entities in a string.\n */ function getDecoder(decodeTree) {\n    let returnValue = \"\";\n    const decoder = new EntityDecoder(decodeTree, (data)=>returnValue += (0,_decode_codepoint_js__WEBPACK_IMPORTED_MODULE_2__.fromCodePoint)(data));\n    return function decodeWithTrie(input, decodeMode) {\n        let lastIndex = 0;\n        let offset = 0;\n        while((offset = input.indexOf(\"&\", offset)) >= 0){\n            returnValue += input.slice(lastIndex, offset);\n            decoder.startEntity(decodeMode);\n            const length = decoder.write(input, // Skip the \"&\"\n            offset + 1);\n            if (length < 0) {\n                lastIndex = offset + decoder.end();\n                break;\n            }\n            lastIndex = offset + length;\n            // If `length` is 0, skip the current `&` and continue.\n            offset = length === 0 ? lastIndex + 1 : lastIndex;\n        }\n        const result = returnValue + input.slice(lastIndex);\n        // Make sure we don't keep a reference to the final string.\n        returnValue = \"\";\n        return result;\n    };\n}\n/**\n * Determines the branch of the current node that is taken given the current\n * character. This function is used to traverse the trie.\n *\n * @param decodeTree The trie.\n * @param current The current node.\n * @param nodeIdx The index right after the current node and its value.\n * @param char The current character.\n * @returns The index of the next node, or -1 if no branch is taken.\n */ function determineBranch(decodeTree, current, nodeIndex, char) {\n    const branchCount = (current & BinTrieFlags.BRANCH_LENGTH) >> 7;\n    const jumpOffset = current & BinTrieFlags.JUMP_TABLE;\n    // Case 1: Single branch encoded in jump offset\n    if (branchCount === 0) {\n        return jumpOffset !== 0 && char === jumpOffset ? nodeIndex : -1;\n    }\n    // Case 2: Multiple branches encoded in jump table\n    if (jumpOffset) {\n        const value = char - jumpOffset;\n        return value < 0 || value >= branchCount ? -1 : decodeTree[nodeIndex + value] - 1;\n    }\n    // Case 3: Multiple branches encoded in dictionary\n    // Binary search for the character.\n    let lo = nodeIndex;\n    let hi = lo + branchCount - 1;\n    while(lo <= hi){\n        const mid = lo + hi >>> 1;\n        const midValue = decodeTree[mid];\n        if (midValue < char) {\n            lo = mid + 1;\n        } else if (midValue > char) {\n            hi = mid - 1;\n        } else {\n            return decodeTree[mid + branchCount];\n        }\n    }\n    return -1;\n}\nconst htmlDecoder = /* #__PURE__ */ getDecoder(_generated_decode_data_html_js__WEBPACK_IMPORTED_MODULE_0__.htmlDecodeTree);\nconst xmlDecoder = /* #__PURE__ */ getDecoder(_generated_decode_data_xml_js__WEBPACK_IMPORTED_MODULE_1__.xmlDecodeTree);\n/**\n * Decodes an HTML string.\n *\n * @param htmlString The string to decode.\n * @param mode The decoding mode.\n * @returns The decoded string.\n */ function decodeHTML(htmlString, mode = DecodingMode.Legacy) {\n    return htmlDecoder(htmlString, mode);\n}\n/**\n * Decodes an HTML string in an attribute.\n *\n * @param htmlAttribute The string to decode.\n * @returns The decoded string.\n */ function decodeHTMLAttribute(htmlAttribute) {\n    return htmlDecoder(htmlAttribute, DecodingMode.Attribute);\n}\n/**\n * Decodes an HTML string, requiring all entities to be terminated by a semicolon.\n *\n * @param htmlString The string to decode.\n * @returns The decoded string.\n */ function decodeHTMLStrict(htmlString) {\n    return htmlDecoder(htmlString, DecodingMode.Strict);\n}\n/**\n * Decodes an XML string, requiring all entities to be terminated by a semicolon.\n *\n * @param xmlString The string to decode.\n * @returns The decoded string.\n */ function decodeXML(xmlString) {\n    return xmlDecoder(xmlString, DecodingMode.Strict);\n}\n// Re-export for use by eg. htmlparser2\n\n\n //# sourceMappingURL=decode.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/node_modules/entities/dist/esm/decode.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/node_modules/entities/dist/esm/escape.js":
/*!**********************************************************************!*\
  !*** ./node_modules/parse5/node_modules/entities/dist/esm/escape.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   encodeXML: () => (/* binding */ encodeXML),\n/* harmony export */   escape: () => (/* binding */ escape),\n/* harmony export */   escapeAttribute: () => (/* binding */ escapeAttribute),\n/* harmony export */   escapeText: () => (/* binding */ escapeText),\n/* harmony export */   escapeUTF8: () => (/* binding */ escapeUTF8),\n/* harmony export */   getCodePoint: () => (/* binding */ getCodePoint),\n/* harmony export */   xmlReplacer: () => (/* binding */ xmlReplacer)\n/* harmony export */ });\nconst xmlReplacer = /[\"$&'<>\\u0080-\\uFFFF]/g;\nconst xmlCodeMap = new Map([\n    [\n        34,\n        \"&quot;\"\n    ],\n    [\n        38,\n        \"&amp;\"\n    ],\n    [\n        39,\n        \"&apos;\"\n    ],\n    [\n        60,\n        \"&lt;\"\n    ],\n    [\n        62,\n        \"&gt;\"\n    ]\n]);\n// For compatibility with node < 4, we wrap `codePointAt`\nconst getCodePoint = // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition\nString.prototype.codePointAt == null ? (c, index)=>(c.charCodeAt(index) & 64512) === 55296 ? (c.charCodeAt(index) - 55296) * 1024 + c.charCodeAt(index + 1) - 56320 + 65536 : c.charCodeAt(index) : (input, index)=>input.codePointAt(index);\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using XML entities.\n *\n * If a character has no equivalent entity, a\n * numeric hexadecimal reference (eg. `&#xfc;`) will be used.\n */ function encodeXML(input) {\n    let returnValue = \"\";\n    let lastIndex = 0;\n    let match;\n    while((match = xmlReplacer.exec(input)) !== null){\n        const { index } = match;\n        const char = input.charCodeAt(index);\n        const next = xmlCodeMap.get(char);\n        if (next === undefined) {\n            returnValue += `${input.substring(lastIndex, index)}&#x${getCodePoint(input, index).toString(16)};`;\n            // Increase by 1 if we have a surrogate pair\n            lastIndex = xmlReplacer.lastIndex += Number((char & 64512) === 55296);\n        } else {\n            returnValue += input.substring(lastIndex, index) + next;\n            lastIndex = index + 1;\n        }\n    }\n    return returnValue + input.substr(lastIndex);\n}\n/**\n * Encodes all non-ASCII characters, as well as characters not valid in XML\n * documents using numeric hexadecimal reference (eg. `&#xfc;`).\n *\n * Have a look at `escapeUTF8` if you want a more concise output at the expense\n * of reduced transportability.\n *\n * @param data String to escape.\n */ const escape = encodeXML;\n/**\n * Creates a function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n *\n * @param regex Regular expression to match characters to escape.\n * @param map Map of characters to escape to their entities.\n *\n * @returns Function that escapes all characters matched by the given regular\n * expression using the given map of characters to escape to their entities.\n */ function getEscaper(regex, map) {\n    return function escape(data) {\n        let match;\n        let lastIndex = 0;\n        let result = \"\";\n        while(match = regex.exec(data)){\n            if (lastIndex !== match.index) {\n                result += data.substring(lastIndex, match.index);\n            }\n            // We know that this character will be in the map.\n            result += map.get(match[0].charCodeAt(0));\n            // Every match will be of length 1\n            lastIndex = match.index + 1;\n        }\n        return result + data.substring(lastIndex);\n    };\n}\n/**\n * Encodes all characters not valid in XML documents using XML entities.\n *\n * Note that the output will be character-set dependent.\n *\n * @param data String to escape.\n */ const escapeUTF8 = /* #__PURE__ */ getEscaper(/[\"&'<>]/g, xmlCodeMap);\n/**\n * Encodes all characters that have to be escaped in HTML attributes,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */ const escapeAttribute = /* #__PURE__ */ getEscaper(/[\"&\\u00A0]/g, new Map([\n    [\n        34,\n        \"&quot;\"\n    ],\n    [\n        38,\n        \"&amp;\"\n    ],\n    [\n        160,\n        \"&nbsp;\"\n    ]\n]));\n/**\n * Encodes all characters that have to be escaped in HTML text,\n * following {@link https://html.spec.whatwg.org/multipage/parsing.html#escapingString}.\n *\n * @param data String to escape.\n */ const escapeText = /* #__PURE__ */ getEscaper(/[&<>\\u00A0]/g, new Map([\n    [\n        38,\n        \"&amp;\"\n    ],\n    [\n        60,\n        \"&lt;\"\n    ],\n    [\n        62,\n        \"&gt;\"\n    ],\n    [\n        160,\n        \"&nbsp;\"\n    ]\n])); //# sourceMappingURL=escape.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/node_modules/entities/dist/esm/escape.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/node_modules/entities/dist/esm/generated/decode-data-html.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/parse5/node_modules/entities/dist/esm/generated/decode-data-html.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   htmlDecodeTree: () => (/* binding */ htmlDecodeTree)\n/* harmony export */ });\n// Generated using scripts/write-decode-map.ts\nconst htmlDecodeTree = /* #__PURE__ */ new Uint16Array(// prettier-ignore\n/* #__PURE__ */ 'ᵁ<\\xd5ıʊҝջאٵ۞ޢߖࠏ੊ઑඡ๭༉༦჊ረዡᐕᒝᓃᓟᔥ\\x00\\x00\\x00\\x00\\x00\\x00ᕫᛍᦍᰒᷝ὾⁠↰⊍⏀⏻⑂⠤⤒ⴈ⹈⿎〖㊺㘹㞬㣾㨨㩱㫠㬮ࠀEMabcfglmnoprstu\\\\bfms\\x7f\\x84\\x8b\\x90\\x95\\x98\\xa6\\xb3\\xb9\\xc8\\xcflig耻\\xc6䃆P耻&䀦cute耻\\xc1䃁reve;䄂Āiyx}rc耻\\xc2䃂;䐐r;쀀\\ud835\\udd04rave耻\\xc0䃀pha;䎑acr;䄀d;橓Āgp\\x9d\\xa1on;䄄f;쀀\\ud835\\udd38plyFunction;恡ing耻\\xc5䃅Ācs\\xbe\\xc3r;쀀\\ud835\\udc9cign;扔ilde耻\\xc3䃃ml耻\\xc4䃄Ѐaceforsu\\xe5\\xfb\\xfeėĜĢħĪĀcr\\xea\\xf2kslash;或Ŷ\\xf6\\xf8;櫧ed;挆y;䐑ƀcrtąċĔause;戵noullis;愬a;䎒r;쀀\\ud835\\udd05pf;쀀\\ud835\\udd39eve;䋘c\\xf2ēmpeq;扎܀HOacdefhilorsuōőŖƀƞƢƵƷƺǜȕɳɸɾcy;䐧PY耻\\xa9䂩ƀcpyŝŢźute;䄆Ā;iŧŨ拒talDifferentialD;慅leys;愭ȀaeioƉƎƔƘron;䄌dil耻\\xc7䃇rc;䄈nint;戰ot;䄊ĀdnƧƭilla;䂸terDot;䂷\\xf2ſi;䎧rcleȀDMPTǇǋǑǖot;抙inus;抖lus;投imes;抗oĀcsǢǸkwiseContourIntegral;戲eCurlyĀDQȃȏoubleQuote;思uote;怙ȀlnpuȞȨɇɕonĀ;eȥȦ户;橴ƀgitȯȶȺruent;扡nt;戯ourIntegral;戮ĀfrɌɎ;愂oduct;成nterClockwiseContourIntegral;戳oss;樯cr;쀀\\ud835\\udc9epĀ;Cʄʅ拓ap;才րDJSZacefiosʠʬʰʴʸˋ˗ˡ˦̳ҍĀ;oŹʥtrahd;椑cy;䐂cy;䐅cy;䐏ƀgrsʿ˄ˇger;怡r;憡hv;櫤Āayː˕ron;䄎;䐔lĀ;t˝˞戇a;䎔r;쀀\\ud835\\udd07Āaf˫̧Ācm˰̢riticalȀADGT̖̜̀̆cute;䂴oŴ̋̍;䋙bleAcute;䋝rave;䁠ilde;䋜ond;拄ferentialD;慆Ѱ̽\\x00\\x00\\x00͔͂\\x00Ѕf;쀀\\ud835\\udd3bƀ;DE͈͉͍䂨ot;惜qual;扐blèCDLRUVͣͲ΂ϏϢϸontourIntegra\\xecȹoɴ͹\\x00\\x00ͻ\\xbb͉nArrow;懓Āeo·ΤftƀARTΐΖΡrrow;懐ightArrow;懔e\\xe5ˊngĀLRΫτeftĀARγιrrow;柸ightArrow;柺ightArrow;柹ightĀATϘϞrrow;懒ee;抨pɁϩ\\x00\\x00ϯrrow;懑ownArrow;懕erticalBar;戥ǹABLRTaВЪаўѿͼrrowƀ;BUНОТ憓ar;椓pArrow;懵reve;䌑eft˒к\\x00ц\\x00ѐightVector;楐eeVector;楞ectorĀ;Bљњ憽ar;楖ightǔѧ\\x00ѱeeVector;楟ectorĀ;BѺѻ懁ar;楗eeĀ;A҆҇护rrow;憧ĀctҒҗr;쀀\\ud835\\udc9frok;䄐ࠀNTacdfglmopqstuxҽӀӄӋӞӢӧӮӵԡԯԶՒ՝ՠեG;䅊H耻\\xd0䃐cute耻\\xc9䃉ƀaiyӒӗӜron;䄚rc耻\\xca䃊;䐭ot;䄖r;쀀\\ud835\\udd08rave耻\\xc8䃈ement;戈ĀapӺӾcr;䄒tyɓԆ\\x00\\x00ԒmallSquare;旻erySmallSquare;斫ĀgpԦԪon;䄘f;쀀\\ud835\\udd3csilon;䎕uĀaiԼՉlĀ;TՂՃ橵ilde;扂librium;懌Āci՗՚r;愰m;橳a;䎗ml耻\\xcb䃋Āipժկsts;戃onentialE;慇ʀcfiosօֈ֍ֲ׌y;䐤r;쀀\\ud835\\udd09lledɓ֗\\x00\\x00֣mallSquare;旼erySmallSquare;斪Ͱֺ\\x00ֿ\\x00\\x00ׄf;쀀\\ud835\\udd3dAll;戀riertrf;愱c\\xf2׋؀JTabcdfgorstר׬ׯ׺؀ؒؖ؛؝أ٬ٲcy;䐃耻>䀾mmaĀ;d׷׸䎓;䏜reve;䄞ƀeiy؇،ؐdil;䄢rc;䄜;䐓ot;䄠r;쀀\\ud835\\udd0a;拙pf;쀀\\ud835\\udd3eeater̀EFGLSTصلَٖٛ٦qualĀ;Lؾؿ扥ess;招ullEqual;执reater;檢ess;扷lantEqual;橾ilde;扳cr;쀀\\ud835\\udca2;扫ЀAacfiosuڅڋږڛڞڪھۊRDcy;䐪Āctڐڔek;䋇;䁞irc;䄤r;愌lbertSpace;愋ǰگ\\x00ڲf;愍izontalLine;攀Āctۃۅ\\xf2کrok;䄦mpńېۘownHum\\xf0įqual;扏܀EJOacdfgmnostuۺ۾܃܇܎ܚܞܡܨ݄ݸދޏޕcy;䐕lig;䄲cy;䐁cute耻\\xcd䃍Āiyܓܘrc耻\\xce䃎;䐘ot;䄰r;愑rave耻\\xcc䃌ƀ;apܠܯܿĀcgܴܷr;䄪inaryI;慈lie\\xf3ϝǴ݉\\x00ݢĀ;eݍݎ戬Āgrݓݘral;戫section;拂isibleĀCTݬݲomma;恣imes;恢ƀgptݿރވon;䄮f;쀀\\ud835\\udd40a;䎙cr;愐ilde;䄨ǫޚ\\x00ޞcy;䐆l耻\\xcf䃏ʀcfosuެ޷޼߂ߐĀiyޱ޵rc;䄴;䐙r;쀀\\ud835\\udd0dpf;쀀\\ud835\\udd41ǣ߇\\x00ߌr;쀀\\ud835\\udca5rcy;䐈kcy;䐄΀HJacfosߤߨ߽߬߱ࠂࠈcy;䐥cy;䐌ppa;䎚Āey߶߻dil;䄶;䐚r;쀀\\ud835\\udd0epf;쀀\\ud835\\udd42cr;쀀\\ud835\\udca6րJTaceflmostࠥࠩࠬࡐࡣ঳সে্਷ੇcy;䐉耻<䀼ʀcmnpr࠷࠼ࡁࡄࡍute;䄹bda;䎛g;柪lacetrf;愒r;憞ƀaeyࡗ࡜ࡡron;䄽dil;䄻;䐛Āfsࡨ॰tԀACDFRTUVarࡾࢩࢱࣦ࣠ࣼयज़ΐ४Ānrࢃ࢏gleBracket;柨rowƀ;BR࢙࢚࢞憐ar;懤ightArrow;懆eiling;挈oǵࢷ\\x00ࣃbleBracket;柦nǔࣈ\\x00࣒eeVector;楡ectorĀ;Bࣛࣜ懃ar;楙loor;挊ightĀAV࣯ࣵrrow;憔ector;楎Āerँगeƀ;AVउऊऐ抣rrow;憤ector;楚iangleƀ;BEतथऩ抲ar;槏qual;抴pƀDTVषूौownVector;楑eeVector;楠ectorĀ;Bॖॗ憿ar;楘ectorĀ;B॥०憼ar;楒ight\\xe1Μs̀EFGLSTॾঋকঝঢভqualGreater;拚ullEqual;扦reater;扶ess;檡lantEqual;橽ilde;扲r;쀀\\ud835\\udd0fĀ;eঽা拘ftarrow;懚idot;䄿ƀnpw৔ਖਛgȀLRlr৞৷ਂਐeftĀAR০৬rrow;柵ightArrow;柷ightArrow;柶eftĀarγਊight\\xe1οight\\xe1ϊf;쀀\\ud835\\udd43erĀLRਢਬeftArrow;憙ightArrow;憘ƀchtਾੀੂ\\xf2ࡌ;憰rok;䅁;扪Ѐacefiosuਗ਼੝੠੷੼અઋ઎p;椅y;䐜Ādl੥੯iumSpace;恟lintrf;愳r;쀀\\ud835\\udd10nusPlus;戓pf;쀀\\ud835\\udd44c\\xf2੶;䎜ҀJacefostuણધભીଔଙඑ඗ඞcy;䐊cute;䅃ƀaey઴હાron;䅇dil;䅅;䐝ƀgswે૰଎ativeƀMTV૓૟૨ediumSpace;怋hiĀcn૦૘\\xeb૙eryThi\\xee૙tedĀGL૸ଆreaterGreate\\xf2ٳessLes\\xf3ੈLine;䀊r;쀀\\ud835\\udd11ȀBnptଢନଷ଺reak;恠BreakingSpace;䂠f;愕ڀ;CDEGHLNPRSTV୕ୖ୪୼஡௫ఄ౞಄ದ೘ൡඅ櫬Āou୛୤ngruent;扢pCap;扭oubleVerticalBar;戦ƀlqxஃஊ஛ement;戉ualĀ;Tஒஓ扠ilde;쀀≂̸ists;戄reater΀;EFGLSTஶஷ஽௉௓௘௥扯qual;扱ullEqual;쀀≧̸reater;쀀≫̸ess;批lantEqual;쀀⩾̸ilde;扵umpń௲௽ownHump;쀀≎̸qual;쀀≏̸eĀfsఊధtTriangleƀ;BEచఛడ拪ar;쀀⧏̸qual;括s̀;EGLSTవశ఼ౄోౘ扮qual;扰reater;扸ess;쀀≪̸lantEqual;쀀⩽̸ilde;扴estedĀGL౨౹reaterGreater;쀀⪢̸essLess;쀀⪡̸recedesƀ;ESಒಓಛ技qual;쀀⪯̸lantEqual;拠ĀeiಫಹverseElement;戌ghtTriangleƀ;BEೋೌ೒拫ar;쀀⧐̸qual;拭ĀquೝഌuareSuĀbp೨೹setĀ;E೰ೳ쀀⊏̸qual;拢ersetĀ;Eഃആ쀀⊐̸qual;拣ƀbcpഓതൎsetĀ;Eഛഞ쀀⊂⃒qual;抈ceedsȀ;ESTലള഻െ抁qual;쀀⪰̸lantEqual;拡ilde;쀀≿̸ersetĀ;E൘൛쀀⊃⃒qual;抉ildeȀ;EFT൮൯൵ൿ扁qual;扄ullEqual;扇ilde;扉erticalBar;戤cr;쀀\\ud835\\udca9ilde耻\\xd1䃑;䎝܀Eacdfgmoprstuvලෂ෉෕ෛ෠෧෼ขภยา฿ไlig;䅒cute耻\\xd3䃓Āiy෎ීrc耻\\xd4䃔;䐞blac;䅐r;쀀\\ud835\\udd12rave耻\\xd2䃒ƀaei෮ෲ෶cr;䅌ga;䎩cron;䎟pf;쀀\\ud835\\udd46enCurlyĀDQฎบoubleQuote;怜uote;怘;橔Āclวฬr;쀀\\ud835\\udcaaash耻\\xd8䃘iŬื฼de耻\\xd5䃕es;樷ml耻\\xd6䃖erĀBP๋๠Āar๐๓r;怾acĀek๚๜;揞et;掴arenthesis;揜Ҁacfhilors๿ງຊຏຒດຝະ໼rtialD;戂y;䐟r;쀀\\ud835\\udd13i;䎦;䎠usMinus;䂱Āipຢອncareplan\\xe5ڝf;愙Ȁ;eio຺ູ໠໤檻cedesȀ;EST່້໏໚扺qual;檯lantEqual;扼ilde;找me;怳Ādp໩໮uct;戏ortionĀ;aȥ໹l;戝Āci༁༆r;쀀\\ud835\\udcab;䎨ȀUfos༑༖༛༟OT耻\"䀢r;쀀\\ud835\\udd14pf;愚cr;쀀\\ud835\\udcac؀BEacefhiorsu༾གྷཇའཱིྦྷྪྭ႖ႩႴႾarr;椐G耻\\xae䂮ƀcnrཎནབute;䅔g;柫rĀ;tཛྷཝ憠l;椖ƀaeyཧཬཱron;䅘dil;䅖;䐠Ā;vླྀཹ愜erseĀEUྂྙĀlq྇ྎement;戋uilibrium;懋pEquilibrium;楯r\\xbbཹo;䎡ghtЀACDFTUVa࿁࿫࿳ဢဨၛႇϘĀnr࿆࿒gleBracket;柩rowƀ;BL࿜࿝࿡憒ar;懥eftArrow;懄eiling;按oǵ࿹\\x00စbleBracket;柧nǔည\\x00နeeVector;楝ectorĀ;Bဝသ懂ar;楕loor;挋Āerိ၃eƀ;AVဵံြ抢rrow;憦ector;楛iangleƀ;BEၐၑၕ抳ar;槐qual;抵pƀDTVၣၮၸownVector;楏eeVector;楜ectorĀ;Bႂႃ憾ar;楔ectorĀ;B႑႒懀ar;楓Āpuႛ႞f;愝ndImplies;楰ightarrow;懛ĀchႹႼr;愛;憱leDelayed;槴ڀHOacfhimoqstuფჱჷჽᄙᄞᅑᅖᅡᅧᆵᆻᆿĀCcჩხHcy;䐩y;䐨FTcy;䐬cute;䅚ʀ;aeiyᄈᄉᄎᄓᄗ檼ron;䅠dil;䅞rc;䅜;䐡r;쀀\\ud835\\udd16ortȀDLRUᄪᄴᄾᅉownArrow\\xbbОeftArrow\\xbb࢚ightArrow\\xbb࿝pArrow;憑gma;䎣allCircle;战pf;쀀\\ud835\\udd4aɲᅭ\\x00\\x00ᅰt;戚areȀ;ISUᅻᅼᆉᆯ斡ntersection;抓uĀbpᆏᆞsetĀ;Eᆗᆘ抏qual;抑ersetĀ;Eᆨᆩ抐qual;抒nion;抔cr;쀀\\ud835\\udcaear;拆ȀbcmpᇈᇛሉላĀ;sᇍᇎ拐etĀ;Eᇍᇕqual;抆ĀchᇠህeedsȀ;ESTᇭᇮᇴᇿ扻qual;檰lantEqual;扽ilde;承Th\\xe1ྌ;我ƀ;esሒሓሣ拑rsetĀ;Eሜም抃qual;抇et\\xbbሓրHRSacfhiorsሾቄ቉ቕ቞ቱቶኟዂወዑORN耻\\xde䃞ADE;愢ĀHc቎ቒcy;䐋y;䐦Ābuቚቜ;䀉;䎤ƀaeyብቪቯron;䅤dil;䅢;䐢r;쀀\\ud835\\udd17Āeiቻ኉ǲኀ\\x00ኇefore;戴a;䎘Ācn኎ኘkSpace;쀀  Space;怉ldeȀ;EFTካኬኲኼ戼qual;扃ullEqual;扅ilde;扈pf;쀀\\ud835\\udd4bipleDot;惛Āctዖዛr;쀀\\ud835\\udcafrok;䅦ૡዷጎጚጦ\\x00ጬጱ\\x00\\x00\\x00\\x00\\x00ጸጽ፷ᎅ\\x00᏿ᐄᐊᐐĀcrዻጁute耻\\xda䃚rĀ;oጇገ憟cir;楉rǣጓ\\x00጖y;䐎ve;䅬Āiyጞጣrc耻\\xdb䃛;䐣blac;䅰r;쀀\\ud835\\udd18rave耻\\xd9䃙acr;䅪Ādiፁ፩erĀBPፈ፝Āarፍፐr;䁟acĀekፗፙ;揟et;掵arenthesis;揝onĀ;P፰፱拃lus;抎Āgp፻፿on;䅲f;쀀\\ud835\\udd4cЀADETadps᎕ᎮᎸᏄϨᏒᏗᏳrrowƀ;BDᅐᎠᎤar;椒ownArrow;懅ownArrow;憕quilibrium;楮eeĀ;AᏋᏌ报rrow;憥own\\xe1ϳerĀLRᏞᏨeftArrow;憖ightArrow;憗iĀ;lᏹᏺ䏒on;䎥ing;䅮cr;쀀\\ud835\\udcb0ilde;䅨ml耻\\xdc䃜ҀDbcdefosvᐧᐬᐰᐳᐾᒅᒊᒐᒖash;披ar;櫫y;䐒ashĀ;lᐻᐼ抩;櫦Āerᑃᑅ;拁ƀbtyᑌᑐᑺar;怖Ā;iᑏᑕcalȀBLSTᑡᑥᑪᑴar;戣ine;䁼eparator;杘ilde;所ThinSpace;怊r;쀀\\ud835\\udd19pf;쀀\\ud835\\udd4dcr;쀀\\ud835\\udcb1dash;抪ʀcefosᒧᒬᒱᒶᒼirc;䅴dge;拀r;쀀\\ud835\\udd1apf;쀀\\ud835\\udd4ecr;쀀\\ud835\\udcb2Ȁfiosᓋᓐᓒᓘr;쀀\\ud835\\udd1b;䎞pf;쀀\\ud835\\udd4fcr;쀀\\ud835\\udcb3ҀAIUacfosuᓱᓵᓹᓽᔄᔏᔔᔚᔠcy;䐯cy;䐇cy;䐮cute耻\\xdd䃝Āiyᔉᔍrc;䅶;䐫r;쀀\\ud835\\udd1cpf;쀀\\ud835\\udd50cr;쀀\\ud835\\udcb4ml;䅸ЀHacdefosᔵᔹᔿᕋᕏᕝᕠᕤcy;䐖cute;䅹Āayᕄᕉron;䅽;䐗ot;䅻ǲᕔ\\x00ᕛoWidt\\xe8૙a;䎖r;愨pf;愤cr;쀀\\ud835\\udcb5௡ᖃᖊᖐ\\x00ᖰᖶᖿ\\x00\\x00\\x00\\x00ᗆᗛᗫᙟ᙭\\x00ᚕ᚛ᚲᚹ\\x00ᚾcute耻\\xe1䃡reve;䄃̀;Ediuyᖜᖝᖡᖣᖨᖭ戾;쀀∾̳;房rc耻\\xe2䃢te肻\\xb4̆;䐰lig耻\\xe6䃦Ā;r\\xb2ᖺ;쀀\\ud835\\udd1erave耻\\xe0䃠ĀepᗊᗖĀfpᗏᗔsym;愵\\xe8ᗓha;䎱ĀapᗟcĀclᗤᗧr;䄁g;樿ɤᗰ\\x00\\x00ᘊʀ;adsvᗺᗻᗿᘁᘇ戧nd;橕;橜lope;橘;橚΀;elmrszᘘᘙᘛᘞᘿᙏᙙ戠;榤e\\xbbᘙsdĀ;aᘥᘦ戡ѡᘰᘲᘴᘶᘸᘺᘼᘾ;榨;榩;榪;榫;榬;榭;榮;榯tĀ;vᙅᙆ戟bĀ;dᙌᙍ抾;榝Āptᙔᙗh;戢\\xbb\\xb9arr;捼Āgpᙣᙧon;䄅f;쀀\\ud835\\udd52΀;Eaeiop዁ᙻᙽᚂᚄᚇᚊ;橰cir;橯;扊d;手s;䀧roxĀ;e዁ᚒ\\xf1ᚃing耻\\xe5䃥ƀctyᚡᚦᚨr;쀀\\ud835\\udcb6;䀪mpĀ;e዁ᚯ\\xf1ʈilde耻\\xe3䃣ml耻\\xe4䃤Āciᛂᛈonin\\xf4ɲnt;樑ࠀNabcdefiklnoprsu᛭ᛱᜰ᜼ᝃᝈ᝸᝽០៦ᠹᡐᜍ᤽᥈ᥰot;櫭Ācrᛶ᜞kȀcepsᜀᜅᜍᜓong;扌psilon;䏶rime;怵imĀ;e᜚᜛戽q;拍Ŷᜢᜦee;抽edĀ;gᜬᜭ挅e\\xbbᜭrkĀ;t፜᜷brk;掶Āoyᜁᝁ;䐱quo;怞ʀcmprtᝓ᝛ᝡᝤᝨausĀ;eĊĉptyv;榰s\\xe9ᜌno\\xf5ēƀahwᝯ᝱ᝳ;䎲;愶een;扬r;쀀\\ud835\\udd1fg΀costuvwឍឝឳេ៕៛៞ƀaiuបពរ\\xf0ݠrc;旯p\\xbb፱ƀdptឤឨឭot;樀lus;樁imes;樂ɱឹ\\x00\\x00ើcup;樆ar;昅riangleĀdu៍្own;施p;斳plus;樄e\\xe5ᑄ\\xe5ᒭarow;植ƀako៭ᠦᠵĀcn៲ᠣkƀlst៺֫᠂ozenge;槫riangleȀ;dlr᠒᠓᠘᠝斴own;斾eft;旂ight;斸k;搣Ʊᠫ\\x00ᠳƲᠯ\\x00ᠱ;斒;斑4;斓ck;斈ĀeoᠾᡍĀ;qᡃᡆ쀀=⃥uiv;쀀≡⃥t;挐Ȁptwxᡙᡞᡧᡬf;쀀\\ud835\\udd53Ā;tᏋᡣom\\xbbᏌtie;拈؀DHUVbdhmptuvᢅᢖᢪᢻᣗᣛᣬ᣿ᤅᤊᤐᤡȀLRlrᢎᢐᢒᢔ;敗;敔;敖;敓ʀ;DUduᢡᢢᢤᢦᢨ敐;敦;敩;敤;敧ȀLRlrᢳᢵᢷᢹ;敝;敚;敜;教΀;HLRhlrᣊᣋᣍᣏᣑᣓᣕ救;敬;散;敠;敫;敢;敟ox;槉ȀLRlrᣤᣦᣨᣪ;敕;敒;攐;攌ʀ;DUduڽ᣷᣹᣻᣽;敥;敨;攬;攴inus;抟lus;択imes;抠ȀLRlrᤙᤛᤝ᤟;敛;敘;攘;攔΀;HLRhlrᤰᤱᤳᤵᤷ᤻᤹攂;敪;敡;敞;攼;攤;攜Āevģ᥂bar耻\\xa6䂦Ȁceioᥑᥖᥚᥠr;쀀\\ud835\\udcb7mi;恏mĀ;e᜚᜜lƀ;bhᥨᥩᥫ䁜;槅sub;柈Ŭᥴ᥾lĀ;e᥹᥺怢t\\xbb᥺pƀ;Eeįᦅᦇ;檮Ā;qۜۛೡᦧ\\x00᧨ᨑᨕᨲ\\x00ᨷᩐ\\x00\\x00᪴\\x00\\x00᫁\\x00\\x00ᬡᬮ᭍᭒\\x00᯽\\x00ᰌƀcpr᦭ᦲ᧝ute;䄇̀;abcdsᦿᧀᧄ᧊᧕᧙戩nd;橄rcup;橉Āau᧏᧒p;橋p;橇ot;橀;쀀∩︀Āeo᧢᧥t;恁\\xeeړȀaeiu᧰᧻ᨁᨅǰ᧵\\x00᧸s;橍on;䄍dil耻\\xe7䃧rc;䄉psĀ;sᨌᨍ橌m;橐ot;䄋ƀdmnᨛᨠᨦil肻\\xb8ƭptyv;榲t脀\\xa2;eᨭᨮ䂢r\\xe4Ʋr;쀀\\ud835\\udd20ƀceiᨽᩀᩍy;䑇ckĀ;mᩇᩈ朓ark\\xbbᩈ;䏇r΀;Ecefms᩟᩠ᩢᩫ᪤᪪᪮旋;槃ƀ;elᩩᩪᩭ䋆q;扗eɡᩴ\\x00\\x00᪈rrowĀlr᩼᪁eft;憺ight;憻ʀRSacd᪒᪔᪖᪚᪟\\xbbཇ;擈st;抛irc;抚ash;抝nint;樐id;櫯cir;槂ubsĀ;u᪻᪼晣it\\xbb᪼ˬ᫇᫔᫺\\x00ᬊonĀ;eᫍᫎ䀺Ā;q\\xc7\\xc6ɭ᫙\\x00\\x00᫢aĀ;t᫞᫟䀬;䁀ƀ;fl᫨᫩᫫戁\\xeeᅠeĀmx᫱᫶ent\\xbb᫩e\\xf3ɍǧ᫾\\x00ᬇĀ;dኻᬂot;橭n\\xf4Ɇƀfryᬐᬔᬗ;쀀\\ud835\\udd54o\\xe4ɔ脀\\xa9;sŕᬝr;愗Āaoᬥᬩrr;憵ss;朗Ācuᬲᬷr;쀀\\ud835\\udcb8Ābpᬼ᭄Ā;eᭁᭂ櫏;櫑Ā;eᭉᭊ櫐;櫒dot;拯΀delprvw᭠᭬᭷ᮂᮬᯔ᯹arrĀlr᭨᭪;椸;椵ɰ᭲\\x00\\x00᭵r;拞c;拟arrĀ;p᭿ᮀ憶;椽̀;bcdosᮏᮐᮖᮡᮥᮨ截rcap;橈Āauᮛᮞp;橆p;橊ot;抍r;橅;쀀∪︀Ȁalrv᮵ᮿᯞᯣrrĀ;mᮼᮽ憷;椼yƀevwᯇᯔᯘqɰᯎ\\x00\\x00ᯒre\\xe3᭳u\\xe3᭵ee;拎edge;拏en耻\\xa4䂤earrowĀlrᯮ᯳eft\\xbbᮀight\\xbbᮽe\\xe4ᯝĀciᰁᰇonin\\xf4Ƿnt;戱lcty;挭ঀAHabcdefhijlorstuwz᰸᰻᰿ᱝᱩᱵᲊᲞᲬᲷ᳻᳿ᴍᵻᶑᶫᶻ᷆᷍r\\xf2΁ar;楥Ȁglrs᱈ᱍ᱒᱔ger;怠eth;愸\\xf2ᄳhĀ;vᱚᱛ怐\\xbbऊūᱡᱧarow;椏a\\xe3̕Āayᱮᱳron;䄏;䐴ƀ;ao̲ᱼᲄĀgrʿᲁr;懊tseq;橷ƀglmᲑᲔᲘ耻\\xb0䂰ta;䎴ptyv;榱ĀirᲣᲨsht;楿;쀀\\ud835\\udd21arĀlrᲳᲵ\\xbbࣜ\\xbbသʀaegsv᳂͸᳖᳜᳠mƀ;oș᳊᳔ndĀ;ș᳑uit;晦amma;䏝in;拲ƀ;io᳧᳨᳸䃷de脀\\xf7;o᳧ᳰntimes;拇n\\xf8᳷cy;䑒cɯᴆ\\x00\\x00ᴊrn;挞op;挍ʀlptuwᴘᴝᴢᵉᵕlar;䀤f;쀀\\ud835\\udd55ʀ;emps̋ᴭᴷᴽᵂqĀ;d͒ᴳot;扑inus;戸lus;戔quare;抡blebarwedg\\xe5\\xfanƀadhᄮᵝᵧownarrow\\xf3ᲃarpoonĀlrᵲᵶef\\xf4Ჴigh\\xf4ᲶŢᵿᶅkaro\\xf7གɯᶊ\\x00\\x00ᶎrn;挟op;挌ƀcotᶘᶣᶦĀryᶝᶡ;쀀\\ud835\\udcb9;䑕l;槶rok;䄑Ādrᶰᶴot;拱iĀ;fᶺ᠖斿Āah᷀᷃r\\xf2Щa\\xf2ྦangle;榦Āci᷒ᷕy;䑟grarr;柿ऀDacdefglmnopqrstuxḁḉḙḸոḼṉṡṾấắẽỡἪἷὄ὎὚ĀDoḆᴴo\\xf4ᲉĀcsḎḔute耻\\xe9䃩ter;橮ȀaioyḢḧḱḶron;䄛rĀ;cḭḮ扖耻\\xea䃪lon;払;䑍ot;䄗ĀDrṁṅot;扒;쀀\\ud835\\udd22ƀ;rsṐṑṗ檚ave耻\\xe8䃨Ā;dṜṝ檖ot;檘Ȁ;ilsṪṫṲṴ檙nters;揧;愓Ā;dṹṺ檕ot;檗ƀapsẅẉẗcr;䄓tyƀ;svẒẓẕ戅et\\xbbẓpĀ1;ẝẤĳạả;怄;怅怃ĀgsẪẬ;䅋p;怂ĀgpẴẸon;䄙f;쀀\\ud835\\udd56ƀalsỄỎỒrĀ;sỊị拕l;槣us;橱iƀ;lvỚớở䎵on\\xbbớ;䏵ȀcsuvỪỳἋἣĀioữḱrc\\xbbḮɩỹ\\x00\\x00ỻ\\xedՈantĀglἂἆtr\\xbbṝess\\xbbṺƀaeiἒ἖Ἒls;䀽st;扟vĀ;DȵἠD;橸parsl;槥ĀDaἯἳot;打rr;楱ƀcdiἾὁỸr;愯o\\xf4͒ĀahὉὋ;䎷耻\\xf0䃰Āmrὓὗl耻\\xeb䃫o;悬ƀcipὡὤὧl;䀡s\\xf4ծĀeoὬὴctatio\\xeeՙnential\\xe5չৡᾒ\\x00ᾞ\\x00ᾡᾧ\\x00\\x00ῆῌ\\x00ΐ\\x00ῦῪ \\x00 ⁚llingdotse\\xf1Ṅy;䑄male;晀ƀilrᾭᾳ῁lig;耀ﬃɩᾹ\\x00\\x00᾽g;耀ﬀig;耀ﬄ;쀀\\ud835\\udd23lig;耀ﬁlig;쀀fjƀaltῙ῜ῡt;晭ig;耀ﬂns;斱of;䆒ǰ΅\\x00ῳf;쀀\\ud835\\udd57ĀakֿῷĀ;vῼ´拔;櫙artint;樍Āao‌⁕Ācs‑⁒α‚‰‸⁅⁈\\x00⁐β•‥‧‪‬\\x00‮耻\\xbd䂽;慓耻\\xbc䂼;慕;慙;慛Ƴ‴\\x00‶;慔;慖ʴ‾⁁\\x00\\x00⁃耻\\xbe䂾;慗;慜5;慘ƶ⁌\\x00⁎;慚;慝8;慞l;恄wn;挢cr;쀀\\ud835\\udcbbࢀEabcdefgijlnorstv₂₉₟₥₰₴⃰⃵⃺⃿℃ℒℸ̗ℾ⅒↞Ā;lٍ₇;檌ƀcmpₐₕ₝ute;䇵maĀ;dₜ᳚䎳;檆reve;䄟Āiy₪₮rc;䄝;䐳ot;䄡Ȁ;lqsؾق₽⃉ƀ;qsؾٌ⃄lan\\xf4٥Ȁ;cdl٥⃒⃥⃕c;檩otĀ;o⃜⃝檀Ā;l⃢⃣檂;檄Ā;e⃪⃭쀀⋛︀s;檔r;쀀\\ud835\\udd24Ā;gٳ؛mel;愷cy;䑓Ȁ;Eajٚℌℎℐ;檒;檥;檤ȀEaesℛℝ℩ℴ;扩pĀ;p℣ℤ檊rox\\xbbℤĀ;q℮ℯ檈Ā;q℮ℛim;拧pf;쀀\\ud835\\udd58Āci⅃ⅆr;愊mƀ;el٫ⅎ⅐;檎;檐茀>;cdlqr׮ⅠⅪⅮⅳⅹĀciⅥⅧ;檧r;橺ot;拗Par;榕uest;橼ʀadelsↄⅪ←ٖ↛ǰ↉\\x00↎pro\\xf8₞r;楸qĀlqؿ↖les\\xf3₈i\\xed٫Āen↣↭rtneqq;쀀≩︀\\xc5↪ԀAabcefkosy⇄⇇⇱⇵⇺∘∝∯≨≽r\\xf2ΠȀilmr⇐⇔⇗⇛rs\\xf0ᒄf\\xbb․il\\xf4کĀdr⇠⇤cy;䑊ƀ;cwࣴ⇫⇯ir;楈;憭ar;意irc;䄥ƀalr∁∎∓rtsĀ;u∉∊晥it\\xbb∊lip;怦con;抹r;쀀\\ud835\\udd25sĀew∣∩arow;椥arow;椦ʀamopr∺∾≃≞≣rr;懿tht;戻kĀlr≉≓eftarrow;憩ightarrow;憪f;쀀\\ud835\\udd59bar;怕ƀclt≯≴≸r;쀀\\ud835\\udcbdas\\xe8⇴rok;䄧Ābp⊂⊇ull;恃hen\\xbbᱛૡ⊣\\x00⊪\\x00⊸⋅⋎\\x00⋕⋳\\x00\\x00⋸⌢⍧⍢⍿\\x00⎆⎪⎴cute耻\\xed䃭ƀ;iyݱ⊰⊵rc耻\\xee䃮;䐸Ācx⊼⊿y;䐵cl耻\\xa1䂡ĀfrΟ⋉;쀀\\ud835\\udd26rave耻\\xec䃬Ȁ;inoܾ⋝⋩⋮Āin⋢⋦nt;樌t;戭fin;槜ta;愩lig;䄳ƀaop⋾⌚⌝ƀcgt⌅⌈⌗r;䄫ƀelpܟ⌏⌓in\\xe5ގar\\xf4ܠh;䄱f;抷ed;䆵ʀ;cfotӴ⌬⌱⌽⍁are;愅inĀ;t⌸⌹戞ie;槝do\\xf4⌙ʀ;celpݗ⍌⍐⍛⍡al;抺Āgr⍕⍙er\\xf3ᕣ\\xe3⍍arhk;樗rod;樼Ȁcgpt⍯⍲⍶⍻y;䑑on;䄯f;쀀\\ud835\\udd5aa;䎹uest耻\\xbf䂿Āci⎊⎏r;쀀\\ud835\\udcbenʀ;EdsvӴ⎛⎝⎡ӳ;拹ot;拵Ā;v⎦⎧拴;拳Ā;iݷ⎮lde;䄩ǫ⎸\\x00⎼cy;䑖l耻\\xef䃯̀cfmosu⏌⏗⏜⏡⏧⏵Āiy⏑⏕rc;䄵;䐹r;쀀\\ud835\\udd27ath;䈷pf;쀀\\ud835\\udd5bǣ⏬\\x00⏱r;쀀\\ud835\\udcbfrcy;䑘kcy;䑔Ѐacfghjos␋␖␢␧␭␱␵␻ppaĀ;v␓␔䎺;䏰Āey␛␠dil;䄷;䐺r;쀀\\ud835\\udd28reen;䄸cy;䑅cy;䑜pf;쀀\\ud835\\udd5ccr;쀀\\ud835\\udcc0஀ABEHabcdefghjlmnoprstuv⑰⒁⒆⒍⒑┎┽╚▀♎♞♥♹♽⚚⚲⛘❝❨➋⟀⠁⠒ƀart⑷⑺⑼r\\xf2৆\\xf2Εail;椛arr;椎Ā;gঔ⒋;檋ar;楢ॣ⒥\\x00⒪\\x00⒱\\x00\\x00\\x00\\x00\\x00⒵Ⓔ\\x00ⓆⓈⓍ\\x00⓹ute;䄺mptyv;榴ra\\xeeࡌbda;䎻gƀ;dlࢎⓁⓃ;榑\\xe5ࢎ;檅uo耻\\xab䂫rЀ;bfhlpst࢙ⓞⓦⓩ⓫⓮⓱⓵Ā;f࢝ⓣs;椟s;椝\\xeb≒p;憫l;椹im;楳l;憢ƀ;ae⓿─┄檫il;椙Ā;s┉┊檭;쀀⪭︀ƀabr┕┙┝rr;椌rk;杲Āak┢┬cĀek┨┪;䁻;䁛Āes┱┳;榋lĀdu┹┻;榏;榍Ȁaeuy╆╋╖╘ron;䄾Ādi═╔il;䄼\\xecࢰ\\xe2┩;䐻Ȁcqrs╣╦╭╽a;椶uoĀ;rนᝆĀdu╲╷har;楧shar;楋h;憲ʀ;fgqs▋▌উ◳◿扤tʀahlrt▘▤▷◂◨rrowĀ;t࢙□a\\xe9⓶arpoonĀdu▯▴own\\xbbњp\\xbb०eftarrows;懇ightƀahs◍◖◞rrowĀ;sࣴࢧarpoon\\xf3྘quigarro\\xf7⇰hreetimes;拋ƀ;qs▋ও◺lan\\xf4বʀ;cdgsব☊☍☝☨c;檨otĀ;o☔☕橿Ā;r☚☛檁;檃Ā;e☢☥쀀⋚︀s;檓ʀadegs☳☹☽♉♋ppro\\xf8Ⓠot;拖qĀgq♃♅\\xf4উgt\\xf2⒌\\xf4ছi\\xedলƀilr♕࣡♚sht;楼;쀀\\ud835\\udd29Ā;Eজ♣;檑š♩♶rĀdu▲♮Ā;l॥♳;楪lk;斄cy;䑙ʀ;achtੈ⚈⚋⚑⚖r\\xf2◁orne\\xf2ᴈard;楫ri;旺Āio⚟⚤dot;䅀ustĀ;a⚬⚭掰che\\xbb⚭ȀEaes⚻⚽⛉⛔;扨pĀ;p⛃⛄檉rox\\xbb⛄Ā;q⛎⛏檇Ā;q⛎⚻im;拦Ѐabnoptwz⛩⛴⛷✚✯❁❇❐Ānr⛮⛱g;柬r;懽r\\xebࣁgƀlmr⛿✍✔eftĀar০✇ight\\xe1৲apsto;柼ight\\xe1৽parrowĀlr✥✩ef\\xf4⓭ight;憬ƀafl✶✹✽r;榅;쀀\\ud835\\udd5dus;樭imes;樴š❋❏st;戗\\xe1ፎƀ;ef❗❘᠀旊nge\\xbb❘arĀ;l❤❥䀨t;榓ʀachmt❳❶❼➅➇r\\xf2ࢨorne\\xf2ᶌarĀ;d྘➃;業;怎ri;抿̀achiqt➘➝ੀ➢➮➻quo;怹r;쀀\\ud835\\udcc1mƀ;egল➪➬;檍;檏Ābu┪➳oĀ;rฟ➹;怚rok;䅂萀<;cdhilqrࠫ⟒☹⟜⟠⟥⟪⟰Āci⟗⟙;檦r;橹re\\xe5◲mes;拉arr;楶uest;橻ĀPi⟵⟹ar;榖ƀ;ef⠀भ᠛旃rĀdu⠇⠍shar;楊har;楦Āen⠗⠡rtneqq;쀀≨︀\\xc5⠞܀Dacdefhilnopsu⡀⡅⢂⢎⢓⢠⢥⢨⣚⣢⣤ઃ⣳⤂Dot;戺Ȁclpr⡎⡒⡣⡽r耻\\xaf䂯Āet⡗⡙;時Ā;e⡞⡟朠se\\xbb⡟Ā;sျ⡨toȀ;dluျ⡳⡷⡻ow\\xeeҌef\\xf4ए\\xf0Ꮡker;斮Āoy⢇⢌mma;権;䐼ash;怔asuredangle\\xbbᘦr;쀀\\ud835\\udd2ao;愧ƀcdn⢯⢴⣉ro耻\\xb5䂵Ȁ;acdᑤ⢽⣀⣄s\\xf4ᚧir;櫰ot肻\\xb7Ƶusƀ;bd⣒ᤃ⣓戒Ā;uᴼ⣘;横ţ⣞⣡p;櫛\\xf2−\\xf0ઁĀdp⣩⣮els;抧f;쀀\\ud835\\udd5eĀct⣸⣽r;쀀\\ud835\\udcc2pos\\xbbᖝƀ;lm⤉⤊⤍䎼timap;抸ఀGLRVabcdefghijlmoprstuvw⥂⥓⥾⦉⦘⧚⧩⨕⨚⩘⩝⪃⪕⪤⪨⬄⬇⭄⭿⮮ⰴⱧⱼ⳩Āgt⥇⥋;쀀⋙̸Ā;v⥐௏쀀≫⃒ƀelt⥚⥲⥶ftĀar⥡⥧rrow;懍ightarrow;懎;쀀⋘̸Ā;v⥻ే쀀≪⃒ightarrow;懏ĀDd⦎⦓ash;抯ash;抮ʀbcnpt⦣⦧⦬⦱⧌la\\xbb˞ute;䅄g;쀀∠⃒ʀ;Eiop඄⦼⧀⧅⧈;쀀⩰̸d;쀀≋̸s;䅉ro\\xf8඄urĀ;a⧓⧔普lĀ;s⧓ସǳ⧟\\x00⧣p肻\\xa0ଷmpĀ;e௹ఀʀaeouy⧴⧾⨃⨐⨓ǰ⧹\\x00⧻;橃on;䅈dil;䅆ngĀ;dൾ⨊ot;쀀⩭̸p;橂;䐽ash;怓΀;Aadqsxஒ⨩⨭⨻⩁⩅⩐rr;懗rĀhr⨳⨶k;椤Ā;oᏲᏰot;쀀≐̸ui\\xf6ୣĀei⩊⩎ar;椨\\xed஘istĀ;s஠டr;쀀\\ud835\\udd2bȀEest௅⩦⩹⩼ƀ;qs஼⩭௡ƀ;qs஼௅⩴lan\\xf4௢i\\xed௪Ā;rஶ⪁\\xbbஷƀAap⪊⪍⪑r\\xf2⥱rr;憮ar;櫲ƀ;svྍ⪜ྌĀ;d⪡⪢拼;拺cy;䑚΀AEadest⪷⪺⪾⫂⫅⫶⫹r\\xf2⥦;쀀≦̸rr;憚r;急Ȁ;fqs఻⫎⫣⫯tĀar⫔⫙rro\\xf7⫁ightarro\\xf7⪐ƀ;qs఻⪺⫪lan\\xf4ౕĀ;sౕ⫴\\xbbశi\\xedౝĀ;rవ⫾iĀ;eచథi\\xe4ඐĀpt⬌⬑f;쀀\\ud835\\udd5f膀\\xac;in⬙⬚⬶䂬nȀ;Edvஉ⬤⬨⬮;쀀⋹̸ot;쀀⋵̸ǡஉ⬳⬵;拷;拶iĀ;vಸ⬼ǡಸ⭁⭃;拾;拽ƀaor⭋⭣⭩rȀ;ast୻⭕⭚⭟lle\\xec୻l;쀀⫽⃥;쀀∂̸lint;樔ƀ;ceಒ⭰⭳u\\xe5ಥĀ;cಘ⭸Ā;eಒ⭽\\xf1ಘȀAait⮈⮋⮝⮧r\\xf2⦈rrƀ;cw⮔⮕⮙憛;쀀⤳̸;쀀↝̸ghtarrow\\xbb⮕riĀ;eೋೖ΀chimpqu⮽⯍⯙⬄୸⯤⯯Ȁ;cerല⯆ഷ⯉u\\xe5൅;쀀\\ud835\\udcc3ortɭ⬅\\x00\\x00⯖ar\\xe1⭖mĀ;e൮⯟Ā;q൴൳suĀbp⯫⯭\\xe5೸\\xe5ഋƀbcp⯶ⰑⰙȀ;Ees⯿ⰀഢⰄ抄;쀀⫅̸etĀ;eഛⰋqĀ;qണⰀcĀ;eലⰗ\\xf1സȀ;EesⰢⰣൟⰧ抅;쀀⫆̸etĀ;e൘ⰮqĀ;qൠⰣȀgilrⰽⰿⱅⱇ\\xecௗlde耻\\xf1䃱\\xe7ృiangleĀlrⱒⱜeftĀ;eచⱚ\\xf1దightĀ;eೋⱥ\\xf1೗Ā;mⱬⱭ䎽ƀ;esⱴⱵⱹ䀣ro;愖p;怇ҀDHadgilrsⲏⲔⲙⲞⲣⲰⲶⳓⳣash;抭arr;椄p;쀀≍⃒ash;抬ĀetⲨⲬ;쀀≥⃒;쀀>⃒nfin;槞ƀAetⲽⳁⳅrr;椂;쀀≤⃒Ā;rⳊⳍ쀀<⃒ie;쀀⊴⃒ĀAtⳘⳜrr;椃rie;쀀⊵⃒im;쀀∼⃒ƀAan⳰⳴ⴂrr;懖rĀhr⳺⳽k;椣Ā;oᏧᏥear;椧ቓ᪕\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00ⴭ\\x00ⴸⵈⵠⵥ⵲ⶄᬇ\\x00\\x00ⶍⶫ\\x00ⷈⷎ\\x00ⷜ⸙⸫⸾⹃Ācsⴱ᪗ute耻\\xf3䃳ĀiyⴼⵅrĀ;c᪞ⵂ耻\\xf4䃴;䐾ʀabios᪠ⵒⵗǈⵚlac;䅑v;樸old;榼lig;䅓Ācr⵩⵭ir;榿;쀀\\ud835\\udd2cͯ⵹\\x00\\x00⵼\\x00ⶂn;䋛ave耻\\xf2䃲;槁Ābmⶈ෴ar;榵Ȁacitⶕ⶘ⶥⶨr\\xf2᪀Āir⶝ⶠr;榾oss;榻n\\xe5๒;槀ƀaeiⶱⶵⶹcr;䅍ga;䏉ƀcdnⷀⷅǍron;䎿;榶pf;쀀\\ud835\\udd60ƀaelⷔ⷗ǒr;榷rp;榹΀;adiosvⷪⷫⷮ⸈⸍⸐⸖戨r\\xf2᪆Ȁ;efmⷷⷸ⸂⸅橝rĀ;oⷾⷿ愴f\\xbbⷿ耻\\xaa䂪耻\\xba䂺gof;抶r;橖lope;橗;橛ƀclo⸟⸡⸧\\xf2⸁ash耻\\xf8䃸l;折iŬⸯ⸴de耻\\xf5䃵esĀ;aǛ⸺s;樶ml耻\\xf6䃶bar;挽ૡ⹞\\x00⹽\\x00⺀⺝\\x00⺢⺹\\x00\\x00⻋ຜ\\x00⼓\\x00\\x00⼫⾼\\x00⿈rȀ;astЃ⹧⹲຅脀\\xb6;l⹭⹮䂶le\\xecЃɩ⹸\\x00\\x00⹻m;櫳;櫽y;䐿rʀcimpt⺋⺏⺓ᡥ⺗nt;䀥od;䀮il;怰enk;怱r;쀀\\ud835\\udd2dƀimo⺨⺰⺴Ā;v⺭⺮䏆;䏕ma\\xf4੶ne;明ƀ;tv⺿⻀⻈䏀chfork\\xbb´;䏖Āau⻏⻟nĀck⻕⻝kĀ;h⇴⻛;愎\\xf6⇴sҀ;abcdemst⻳⻴ᤈ⻹⻽⼄⼆⼊⼎䀫cir;樣ir;樢Āouᵀ⼂;樥;橲n肻\\xb1ຝim;樦wo;樧ƀipu⼙⼠⼥ntint;樕f;쀀\\ud835\\udd61nd耻\\xa3䂣Ԁ;Eaceinosu່⼿⽁⽄⽇⾁⾉⾒⽾⾶;檳p;檷u\\xe5໙Ā;c໎⽌̀;acens່⽙⽟⽦⽨⽾ppro\\xf8⽃urlye\\xf1໙\\xf1໎ƀaes⽯⽶⽺pprox;檹qq;檵im;拨i\\xedໟmeĀ;s⾈ຮ怲ƀEas⽸⾐⽺\\xf0⽵ƀdfp໬⾙⾯ƀals⾠⾥⾪lar;挮ine;挒urf;挓Ā;t໻⾴\\xef໻rel;抰Āci⿀⿅r;쀀\\ud835\\udcc5;䏈ncsp;怈̀fiopsu⿚⋢⿟⿥⿫⿱r;쀀\\ud835\\udd2epf;쀀\\ud835\\udd62rime;恗cr;쀀\\ud835\\udcc6ƀaeo⿸〉〓tĀei⿾々rnion\\xf3ڰnt;樖stĀ;e【】䀿\\xf1Ἑ\\xf4༔઀ABHabcdefhilmnoprstux぀けさすムㄎㄫㅇㅢㅲㆎ㈆㈕㈤㈩㉘㉮㉲㊐㊰㊷ƀartぇおがr\\xf2Ⴓ\\xf2ϝail;検ar\\xf2ᱥar;楤΀cdenqrtとふへみわゔヌĀeuねぱ;쀀∽̱te;䅕i\\xe3ᅮmptyv;榳gȀ;del࿑らるろ;榒;榥\\xe5࿑uo耻\\xbb䂻rր;abcfhlpstw࿜ガクシスゼゾダッデナp;極Ā;f࿠ゴs;椠;椳s;椞\\xeb≝\\xf0✮l;楅im;楴l;憣;憝Āaiパフil;椚oĀ;nホボ戶al\\xf3༞ƀabrョリヮr\\xf2៥rk;杳ĀakンヽcĀekヹ・;䁽;䁝Āes㄂㄄;榌lĀduㄊㄌ;榎;榐Ȁaeuyㄗㄜㄧㄩron;䅙Ādiㄡㄥil;䅗\\xec࿲\\xe2ヺ;䑀Ȁclqsㄴㄷㄽㅄa;椷dhar;楩uoĀ;rȎȍh;憳ƀacgㅎㅟངlȀ;ipsླྀㅘㅛႜn\\xe5Ⴛar\\xf4ྩt;断ƀilrㅩဣㅮsht;楽;쀀\\ud835\\udd2fĀaoㅷㆆrĀduㅽㅿ\\xbbѻĀ;l႑ㆄ;楬Ā;vㆋㆌ䏁;䏱ƀgns㆕ㇹㇼht̀ahlrstㆤㆰ㇂㇘㇤㇮rrowĀ;t࿜ㆭa\\xe9トarpoonĀduㆻㆿow\\xeeㅾp\\xbb႒eftĀah㇊㇐rrow\\xf3࿪arpoon\\xf3Ցightarrows;應quigarro\\xf7ニhreetimes;拌g;䋚ingdotse\\xf1ἲƀahm㈍㈐㈓r\\xf2࿪a\\xf2Ց;怏oustĀ;a㈞㈟掱che\\xbb㈟mid;櫮Ȁabpt㈲㈽㉀㉒Ānr㈷㈺g;柭r;懾r\\xebဃƀafl㉇㉊㉎r;榆;쀀\\ud835\\udd63us;樮imes;樵Āap㉝㉧rĀ;g㉣㉤䀩t;榔olint;樒ar\\xf2㇣Ȁachq㉻㊀Ⴜ㊅quo;怺r;쀀\\ud835\\udcc7Ābu・㊊oĀ;rȔȓƀhir㊗㊛㊠re\\xe5ㇸmes;拊iȀ;efl㊪ၙᠡ㊫方tri;槎luhar;楨;愞ൡ㋕㋛㋟㌬㌸㍱\\x00㍺㎤\\x00\\x00㏬㏰\\x00㐨㑈㑚㒭㒱㓊㓱\\x00㘖\\x00\\x00㘳cute;䅛qu\\xef➺Ԁ;Eaceinpsyᇭ㋳㋵㋿㌂㌋㌏㌟㌦㌩;檴ǰ㋺\\x00㋼;檸on;䅡u\\xe5ᇾĀ;dᇳ㌇il;䅟rc;䅝ƀEas㌖㌘㌛;檶p;檺im;择olint;樓i\\xedሄ;䑁otƀ;be㌴ᵇ㌵担;橦΀Aacmstx㍆㍊㍗㍛㍞㍣㍭rr;懘rĀhr㍐㍒\\xeb∨Ā;oਸ਼਴t耻\\xa7䂧i;䀻war;椩mĀin㍩\\xf0nu\\xf3\\xf1t;朶rĀ;o㍶⁕쀀\\ud835\\udd30Ȁacoy㎂㎆㎑㎠rp;景Āhy㎋㎏cy;䑉;䑈rtɭ㎙\\x00\\x00㎜i\\xe4ᑤara\\xec⹯耻\\xad䂭Āgm㎨㎴maƀ;fv㎱㎲㎲䏃;䏂Ѐ;deglnprካ㏅㏉㏎㏖㏞㏡㏦ot;橪Ā;q኱ኰĀ;E㏓㏔檞;檠Ā;E㏛㏜檝;檟e;扆lus;樤arr;楲ar\\xf2ᄽȀaeit㏸㐈㐏㐗Āls㏽㐄lsetm\\xe9㍪hp;樳parsl;槤Ādlᑣ㐔e;挣Ā;e㐜㐝檪Ā;s㐢㐣檬;쀀⪬︀ƀflp㐮㐳㑂tcy;䑌Ā;b㐸㐹䀯Ā;a㐾㐿槄r;挿f;쀀\\ud835\\udd64aĀdr㑍ЂesĀ;u㑔㑕晠it\\xbb㑕ƀcsu㑠㑹㒟Āau㑥㑯pĀ;sᆈ㑫;쀀⊓︀pĀ;sᆴ㑵;쀀⊔︀uĀbp㑿㒏ƀ;esᆗᆜ㒆etĀ;eᆗ㒍\\xf1ᆝƀ;esᆨᆭ㒖etĀ;eᆨ㒝\\xf1ᆮƀ;afᅻ㒦ְrť㒫ֱ\\xbbᅼar\\xf2ᅈȀcemt㒹㒾㓂㓅r;쀀\\ud835\\udcc8tm\\xee\\xf1i\\xec㐕ar\\xe6ᆾĀar㓎㓕rĀ;f㓔ឿ昆Āan㓚㓭ightĀep㓣㓪psilo\\xeeỠh\\xe9⺯s\\xbb⡒ʀbcmnp㓻㕞ሉ㖋㖎Ҁ;Edemnprs㔎㔏㔑㔕㔞㔣㔬㔱㔶抂;櫅ot;檽Ā;dᇚ㔚ot;櫃ult;櫁ĀEe㔨㔪;櫋;把lus;檿arr;楹ƀeiu㔽㕒㕕tƀ;en㔎㕅㕋qĀ;qᇚ㔏eqĀ;q㔫㔨m;櫇Ābp㕚㕜;櫕;櫓c̀;acensᇭ㕬㕲㕹㕻㌦ppro\\xf8㋺urlye\\xf1ᇾ\\xf1ᇳƀaes㖂㖈㌛ppro\\xf8㌚q\\xf1㌗g;晪ڀ123;Edehlmnps㖩㖬㖯ሜ㖲㖴㗀㗉㗕㗚㗟㗨㗭耻\\xb9䂹耻\\xb2䂲耻\\xb3䂳;櫆Āos㖹㖼t;檾ub;櫘Ā;dሢ㗅ot;櫄sĀou㗏㗒l;柉b;櫗arr;楻ult;櫂ĀEe㗤㗦;櫌;抋lus;櫀ƀeiu㗴㘉㘌tƀ;enሜ㗼㘂qĀ;qሢ㖲eqĀ;q㗧㗤m;櫈Ābp㘑㘓;櫔;櫖ƀAan㘜㘠㘭rr;懙rĀhr㘦㘨\\xeb∮Ā;oਫ਩war;椪lig耻\\xdf䃟௡㙑㙝㙠ዎ㙳㙹\\x00㙾㛂\\x00\\x00\\x00\\x00\\x00㛛㜃\\x00㜉㝬\\x00\\x00\\x00㞇ɲ㙖\\x00\\x00㙛get;挖;䏄r\\xeb๟ƀaey㙦㙫㙰ron;䅥dil;䅣;䑂lrec;挕r;쀀\\ud835\\udd31Ȁeiko㚆㚝㚵㚼ǲ㚋\\x00㚑eĀ4fኄኁaƀ;sv㚘㚙㚛䎸ym;䏑Ācn㚢㚲kĀas㚨㚮ppro\\xf8዁im\\xbbኬs\\xf0ኞĀas㚺㚮\\xf0዁rn耻\\xfe䃾Ǭ̟㛆⋧es膀\\xd7;bd㛏㛐㛘䃗Ā;aᤏ㛕r;樱;樰ƀeps㛡㛣㜀\\xe1⩍Ȁ;bcf҆㛬㛰㛴ot;挶ir;櫱Ā;o㛹㛼쀀\\ud835\\udd65rk;櫚\\xe1㍢rime;怴ƀaip㜏㜒㝤d\\xe5ቈ΀adempst㜡㝍㝀㝑㝗㝜㝟ngleʀ;dlqr㜰㜱㜶㝀㝂斵own\\xbbᶻeftĀ;e⠀㜾\\xf1म;扜ightĀ;e㊪㝋\\xf1ၚot;旬inus;樺lus;樹b;槍ime;樻ezium;揢ƀcht㝲㝽㞁Āry㝷㝻;쀀\\ud835\\udcc9;䑆cy;䑛rok;䅧Āio㞋㞎x\\xf4᝷headĀlr㞗㞠eftarro\\xf7ࡏightarrow\\xbbཝऀAHabcdfghlmoprstuw㟐㟓㟗㟤㟰㟼㠎㠜㠣㠴㡑㡝㡫㢩㣌㣒㣪㣶r\\xf2ϭar;楣Ācr㟜㟢ute耻\\xfa䃺\\xf2ᅐrǣ㟪\\x00㟭y;䑞ve;䅭Āiy㟵㟺rc耻\\xfb䃻;䑃ƀabh㠃㠆㠋r\\xf2Ꭽlac;䅱a\\xf2ᏃĀir㠓㠘sht;楾;쀀\\ud835\\udd32rave耻\\xf9䃹š㠧㠱rĀlr㠬㠮\\xbbॗ\\xbbႃlk;斀Āct㠹㡍ɯ㠿\\x00\\x00㡊rnĀ;e㡅㡆挜r\\xbb㡆op;挏ri;旸Āal㡖㡚cr;䅫肻\\xa8͉Āgp㡢㡦on;䅳f;쀀\\ud835\\udd66̀adhlsuᅋ㡸㡽፲㢑㢠own\\xe1ᎳarpoonĀlr㢈㢌ef\\xf4㠭igh\\xf4㠯iƀ;hl㢙㢚㢜䏅\\xbbᏺon\\xbb㢚parrows;懈ƀcit㢰㣄㣈ɯ㢶\\x00\\x00㣁rnĀ;e㢼㢽挝r\\xbb㢽op;挎ng;䅯ri;旹cr;쀀\\ud835\\udccaƀdir㣙㣝㣢ot;拰lde;䅩iĀ;f㜰㣨\\xbb᠓Āam㣯㣲r\\xf2㢨l耻\\xfc䃼angle;榧ހABDacdeflnoprsz㤜㤟㤩㤭㦵㦸㦽㧟㧤㧨㧳㧹㧽㨁㨠r\\xf2ϷarĀ;v㤦㤧櫨;櫩as\\xe8ϡĀnr㤲㤷grt;榜΀eknprst㓣㥆㥋㥒㥝㥤㦖app\\xe1␕othin\\xe7ẖƀhir㓫⻈㥙op\\xf4⾵Ā;hᎷ㥢\\xefㆍĀiu㥩㥭gm\\xe1㎳Ābp㥲㦄setneqĀ;q㥽㦀쀀⊊︀;쀀⫋︀setneqĀ;q㦏㦒쀀⊋︀;쀀⫌︀Āhr㦛㦟et\\xe1㚜iangleĀlr㦪㦯eft\\xbbथight\\xbbၑy;䐲ash\\xbbံƀelr㧄㧒㧗ƀ;beⷪ㧋㧏ar;抻q;扚lip;拮Ābt㧜ᑨa\\xf2ᑩr;쀀\\ud835\\udd33tr\\xe9㦮suĀbp㧯㧱\\xbbജ\\xbb൙pf;쀀\\ud835\\udd67ro\\xf0໻tr\\xe9㦴Ācu㨆㨋r;쀀\\ud835\\udccbĀbp㨐㨘nĀEe㦀㨖\\xbb㥾nĀEe㦒㨞\\xbb㦐igzag;榚΀cefoprs㨶㨻㩖㩛㩔㩡㩪irc;䅵Ādi㩀㩑Ābg㩅㩉ar;機eĀ;qᗺ㩏;扙erp;愘r;쀀\\ud835\\udd34pf;쀀\\ud835\\udd68Ā;eᑹ㩦at\\xe8ᑹcr;쀀\\ud835\\udcccૣណ㪇\\x00㪋\\x00㪐㪛\\x00\\x00㪝㪨㪫㪯\\x00\\x00㫃㫎\\x00㫘ៜ៟tr\\xe9៑r;쀀\\ud835\\udd35ĀAa㪔㪗r\\xf2σr\\xf2৶;䎾ĀAa㪡㪤r\\xf2θr\\xf2৫a\\xf0✓is;拻ƀdptឤ㪵㪾Āfl㪺ឩ;쀀\\ud835\\udd69im\\xe5ឲĀAa㫇㫊r\\xf2ώr\\xf2ਁĀcq㫒ីr;쀀\\ud835\\udccdĀpt៖㫜r\\xe9។Ѐacefiosu㫰㫽㬈㬌㬑㬕㬛㬡cĀuy㫶㫻te耻\\xfd䃽;䑏Āiy㬂㬆rc;䅷;䑋n耻\\xa5䂥r;쀀\\ud835\\udd36cy;䑗pf;쀀\\ud835\\udd6acr;쀀\\ud835\\udcceĀcm㬦㬩y;䑎l耻\\xff䃿Ԁacdefhiosw㭂㭈㭔㭘㭤㭩㭭㭴㭺㮀cute;䅺Āay㭍㭒ron;䅾;䐷ot;䅼Āet㭝㭡tr\\xe6ᕟa;䎶r;쀀\\ud835\\udd37cy;䐶grarr;懝pf;쀀\\ud835\\udd6bcr;쀀\\ud835\\udccfĀjn㮅㮇;怍j;怌'.split(\"\").map((c)=>c.charCodeAt(0))); //# sourceMappingURL=decode-data-html.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/node_modules/entities/dist/esm/generated/decode-data-html.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/parse5/node_modules/entities/dist/esm/generated/decode-data-xml.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/parse5/node_modules/entities/dist/esm/generated/decode-data-xml.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   xmlDecodeTree: () => (/* binding */ xmlDecodeTree)\n/* harmony export */ });\n// Generated using scripts/write-decode-map.ts\nconst xmlDecodeTree = /* #__PURE__ */ new Uint16Array(// prettier-ignore\n/* #__PURE__ */ \"Ȁaglq\t\\x15\\x18\\x1bɭ\\x0f\\x00\\x00\\x12p;䀦os;䀧t;䀾t;䀼uot;䀢\".split(\"\").map((c)=>c.charCodeAt(0))); //# sourceMappingURL=decode-data-xml.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvcGFyc2U1L25vZGVfbW9kdWxlcy9lbnRpdGllcy9kaXN0L2VzbS9nZW5lcmF0ZWQvZGVjb2RlLWRhdGEteG1sLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSw4Q0FBOEM7QUFDdkMsTUFBTUEsZ0JBQWdCLGFBQWEsR0FBRyxJQUFJQyxZQUNqRCxrQkFBa0I7QUFDbEIsYUFBYSxHQUFHLHdEQUNYQyxLQUFLLENBQUMsSUFDTkMsR0FBRyxDQUFDLENBQUNDLElBQU1BLEVBQUVDLFVBQVUsQ0FBQyxLQUFLLENBQ2xDLDJDQUEyQyIsInNvdXJjZXMiOlsid2VicGFjazovL2JlbnRvLWdyaWQtZ2VuZXJhdG9yLy4vbm9kZV9tb2R1bGVzL3BhcnNlNS9ub2RlX21vZHVsZXMvZW50aXRpZXMvZGlzdC9lc20vZ2VuZXJhdGVkL2RlY29kZS1kYXRhLXhtbC5qcz83YTgyIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEdlbmVyYXRlZCB1c2luZyBzY3JpcHRzL3dyaXRlLWRlY29kZS1tYXAudHNcbmV4cG9ydCBjb25zdCB4bWxEZWNvZGVUcmVlID0gLyogI19fUFVSRV9fICovIG5ldyBVaW50MTZBcnJheShcbi8vIHByZXR0aWVyLWlnbm9yZVxuLyogI19fUFVSRV9fICovIFwiXFx1MDIwMGFnbHFcXHRcXHgxNVxceDE4XFx4MWJcXHUwMjZkXFx4MGZcXDBcXDBcXHgxMnA7XFx1NDAyNm9zO1xcdTQwMjd0O1xcdTQwM2V0O1xcdTQwM2N1b3Q7XFx1NDAyMlwiXG4gICAgLnNwbGl0KFwiXCIpXG4gICAgLm1hcCgoYykgPT4gYy5jaGFyQ29kZUF0KDApKSk7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kZWNvZGUtZGF0YS14bWwuanMubWFwIl0sIm5hbWVzIjpbInhtbERlY29kZVRyZWUiLCJVaW50MTZBcnJheSIsInNwbGl0IiwibWFwIiwiYyIsImNoYXJDb2RlQXQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/parse5/node_modules/entities/dist/esm/generated/decode-data-xml.js\n");

/***/ })

};
;